<?xml version="1.0" encoding="UTF-8"?>
<!--For PDF version (standard)-->
<!-- <?xml-stylesheet href="docbook/xsl/fo/docbook.xsl" type="text/xsl" ?>-->
<!--For PDF version-->
<!-- <?xml-stylesheet href="ONVIF-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<!--For online version-->
<?xml-stylesheet href="docbook-css/docbook.xsl" type="text/xsl" ?>
<!--For PDF version - New ONVIF-->
<!--<?xml-stylesheet href="../ONVIFNew-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xml="http://www.w3.org/XML/1998/namespace" xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd" version="0.1" xml:id="ONVIF_RTSS_Media2_Device_TS">
  <info>
    <orgname>
      <phrase>
        <trademark class="registered">ONVIF</trademark>
      </phrase>
    </orgname>
    <title>Real Time Streaming using Media2 Device Test Specification</title>
    <titleabbrev>RT Streaming (Media2) Device Test Spec</titleabbrev>
    <subtitle>Version 21.06</subtitle>
    <date>June 2021</date>
    <copyright>
      <year>2021</year>
      <holder>ONVIF, Inc. All rights reserved.</holder>
    </copyright>
    <address>
      <uri>www.onvif.org</uri>
    </address>
    <legalnotice role="notices">
      <para>
        Recipients of this document may copy, distribute, publish, or display this
        document so long as this copyright notice, license and disclaimer are retained with
        all copies of the document. No license is granted to modify this document.
      </para>
      <para>
        THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR
        AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
        NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
        NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY
        PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS,
        COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
      </para>
      <para>
        IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR
        ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES,
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR
        NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE
        POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT. THE
        FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR
        LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE
        AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE
        CORPORATION.
      </para>
    </legalnotice>
    <revhistory>
      <revision>
        <revnumber>16.06</revnumber>
        <date>Apr, 2016</date>
        <revdescription>
          <para>
            Original publication
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.07</revnumber>
        <date>Jun, 2016</date>
        <revdescription>
          <para>
            Small changes based on feedback received.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.07</revnumber>
        <date>Jul 8, 2016</date>
        <revdescription>
          <para>
            Added G.711 and AAC RTP-Multicast tests for IPv4 and IPv6 (4.2.8, 4.2.9, 4.2.15, 4.2.16)
          </para>
          <para>
            Section 4.5 (Start and Stop Multicast streaming) deleted
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.07</revnumber>
        <date>Jul 28, 2016</date>
        <revdescription>
          <para>
            Review comments implemented.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.07</revnumber>
        <date>Aug 8, 2016</date>
        <revdescription>
          <para>
            More comments and spelling errors.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Sep, 2016</date>
        <revdescription>
          <para>
            Added the test cases for H.264, H.265, G.711, and AAC streaming over HTTPS:
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSPS/HTTP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSPS/HTTP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Nov, 2016</date>
        <revdescription>
          <para>
            Added the test cases for H.265:
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/UDP)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/HTTP/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP/RTSP/TCP)
          </para>
          <para>
            MEDIA2 SET SYNCHRONIZATION POINT – H.265
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/UDP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/HTTP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP/RTSP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Multicast, IPv4)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Multicast, IPv6)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Nov, 2016</date>
        <revdescription>
          <para>
            Test IDs were updated according #1253.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Jan 19, 2017</date>
        <revdescription>
          <para>
            Test specification was converted to new format.
          </para>
          <para>
            HTTPS test cases were updated according comments to ticket #1168:
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSPS/HTTPS/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSPS/HTTPS/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Feb 06, 2017</date>
        <revdescription>
          <para>
            Multicast test cases were updated according to ticket #1297:
          </para>
          <para>
            MEDIA2 STREAMING - H.264 (RTSPMulticast, IPv4)
          </para>
          <para>
            MEDIA2 STREAMING - H.264 (RTP-Multicast,IPv6)
          </para>
          <para>
            MEDIA2 STREAMING - H.265 (RTSPMulticast, IPv4)
          </para>
          <para>
            MEDIA2 STREAMING - H.265 (RTP-Multicast,IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Multicast, IPv4)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Multicast, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Multicast, IPv4)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Multicast, IPv6)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Feb 09, 2017</date>
        <revdescription>
          <para>
            All Video Streaming test cases were updated according to ticket #1306.
          </para>
          <para>
            Annex A.6 Media2 Service Profile Configuration for Video Streaming was updated according to ticket #1306.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Feb 20, 2017</date>
        <revdescription>
          <para>
            Audio backchannel test cases were added according to ticket #1164:
          </para>
          <para>
            BACKCHANNEL – G.711 (RTP-Unicast/UDP, IPv4)
          </para>
          <para>
            BACKCHANNEL – G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv4)
          </para>
          <para>
            BACKCHANNEL – G.711 (RTP/RTSP/TCP, IPv4)
          </para>
          <para>
            BACKCHANNEL – AAC (RTP-Unicast/UDP, IPv4)
          </para>
          <para>
            BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv4)
          </para>
          <para>
            BACKCHANNEL – AAC (RTP/RTSP/TCP, IPv4)
          </para>
          <para>
            BACKCHANNEL – G.711 (RTP-Multicast/UDP, IPv4)
          </para>
          <para>
            BACKCHANNEL – AAC (RTP-Multicast/UDP, IPv4)
          </para>
          <para>
            BACKCHANNEL – G.711 (RTP-Unicast/UDP, IPv6)
          </para>
          <para>
            BACKCHANNEL – G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv6)
          </para>
          <para>
            BACKCHANNEL – G.711 (RTP/RTSP/TCP, IPv6)
          </para>
          <para>
            BACKCHANNEL – AAC (RTP-Unicast/UDP, IPv6)
          </para>
          <para>
            BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6)
          </para>
          <para>
            BACKCHANNEL – AAC (RTP/RTSP/TCP, IPv6)
          </para>
          <para>
            BACKCHANNEL – G.711 (RTP-Multicast/UDP, IPv6)
          </para>
          <para>
            BACKCHANNEL – AAC (RTP-Multicast/UDP, IPv6)
          </para>
          <para>Scope/Real Time Streaming section was updated to include audio backchannel streaming.</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Mar 10, 2017</date>
        <revdescription>
          <para>
            Metadata Streaming test cases were added according to ticket #1158:
          </para>
          <para>
            METADATA STREAMING (RTP-Unicast/UDP)
          </para>
          <para>
            METADATA STREAMING (RTP-Unicast/RTSP/HTTP/TCP)
          </para>
          <para>
            METADATA STREAMING (RTP/RTSP/TCP)
          </para>
          <para>
            METADATA STREAMING - SET SYNCHRONIZATION POINT
          </para>
          <para>
            METADATA STREAMING (RTP-Unicast/UDP, IPv6)
          </para>
          <para>
            METADATA STREAMING (RTP-Unicast/RTSP/HTTP/TCP, IPv6)
          </para>
          <para>
            METADATA STREAMING (RTP/RTSP/TCP, IPv6)
          </para>
          <para>
            METADATA STREAMING (RTP-Multicast/UDP)
          </para>
          <para>
            METADATA STREAMING (RTP-Multicast/UDP, IPv6)
          </para>
          <para>Scope/Real Time Streaming section was updated to include metadata streaming.</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Apr 24, 2017</date>
        <revdescription>
          <para>
            Annex A.17 added and Annex A.39 updated to add more description.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Apr 27, 2017</date>
        <revdescription>
          <para>
            Typo fixes according #1168.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>May 26, 2017</date>
        <revdescription>
          <para>
            The following test cases were added according to #1322:
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/WebSockets)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/WebSockets)
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/WebSockets, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/WebSockets, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/WebSockets)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Jun 5, 2017</date>
        <revdescription>
          <para>
            The following test cases were added according to #1322:
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/WebSockets)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/WebSockets, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/WebSockets, IPv6)
          </para>
          <para>
            BACKCHANNEL – G.711 (RTP-Unicast/RTSP/WebSockets)
          </para>
          <para>
            BACKCHANNEL – AAC (RTP-Unicast/RTSP/WebSockets)
          </para>
          <para>
            BACKCHANNEL – G.711 (RTP-Unicast/RTSP/WebSockets, IPv6)
          </para>
          <para>
            BACKCHANNEL – AAC (RTP-Unicast/RTSP/WebSockets, IPv6)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Jun 20, 2017</date>
        <revdescription>
          <para>
            The following test cases and Annexes were changed according to #1315:
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Unicast/UDP)
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/HTTP/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP/RTSP/TCP)
          </para>
          <para>
            MEDIA2 SET SYNCHRONIZATION POINT – H.264
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Unicast/UDP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/HTTP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP/RTSP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/UDP)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/HTTP/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP/RTSP/TCP)
          </para>
          <para>
            MEDIA2 SET SYNCHRONIZATION POINT – H.265
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/UDP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/HTTP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP/RTSP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Multicast, IPv4)
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Multicast, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Multicast, IPv4)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Multicast, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Unicast/UDP)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/HTTP/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP/RTSP/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Unicast/UDP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP/RTSP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Unicast/UDP)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTP/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP/RTSP/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Unicast/UDP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP/RTSP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Multicast, IPv4)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Multicast, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Multicast, IPv4)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Multicast, IPv6)
          </para>
          <para>
            Annex A.40 Device Configuration for Video Streaming
          </para>
          <para>
            Annex A.41 Device Configuration for Audio Streaming
          </para>
          <para>
            Annex A.42 Backchannel Streaming over WebSocket
          </para>
          <para>
            Annex A.43 Configuring HTTPS if Required was added according to #1315
          </para>
          <para>
            Annex A.44 Removing Configurations from Media Profile was added according to #1315
          </para>

        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jun 21, 2018</date>
        <revdescription>
          <para>Reformatting document using new template</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Jul 10, 2017</date>
        <revdescription>
          <para>
            The following Annexes were changed to check stream uri to #1346:
          </para>
          <para>
            Annex A.20 Media2 Service – Media Profile Configuration for Audio Backchannel Streaming
          </para>
          <para>
            Annex A.31 Media2 Service – Media Profile Configuration for Metadata Streaming
          </para>
          <para>
            Annex A.40 Get Stream Uri
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Aug 1, 2017</date>
        <revdescription>
          <para>
            The following test cases and Annexes were added according to #1348:
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – G.711 (RTP-Unicast/UDP)
          </para>
          <para>
            MEDIA2_RTSS-5-1-1 MEDIA2 STREAMING – H.26X/G.711 (RTP-Unicast/UDP)
          </para>
          <para>
            Annex A.45 Removing Configurations from Media Profile
          </para>
          <para>
            Annex A.46 Device Configuration for Audio Streaming using Media Profile that contains only Audio Configurations
          </para>
          <para>
            Annex A.47 Device Configuration for Video and Audio Streaming
          </para>
          <para>
            Annex A.48 Media2 Service – Adding AudioSource and AudioEncoder configurations to Media Profile
          </para>
          <para>
            The following Annexes were changed according to #1348:
          </para>
          <para>
            Annex A.10 Media Streaming over RTP-Unicast/UDP
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Aug 31, 2017</date>
        <revdescription>
          <para>
            The following Annex was added according to #1285:
          </para>
          <para>
            Annex A.49 RTSP Authentication Check
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Oct 04, 2017</date>
        <revdescription>
          <para>
            The following test cases were removed according to #1474:
          </para>
          <para>
            BACKCHANNEL – G.711 (RTP-Multicast/UDP, IPv4)
          </para>
          <para>
            BACKCHANNEL – G.711 (RTP-Multicast/UDP, IPv6)
          </para>
          <para>
            BACKCHANNEL – AAC (RTP-Multicast/UDP, IPv4)
          </para>
          <para>
            BACKCHANNEL – AAC (RTP-Multicast/UDP, IPv6)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Oct 13, 2017</date>
        <revdescription>
          <para>
            Pre-Requisite of the following test cases and Annex were updated according to #1475:
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
          <para>
            Annex A.44 Configuring HTTPS if Required
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Oct 19, 2017</date>
        <revdescription>
          <para>
            The following test cases and Annexes were added according to #1348:
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – G.711 (RTP-Unicast/RTSP/HTTP/TCP)
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – G.711 (RTP/RTSP/TCP)
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – G.711 (RTP-Unicast/UDP, IPv6)
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – G.711 (RTP/RTSP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – AAC (RTP-Unicast/UDP)
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – AAC (RTP-Unicast/RTSP/HTTP/TCP)
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – AAC (RTP/RTSP/TCP)
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – AAC (RTP-Unicast/UDP, IPv6)
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – AAC (RTP/RTSP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – G.711 (RTP-Multicast, IPv4)
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – G.711 (RTP-Multicast, IPv6)
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – AAC (RTP-Multicast, IPv4)
          </para>
          <para>
            MEDIA2 AUDIO STREAMING – AAC (RTP-Multicast, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/G.711 (RTP-Unicast/RTSP/HTTP/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/G.711 (RTP/RTSP/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/G.711 (RTP-Unicast/UDP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/G.711 (RTP/RTSP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/AAC (RTP-Unicast/UDP)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/AAC (RTP-Unicast/RTSP/HTTP/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/AAC (RTP/RTSP/TCP)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/AAC (RTP-Unicast/UDP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/AAC (RTP/RTSP/TCP, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/G.711 (RTP-Multicast, IPv4)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/G.711 (RTP-Multicast, IPv6)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/AAC (RTP-Multicast, IPv4)
          </para>
          <para>
            MEDIA2 STREAMING – H.26X/AAC (RTP-Multicast, IPv6)
          </para>
          <para>
            The following test cases and Annexes were updated according to #1348:
          </para>
          <para>
            MEDIA2_RTSS-5-1-1 MEDIA2 STREAMING – H.26X/G.711 (RTP-Unicast/UDP)
          </para>
          <para>
            Annex A.10 Media Streaming over RTP-Unicast/UDP
          </para>
          <para>
            Annex A.11 Media Streaming over RTP-Unicast/RTSP/HTTP/TCP
          </para>
          <para>
            Annex A.12 Media Streaming over RTP/RTSP/TCP
          </para>
          <para>
            Annex A.13 Media Streaming over RTP-Multicast
          </para>
          <para>
            Annex A.47 Device Configuration for Video and Audio Streaming
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Oct 30, 2017</date>
        <revdescription>
          <para>
            The following test cases and Annexes were added according to #1501:
          </para>
          <para>
            BACKCHANNEL – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv4)
          </para>
          <para>
            BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv4)
          </para>
          <para>
            BACKCHANNEL – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
          <para>
            BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
          <para>
            Annex A.50 Audio Backchannel over RTP-Unicast/RTSP/HTTPS/TCP
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Oct 31, 2017</date>
        <revdescription>
          <para>
            The following test cases and Annexes were added according to #1497:
          </para>
          <para>
            METADATA STREAMING (RTP-Unicast/RTSP/HTTPS/TCP)
          </para>
          <para>
            METADATA STREAMING (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)
          </para>
          <para>
            Annex A.51 Metadata Streaming over RTP-Unicast/RTSP/HTTPS/TCP
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Oct 31, 2017</date>
        <revdescription>
          <para>
            The following test cases and Annexes were added according to #1498:
          </para>
          <para>
            METADATA STREAMING (RTP-Unicast/RTSP/WebSockets)
          </para>
          <para>
            METADATA STREAMING (RTP-Unicast/RTSP/WebSockets, IPv6)
          </para>
          <para>
            Annex A.52 Metadata Streaming over WebSocket
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Nov 29, 2017</date>
        <revdescription>
          <para>
            The following test cases and Annexes were added according to #1409:
          </para>
          <para>
            MEDIA2_RTSS-1-1-23 VIDEO ENCODER INSTANCES
          </para>
          <para>
            MEDIA2_RTSS-1-1-24 VIDEO ENCODER INSTANCES - H.264
          </para>
          <para>
            MEDIA2_RTSS-1-1-25 VIDEO ENCODER INSTANCES - H.265
          </para>
          <para>
            Annex A.53 Remove all non-fixed Media Profiles and remove all configurations from fixed Media Profiles was removed
          </para>
          <para>
            Annex A.55 Create New Media Profiles to Get Guaranteed Number of Media Profiles for Video Source Configuration
          </para>
          <para>
            Annex A.54 Get Video Source Configurations List
          </para>
          <para>
            Annex A.56 Concurrent Video Streaming over RTP-Unicast/UDP
          </para>
          <para>
            Annex A.57 Concurrent Video Streaming over RTP-Unicast/UDP
          </para>
          <para>
            Annex A.58 Create New Media Profiles to Get Guaranteed Number of Media Profiles for Video Source Configuration for Specified Encoding
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Nov 30, 2017</date>
        <revdescription>
          <para>
            Annex A.41 Device Configuration for Video Streaming was updated according to #1536
          </para>

        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jan 10, 2018</date>
        <revdescription>
          <para>
            The following were updated according to #1549:
          </para>
          <para>
            Annex A.37 Removing Video Encoder Configuration and Audio Encoder Configuration from Media Profile was removed
          </para>
          <para>
            Annex A.31 Media2 Service – Media Profile Configuration for Metadata Streaming was updated with (step 11 added).
          </para>
          <para>
            MEDIA2_RTSS-4-2-1 METADATA STREAMING (RTP-Multicast/UDP) was updated (step 4 removed).
          </para>
          <para>
            MEDIA2_RTSS-4-2-2 METADATA STREAMING (RTP-Multicast/UDP, IPv6) was updated (step 5 removed).
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jan 11, 2018</date>
        <revdescription>
          <para>
            The following were updated according to #1555:
          </para>
          <para>
            Annex A.39 Get Stream Uri
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jan 24, 2018</date>
        <revdescription>
          <para>
            The following were updated according to #1568:
          </para>
          <para>
            MEDIA2_RTSS-2-1-22 MEDIA2 AUDIO STREAMING – G.711 (RTP-Unicast/RTSP/HTTP/TCP) (removed)
          </para>
          <para>
            MEDIA2_RTSS-2-1-23 MEDIA2 AUDIO STREAMING – G.711 (RTP/RTSP/TCP) (removed)
          </para>
          <para>
            MEDIA2_RTSS-2-1-24 MEDIA2 AUDIO STREAMING – G.711 (RTP-Unicast/UDP, IPv6) (removed)
          </para>
          <para>
            MEDIA2_RTSS-2-1-25 MEDIA2 AUDIO STREAMING – G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv6) (removed)
          </para>
          <para>
            MEDIA2_RTSS-2-1-26 MEDIA2 AUDIO STREAMING – G.711 (RTP/RTSP/TCP, IPv6) (removed)
          </para>
          <para>
            MEDIA2_RTSS-2-1-27 MEDIA2 AUDIO STREAMING – AAC (RTP-Unicast/UDP) (removed)
          </para>
          <para>
            MEDIA2_RTSS-2-1-28 MEDIA2 AUDIO STREAMING – AAC (RTP-Unicast/RTSP/HTTP/TCP) (removed)
          </para>
          <para>
            MEDIA2_RTSS-2-1-29 MEDIA2 AUDIO STREAMING – AAC (RTP/RTSP/TCP) (removed)
          </para>
          <para>
            MEDIA2_RTSS-2-1-30 MEDIA2 AUDIO STREAMING – AAC (RTP-Unicast/UDP, IPv6) (removed)
          </para>
          <para>
            MEDIA2_RTSS-2-1-31 MEDIA2 AUDIO STREAMING – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6) (removed)
          </para>
          <para>
            MEDIA2_RTSS-2-1-32 MEDIA2 AUDIO STREAMING – AAC (RTP/RTSP/TCP, IPv6) (removed)
          </para>
          <para>
            MEDIA2_RTSS-2-2-5 MEDIA2 AUDIO STREAMING – G.711 (RTP-Multicast, IPv4) (removed)
          </para>
          <para>
            MEDIA2_RTSS-2-2-6 MEDIA2 AUDIO STREAMING – G.711 (RTP-Multicast, IPv6) (removed)
          </para>
          <para>
            MEDIA2_RTSS-2-2-7 MEDIA2 AUDIO STREAMING – AAC (RTP-Multicast, IPv4) (removed)
          </para>
          <para>
            MEDIA2_RTSS-2-2-8 MEDIA2 AUDIO STREAMING – AAC (RTP-Multicast, IPv6) (removed)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jan 24, 2018</date>
        <revdescription>
          <para>
            Annex A.6 Media2 Service Profile Configuration for Video Streaming was updated according to #1554.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Feb 06, 2018</date>
        <revdescription>
          <para>
            The following were updated according to #1550:
          </para>
          <para>
            Annex A.46 Device Configuration for Video and Audio Streaming (Resolution and FrameRateLimit settings were updated for step 3)
          </para>
          <para>
            Annex A.40 Device Configuration for Video Streaming (Resolution and FrameRateLimit settings were updated for step 3)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Mar 15, 2018</date>
        <revdescription>
          <para>timeout1 variable was renamed to operationDelay variable</para>
          <para>
            The following were updated according to #1562:
          </para>
          <para>
            Annex A.15 Configuring HTTPS using Advanced Security (steps 1-3 were added)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Mar 15, 2018</date>
        <revdescription>
          <para>
            The following were updated according to #1586:
          </para>
          <para>
            Annex A.18 Create an RSA key pair (steps 6.1 and 7 were updated)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Apr 10, 2018</date>
        <revdescription>
          <para>
            Annex A.48 RTSP Authentication Check was updated according to #1590.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Apr 17, 2018</date>
        <revdescription>
          <para>
            The following were updated according to #1615:
          </para>
          <para>
            Annex A.38 Provide CA certificate (step 1 added, step 3 updated)
          </para>
          <para>
            Annex A.58 Determine RSA key length (added)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Apr 18, 2018</date>
        <revdescription>
          <para>
            The following were updated according to #1595:
          </para>
          <para>
            Annex A.30 Media Streaming over WebSocket (step 1 added)
          </para>
          <para>
            Annex A.59 Get WebSocket URI (added)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>May 15, 2018</date>
        <revdescription>
          <para>
            The following were updated according to #1593:
          </para>
          <para>
            Annex A.16 Add server certificate assignment with corresponding certification path, self-signed certificate and RSA key pair (step 8 added, note added)
          </para>
          <para>
            Annex A.17 Add server certificate assignment with corresponding certification path, CA certificate and RSA key pair (step 12 added, note added)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jun 21, 2018</date>
        <revdescription>
          <para>Reformatting document using new template</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Nov 15, 2018</date>
        <revdescription>
          <para>
            The following were updated according to #1653:
          </para>
          <para>
            Pre-Requisites for all test cases ("Advanced Security Service is received from the DUT, if TLS Server is supported by DUT." was replaced with "Security Configuration Service is received from the DUT, if TLS Server is supported by DUT.")
          </para>
          <para>
            For all test cases Pre-Requisites were updated ("Advanced Security Service is received from the DUT." was replaced with "Security Configuration Service is received from the DUT.")
          </para>
          <para>
            Annex A.15 Configuring HTTPS using Advanced Security ("Advanced Security Service" was replaced with "Security Configuration Service" in many places)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.12</revnumber>
        <date>Dec 21, 2018</date>
        <revdescription>
          <para>Switching Hub description in 'Network Configuration for DUT' section was updated according to #1737</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.12</revnumber>
        <date>Dec 24, 2018</date>
        <revdescription>
          <para>The following annexes were updated to be consistency with implementation according to #1697:</para>
          <para>A.22 Audio Backchannel over RTP-Unicast/RTSP/HTTP/TCP (step 9: connection2 was replaced with connection1)</para>
          <para>A.49 Audio Backchannel over RTP-Unicast/RTSP/HTTPS/TCP (step 9: connection2 was replaced with connection1)</para>
          <para>The following were added according to #1697:</para>
          <para>A.60 Audio Backchannel by POST over RTP-Unicast/RTSP/HTTP/TCP</para>
          <para>A.61 Audio Backchannel by POST over RTP-Unicast/RTSP/HTTPS/TCP</para>
          <para>BACKCHANNEL STREAMING BY POST – G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv4)</para>
          <para>BACKCHANNEL STREAMING BY POST – G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv6)</para>
          <para>BACKCHANNEL STREAMING BY POST – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv4)</para>
          <para>BACKCHANNEL STREAMING BY POST – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6)</para>
          <para>BACKCHANNEL STREAMING BY POST – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv4)</para>
          <para>BACKCHANNEL STREAMING BY POST – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv4)</para>
          <para>BACKCHANNEL STREAMING BY POST – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)</para>
          <para>BACKCHANNEL STREAMING BY POST – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>19.06</revnumber>
        <date>Apr 11, 2019</date>
        <revdescription>
          <para>The following annexes were updated according to #1764:</para>
          <para>A.7 Media2 Service – Media Profile Configuration for Audio Streaming (step 3.3 and step 4.3.5.3 added)</para>
          <para>A.41 Device Configuration for Audio Streaming (Returns parameters changed, step 3 added)</para>
          <para>A.20 Media2 Service – Media Profile Configuration for Audio Backchannel Streaming (Returns parameters changed, step 3.7 added, step 4.3.9.3 added)</para>
          <para>A.47 Media2 Service – Adding AudioSource and AudioEncoder configurations to Media Profile (step 5.5.3 added)</para>
          <para>A.46 Device Configuration for Video and Audio Streaming (Returns parameters changed, step 6 added)</para>
          <para>MEDIA2_RTSS-2-1-7 MEDIA2 STREAMING – AAC (RTP-Unicast/UDP) (step 3 and step 4 changed)</para>
          <para>MEDIA2_RTSS-2-1-8 MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTP/TCP) (step 3 and step 4 changed)</para>
          <para>MEDIA2_RTSS-2-1-9 MEDIA2 STREAMING – AAC (RTP/RTSP/TCP) (step 3 and step 4 changed)</para>
          <para>MEDIA2_RTSS-2-1-10 MEDIA2 STREAMING – AAC (RTP-Unicast/UDP, IPv6) (step 4 and step 5 changed)</para>
          <para>MEDIA2_RTSS-2-1-11 MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6) (step 4 and step 5 changed)</para>
          <para>MEDIA2_RTSS-2-1-12 MEDIA2 STREAMING – AAC (RTP/RTSP/TCP, IPv6) (step 4 and step 5 changed)</para>
          <para>MEDIA2_RTSS-2-1-14 MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTPS/TCP) (step 4 and step 5 changed)</para>
          <para>MEDIA2_RTSS-2-1-16 MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)  (step 5 and step 6 changed)</para>
          <para>MEDIA2_RTSS-2-1-18 MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/WebSockets) (step 3 and step 4 changed)</para>
          <para>MEDIA2_RTSS-2-1-20 MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/WebSockets, IPv6) (step 4 and step 5 changed)</para>
          <para>MEDIA2_RTSS-2-2-3 MEDIA2 STREAMING – AAC (RTP-Multicast, IPv4) (step 3 and step 4 changed)</para>
          <para>MEDIA2_RTSS-2-2-4 MEDIA2 STREAMING – AAC (RTP-Multicast, IPv6) (step 4 and step 5 changed)</para>
          <para>MEDIA2_RTSS-3-1-8 BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv4) (step 3 and step 4 changed)</para>
          <para>MEDIA2_RTSS-3-1-7 BACKCHANNEL – AAC (RTP-Unicast/UDP, IPv4) (step 3 and step 4 changed)</para>
          <para>MEDIA2_RTSS-3-1-8 BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv4) (step 3 and step 4 changed)</para>
          <para>MEDIA2_RTSS-3-1-9 BACKCHANNEL – AAC (RTP/RTSP/TCP, IPv4) (step 3 and step 4 changed)</para>
          <para>MEDIA2_RTSS-3-1-10 BACKCHANNEL – AAC (RTP-Unicast/UDP, IPv6) (step 4 and step 5 changed)</para>
          <para>MEDIA2_RTSS-3-1-11 BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6) (step 4 and step 5 changed)</para>
          <para>MEDIA2_RTSS-3-1-12 BACKCHANNEL – AAC (RTP/RTSP/TCP, IPv6) (step 4 and step 5 changed)</para>
          <para>MEDIA2_RTSS-3-1-14 BACKCHANNEL – AAC (RTP-Unicast/RTSP/WebSockets) (step 3 and step 4 changed)</para>
          <para>MEDIA2_RTSS-3-1-16 BACKCHANNEL – AAC (RTP-Unicast/RTSP/WebSockets, IPv6) (step 4 and step 5 changed)</para>
          <para>MEDIA2_RTSS-3-1-18 BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv4) (step 4 and step 5 changed)</para>
          <para>MEDIA2_RTSS-3-1-20 BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv6) (step 5 and step 6 changed)</para>
          <para>MEDIA2_RTSS-3-1-23 BACKCHANNEL STREAMING BY POST – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv4) (step 3 and step 4 changed)</para>
          <para>MEDIA2_RTSS-3-1-24 BACKCHANNEL STREAMING BY POST – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6) (step 4 and step 5 changed)</para>
          <para>MEDIA2_RTSS-3-1-26 BACKCHANNEL STREAMING BY POST – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv4) (step 4 and step 5 changed)</para>
          <para>MEDIA2_RTSS-3-1-28 BACKCHANNEL STREAMING BY POST – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv6) (step 5 and step 6 changed)</para>
          <para>MEDIA2_RTSS-5-1-7 MEDIA2 STREAMING – H.26X/AAC (RTP-Unicast/UDP) (step 3 and step 6 changed, step 5 added)</para>
          <para>MEDIA2_RTSS-5-1-8 MEDIA2 STREAMING – H.26X/AAC (RTP-Unicast/RTSP/HTTP/TCP) (step 3 and step 6 changed, step 5 added)</para>
          <para>MEDIA2_RTSS-5-1-9 MEDIA2 STREAMING – H.26X/AAC (RTP/RTSP/TCP) (step 3 and step 6 changed, step 5 added)</para>
          <para>MEDIA2_RTSS-5-1-10 MEDIA2 STREAMING – H.26X/AAC (RTP-Unicast/UDP, IPv6) (step 4 and step 7 changed, step 6 added)</para>
          <para>MEDIA2_RTSS-5-1-11 MEDIA2 STREAMING – H.26X/AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6) (step 4 and step 7 changed, step 6 added)</para>
          <para>MEDIA2_RTSS-5-1-12 MEDIA2 STREAMING – H.26X/AAC (RTP/RTSP/TCP, IPv6) (step 4 and step 7 changed, step 6 added)</para>
          <para>MEDIA2_RTSS-5-2-3 MEDIA2 STREAMING – H.26X/AAC (RTP-Multicast/UDP) (step 3 and step 6 changed, step 5 added)</para>
          <para>MEDIA2_RTSS-5-2-4 MEDIA2 STREAMING – H.26X/AAC (RTP-Multicast/UDP, IPv6) (step 4 and step 7 changed, step 6 added)</para>

        </revdescription>
      </revision>
      <revision>
        <revnumber>19.06</revnumber>
        <date>Jun 07, 2019</date>
        <revdescription>
          <para>Note added in the following annexes according to #1869:</para>
          <para>A.10 Media Streaming over RTP-Unicast/UDP</para>
          <para>A.11 Media Streaming over RTP-Unicast/RTSP/HTTP/TCP</para>
          <para>A.12 Media Streaming over RTP/RTSP/TCP</para>
          <para>A.13 Media Streaming over RTP-Multicast</para>
          <para>A.14 Media Streaming over RTP-Unicast/RTSP/HTTPS/TCP</para>
          <para>A.21 Audio Backchannel streaming over RTP-Unicast/UDP</para>
          <para>A.22 Audio Backchannel over RTP-Unicast/RTSP/HTTP/TCP</para>
          <para>A.23 Audio Backchannel Streaming over RTP/RTSP/TCP</para>
          <para>A.24 Audio Backchannel Streaming over RTP-Multicast</para>
          <para>A.30 Media Streaming over WebSocket</para>
          <para>A.42 Backchannel Streaming over WebSocket</para>
          <para>A.49 Audio Backchannel over RTP-Unicast/RTSP/HTTPS/TCP</para>
          <para>A.60 Audio Backchannel by POST over RTP-Unicast/RTSP/HTTP/TCP</para>
          <para>A.61 Audio Backchannel by POST over RTP-Unicast/RTSP/HTTPS/TCP</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>19.12</revnumber>
        <date>Aug 30, 2019</date>
        <revdescription>
          <para>The following annexes were updated according to #1783:</para>
          <para>Normative references: link to RFC 2326 added, link to IETF RFC 4566 added</para>
          <para>A.39 Get Stream Uri (Input section updated, step 4 and step 5 added)</para>
          <para>A.62 Check of IP address type in response to RTSP DESCRIBE (added)</para>
          <para>MEDIA2_RTSS-3-1-4 BACKCHANNEL – G.711 (RTP-Unicast/UDP, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-3-1-5 BACKCHANNEL – G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-3-1-6 BACKCHANNEL – G.711 (RTP/RTSP/TCP, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-3-1-10 BACKCHANNEL – AAC (RTP-Unicast/UDP, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-3-1-11 BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-3-1-12 BACKCHANNEL – AAC (RTP/RTSP/TCP, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-3-1-15 BACKCHANNEL – G.711 (RTP-Unicast/RTSP/WebSockets, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-3-1-16 BACKCHANNEL – AAC (RTP-Unicast/RTSP/WebSockets, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-3-1-19 BACKCHANNEL – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6) (step 5 updated)</para>
          <para>MEDIA2_RTSS-3-1-20 BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv6) (step 5 updated)</para>
          <para>MEDIA2_RTSS-3-1-22 BACKCHANNEL STREAMING BY POST – G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-3-1-24 BACKCHANNEL STREAMING BY POST – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-3-1-27 BACKCHANNEL STREAMING BY POST – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6) (step 5 updated)</para>
          <para>MEDIA2_RTSS-3-1-28 BACKCHANNEL STREAMING BY POST – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv6) (step 5 updated)</para>
          <para>MEDIA2_RTSS-4-1-5 METADATA STREAMING (RTP-Unicast/UDP, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-4-1-6 METADATA STREAMING (RTP-Unicast/RTSP/HTTP/TCP, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-4-1-7 METADATA STREAMING (RTP/RTSP/TCP, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-4-1-9 METADATA STREAMING (RTP-Unicast/RTSP/HTTPS/TCP, IPv6) (step 5 updated)</para>
          <para>MEDIA2_RTSS-4-1-11 METADATA STREAMING (RTP-Unicast/RTSP/WebSockets, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-4-2-2 METADATA STREAMING (RTP-Multicast/UDP, IPv6) (step 4 updated)</para>
          <para>MEDIA2_RTSS-1-1-4 MEDIA2 SET SYNCHRONIZATION POINT – H.264 (step 6 added)</para>
          <para>MEDIA2_RTSS-1-1-11 MEDIA2 SET SYNCHRONIZATION POINT – H.265 (step 6 added)</para>
          <para>MEDIA2_RTSS-4-1-4 METADATA STREAMING - SET SYNCHRONIZATION POINT (step 6 added)</para>
          <para>A.10 Media Streaming over RTP-Unicast/UDP (step 5 added)</para>
          <para>A.11 Media Streaming over RTP-Unicast/RTSP/HTTP/TCP (step 7 added)</para>
          <para>A.12 Media Streaming over RTP/RTSP/TCP (step 5 added)</para>
          <para>A.13 Media Streaming over RTP-Multicast (step 5 added)</para>
          <para>A.14 Media Streaming over RTP-Unicast/RTSP/HTTPS/TCP (step 6 added)</para>
          <para>A.21 Audio Backchannel streaming over RTP-Unicast/UDP (step 4 added)</para>
          <para>A.22 Audio Backchannel over RTP-Unicast/RTSP/HTTP/TCP (step 6 added)</para>
          <para>A.23 Audio Backchannel Streaming over RTP/RTSP/TCP (step 4 added)</para>
          <para>A.24 Audio Backchannel Streaming over RTP-Multicast (step 4 added)</para>
          <para>A.30 Media Streaming over WebSocket (step 6 added)</para>
          <para>A.34 Metadata Streaming over RTP-Unicast/UDP (step 4 added)</para>
          <para>A.35 Metadata Streaming over RTP-Unicast/RTSP/HTTP/TCP (step 6 added)</para>
          <para>A.36 Metadata Streaming over RTP/RTSP/TCP (step 4 added)</para>
          <para>A.37 Metadata Streaming over RTP-Unicast/UDP (step 4 added)</para>
          <para>A.42 Backchannel Streaming over WebSocket (step 8 added)</para>
          <para>A.49 Audio Backchannel over RTP-Unicast/RTSP/HTTPS/TCP (step 6 added)</para>
          <para>A.50 Metadata Streaming over RTP-Unicast/RTSP/HTTPS/TCP (step 6 added)</para>
          <para>A.51 Metadata Streaming over WebSocket (step 8 added)</para>
          <para>A.55 Concurrent Video Streaming over RTP-Unicast/UDP (step 1.4 added)</para>
          <para>A.60 Audio Backchannel by POST over RTP-Unicast/RTSP/HTTP/TCP (step 6 added)</para>
          <para>A.61 Audio Backchannel by POST over RTP-Unicast/RTSP/HTTPS/TCP (step 6 added)</para>
          <para>A.40 Device Configuration for Video Streaming (step 5 updated)</para>
          <para>A.41 Device Configuration for Audio Streaming (step 5 updated)</para>
          <para>A.45 Device Configuration for Audio Streaming using Media Profile that contains only Audio Configurations (step 6 updated)</para>
          <para>A.46 Device Configuration for Video and Audio Streaming (step 10 updated)</para>
          <para>A.20 Media2 Service – Media Profile Configuration for Audio Backchannel Streaming (Input updated, step 7 updated)</para>
          <para>A.31 Media2 Service – Media Profile Configuration for Metadata Streaming (Input updated, step 8 and step 12 updated)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>19.12</revnumber>
        <date>Oct 08, 2019</date>
        <revdescription>
          <para>Supporting of Metadata feature was added into Pre-Requisite of the following test cases according to #1894:</para>
          <para>MEDIA2_RTSS-4-1-1 METADATA STREAMING (RTP-Unicast/UDP)</para>
          <para>MEDIA2_RTSS-4-1-2 METADATA STREAMING (RTP-Unicast/RTSP/HTTP/TCP)</para>
          <para>MEDIA2_RTSS-4-1-3 METADATA STREAMING (RTP/RTSP/TCP)</para>
          <para>MEDIA2_RTSS-4-1-4 METADATA STREAMING - SET SYNCHRONIZATION POINT</para>
          <para>MEDIA2_RTSS-4-1-5 METADATA STREAMING (RTP-Unicast/UDP, IPv6)</para>
          <para>MEDIA2_RTSS-4-1-6 METADATA STREAMING (RTP-Unicast/RTSP/HTTP/TCP, IPv6)</para>
          <para>MEDIA2_RTSS-4-1-7 METADATA STREAMING (RTP/RTSP/TCP, IPv6)</para>
          <para>MEDIA2_RTSS-4-1-8 METADATA STREAMING (RTP-Unicast/RTSP/HTTPS/TCP)</para>
          <para>MEDIA2_RTSS-4-1-9 METADATA STREAMING (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)</para>
          <para>MEDIA2_RTSS-4-1-10 METADATA STREAMING (RTP-Unicast/RTSP/WebSockets)</para>
          <para>MEDIA2_RTSS-4-1-11 METADATA STREAMING (RTP-Unicast/RTSP/WebSockets, IPv6)</para>
          <para>MEDIA2_RTSS-4-2-1 METADATA STREAMING (RTP-Multicast/UDP)</para>
          <para>MEDIA2_RTSS-4-2-2 METADATA STREAMING (RTP-Multicast/UDP, IPv6)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>19.12</revnumber>
        <date>Nov 21, 2019</date>
        <revdescription>
          <para>The following annexes were updated according to #1971:</para>
          <para>A.54 Create New Media Profiles to Get Guaranteed Number of Media Profiles for Video Source Configuration (Profile token parameter added into GetVideoEncoderConfigurationOptions request)</para>
          <para>A.57 Create New Media Profiles to Get Guaranteed Number of Media Profiles for Video Source Configuration for Specified Encoding (Profile token parameter added into GetVideoEncoderConfigurationOptions request)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Jul 31, 2020</date>
        <revdescription>
          <para>The following annexes were changed according to #2072:</para>
          <para>A.46 Device Configuration for Video and Audio Streaming</para>
          <para>A.47 Media2 Service – Adding AudioSource and AudioEncoder configurations to Media Profile</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Sep 23, 2020</date>
        <revdescription>
          <para>The following were added according to #2082:</para>
          <para>MEDIA2_RTSS-6-1-1 MEDIA2 STREAMING – G.711 BACKCHANNEL AND H.26X VIDEO AND G.711/AAC AUDIO (RTP-Unicast/UDP)</para>
          <para>A.65 Device Configuration for Audio Backchannel and Video and Audio Streaming</para>
          <para>A.66 Media2 Service – Adding VideoSource, VideoEncoder, AudioSource and AudioEncoder configurations to Media Profile</para>
          <para>A.67 Media2 Service – Adding AudioSource and AudioEncoder to Media Profile</para>
          <para>A.68 Audio Backchannel and Media Streaming over RTP-Unicast/UDP</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Sep 23, 2020</date>
        <revdescription>
          <para>Annex A.47 was renamed in the scope of #2082:</para>
          <para>Old name: Media2 Service – Adding AudioSource and AudioEncoder configurations to Media Profile</para>
          <para>New name: Media2 Service – Adding AudioSource and AudioEncoder with Specified Audio Encoder Value to Media Profile</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Nov 17, 2020</date>
        <revdescription>
          <para>Annex A.48 RTSP Authentication Check was updated according to #2073</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.06</revnumber>
        <date>Apr 09, 2021</date>
        <revdescription>
          <para>The following annexes were updated according to #2124:</para>
          <para>A.23 Turn on IPv6 network interface</para>
          <para>A.24 Restore Network Settings</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.06</revnumber>
        <date>May 26, 2021</date>
        <revdescription>
          <para>The following test cases and annexes were removed according to #2215:</para>
          <para>MEDIA2_RTSS-3-1-2 BACKCHANNEL – G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv4)</para>
          <para>MEDIA2_RTSS-3-1-5 BACKCHANNEL – G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv6)</para>
          <para>MEDIA2_RTSS-3-1-8 BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv4)</para>
          <para>MEDIA2_RTSS-3-1-11 BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6)</para>
          <para>MEDIA2_RTSS-3-1-17 BACKCHANNEL – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv4)</para>
          <para>MEDIA2_RTSS-3-1-18 BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv4)</para>
          <para>MEDIA2_RTSS-3-1-19 BACKCHANNEL – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)</para>
          <para>MEDIA2_RTSS-3-1-20 BACKCHANNEL – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)</para>
          <para>A.22 Audio Backchannel over RTP-Unicast/RTSP/HTTP/TCP</para>
          <para>A.49 Audio Backchannel over RTP-Unicast/RTSP/HTTPS/TCP</para>
        </revdescription>
      </revision>
    </revhistory>
  </info>
  <chapter xml:id="s.intro">
    <title>Introduction</title>
    <para>
      The goal of the ONVIF test specification set is to make it possible to realize fully interoperable
      IP physical security implementation from different vendors. The set of ONVIF test specification describes
      the test cases need to verify the [ONVIF Network Interface Specs] and [ONVIF Conformance] requirements.
      In addition, the test cases are to be basic inputs for some Profile specification requirements.
      It also describes the test framework, test setup, pre-requisites, test policies needed for the execution
      of the described test cases.
    </para>
    <para>
      This ONVIF Real Time Streaming using Media2 Device Test Specification acts as a supplementary document to the [ONVIF Network Interface Specs],
      illustrating test cases need to be executed and passed. And this specification acts as an input document
      to the development of test tool, which will be used to test the ONVIF device implementation conformance
      towards ONVIF standard. This test tool is referred as ONVIF Client hereafter.
    </para>
    <section xml:id="s.intro.scope">
      <title>Scope</title>
      <para>
        This ONVIF Real Time Streaming using Media2 Device Test Specification defines and regulates the conformance testing procedure
        for the ONVIF conformant devices. Conformance testing is meant to be functional black-box testing.
        The objective of this specification is to provide test cases to test individual requirements
        of ONVIF devices according to ONVIF Media2 Service and Real-time Streaming Specification, which is defined in [ONVIF Network Interface Specs].
      </para>
      <para>
        The principal intended purposes are:<itemizedlist>
          <listitem>
            <para>Provide self-assessment tool for implementations.</para>
          </listitem>
          <listitem>
            <para>
              Provide comprehensive test suite coverage for [ONVIF Network Interface Specs].
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        This specification <emphasis role="bold">does not</emphasis> address the following:
        <itemizedlist>
          <listitem>
            <para>
              Product use cases and non-functional (performance and regression) testing.
            </para>
          </listitem>
          <listitem>
            <para>
              SOAP Implementation Interoperability test i.e. Web Service Interoperability Basic Profile version 2.0 (WS-I BP 2.0).
            </para>
          </listitem>
          <listitem>
            <para>
              Network protocol implementation Conformance test for HTTP, HTTPS, RTP and RTSP protocol.
            </para>
          </listitem>
          <listitem>
            <para>
              Poor streaming performance test (audio/video distortions, missing audio/video frames, incorrect
              lib synchronization etc.).
            </para>
            <para>
              Wi-Fi Conformance test
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        The set of ONVIF Test Specification will not cover the complete set of requirements as defined in [ONVIF Network Interface Specs];
        instead, it would cover subset of it. The scope of this specification is to derive all the normative requirements
        of [ONVIF Network Interface Specs], which are related to ONVIF Media2 Service and Real-time Streaming and some of the optional requirements.
      </para>
      <para>
        This ONVIF Real Time Streaming using Media2 Device Test Specification covers ONVIF Media2 Service and Real-time Streaming, which is a functional block of [ONVIF Network Interface Specs].
        The following sections describe the brief overview of and scope of each functional block.
      </para>
    </section>
    <section xml:id="s.intro.real_time_streaming">
      <title>Real Time Streaming</title>
      <para>
        Real Time Streaming using Media2 covers the test cases needed for the verification of real time streaming features using Media2 Service as mentioned in [ONVIF Network Interface Specs].
        Real time streaming defines different media streaming options based on RTP for video, audio and metadata streams. Media control is done using RTSP protocol.
      </para>
      <para>
        The scope of this specification covers the following real time streaming options for H.264 and H.265 video streams, and G.711, AAC Audio streams, Audio backchannel streams, and Metadata streams.
        <itemizedlist>
          <listitem>
            <para>
              RTSP control requests
            </para>
          </listitem>
          <listitem>
            <para>
              RTP Unicast over UDP
            </para>
          </listitem>
          <listitem>
            <para>
              RTP over RTSP over TCP
            </para>
          </listitem>
          <listitem>
            <para>
              RTP over RTSP over HTTP over TCP
            </para>
          </listitem>
          <listitem>
            <para>
              RTCP
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
  </chapter>
  <chapter xml:id="s.docbook">
    <title>Normative references</title>
    <itemizedlist>
      <listitem>
        <para>[ONVIF Conformance] ONVIF Conformance Process Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/conformance/">https://www.onvif.org/profiles/conformance/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Profile Policy] ONVIF Profile Policy:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/">https://www.onvif.org/profiles/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Network Interface Specs] ONVIF Network Interface Specification documents:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Core Specs] ONVIF Core Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Media2 Spec] ONVIF Media 2 Service Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Streaming Spec] ONVIF Streaming Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Base Test] ONVIF Base Device Test Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/conformance/device-test/">https://www.onvif.org/profiles/conformance/device-test/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ISO/IEC Directives, Part 2] ISO/IEC Directives, Part 2, Annex H:</para>
        <para>
          <link xlink:href="http://www.iso.org/directives">http://www.iso.org/directives</link>
        </para>
      </listitem>
      <listitem>
        <para>[ISO 16484-5] ISO 16484-5:2014-09 Annex P:</para>
        <para>
          <link xlink:href="https://www.iso.org/obp/ui/#!iso:std:63753:en">https://www.iso.org/obp/ui/#!iso:std:63753:en</link>
        </para>
      </listitem>
      <listitem>
        <para>[SOAP 1.2, Part 1] W3C SOAP 1.2, Part 1, Messaging Framework:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/soap12-part1/">http://www.w3.org/TR/soap12-part1/</link>
        </para>
      </listitem>
      <listitem>
        <para>[XML-Schema, Part 1] W3C XML Schema Part 1: Structures Second Edition:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/xmlschema-1/">http://www.w3.org/TR/xmlschema-1/</link>
        </para>
      </listitem>
      <listitem>
        <para>[XML-Schema, Part 2] W3C XML Schema Part 2: Datatypes Second Edition:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/xmlschema-2/">http://www.w3.org/TR/xmlschema-2/</link>
        </para>
      </listitem>
      <listitem>
        <para>[WS-Security] "Web Services Security: SOAP Message Security 1.1 (WS-Security 2004)", OASIS Standard, February 2006.:</para>
        <para>
          <link xlink:href="http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf">http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf</link>
        </para>
      </listitem>
      <listitem>
        <para>IETF RFC 4566, SDP: Session Description Protocol</para>
        <para>
          <link xlink:href="http://www.ietf.org/rfc/rfc4566.txt">http://www.ietf.org/rfc/rfc4566.txt</link>
        </para>
      </listitem>
      <listitem>
        <para>IETF RFC 2326, Real Time Streaming Protocol (RTSP)</para>
        <para>
          <link xlink:href="http://www.ietf.org/rfc/rfc2326.txt">http://www.ietf.org/rfc/rfc2326.txt</link>
        </para>
      </listitem>

    </itemizedlist>
  </chapter>
  <chapter xml:id="additions">
    <title>Terms and Definitions</title>
    <section xml:id="additions.conventions">
      <title>Conventions</title>
      <para>
        The key words "shall", "shall not", "should", "should not", "may", "need not",
        "can", "cannot" in this specification are to be interpreted as described in [ISO/IEC
        Directives Part 2].
      </para>
    </section>
    <section xml:id="additions.definitions">
      <title>Definitions</title>
      <para>This section describes terms and definitions used in this document.</para>
      <variablelist>
        <varlistentry>
          <term>Profile</term>
          <listitem>
            <para>See ONVIF Profile Policy.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ONVIF Device</term>
          <listitem>
            <para>
              Computer appliance or software program that exposes one or multiple
              ONVIF Web Services.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ONVIF Client</term>
          <listitem>
            <para>
              Computer appliance or software program that uses ONVIF Web
              Services.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Configuration Entity</term>
          <listitem>
            <para>
              A network video device media abstract component that is used to produce a media stream on the network,
              i.e. video and/or audio stream.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Media Profile</term>
          <listitem>
            <para>
              A media profile maps a video and/or audio source to a video and/or an audio encoder, PTZ and analytics configurations.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>SOAP</term>
          <listitem>
            <para>
              SOAP is a lightweight protocol intended for exchanging structured
              information in a decentralized, distributed environment. It uses XML
              technologies to define an extensible messaging framework providing a
              message construct that can be exchanged over a variety of underlying
              protocols.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Device Test Tool</term>
          <listitem>
            <para>
              ONVIF Device Test Tool that tests ONVIF Device implementation towards
              the ONVIF Test Specification set.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Media 2 Service</term>
          <listitem>
            <para>
              Services to determine the streaming properties of requested media streams.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section xml:id="additions.abbreviations">
      <title>Abbreviations</title>
      <para>This section describes abbreviations used in this document.</para>
      <variablelist>
        <varlistentry>
          <term>HTTP</term>
          <listitem>
            <para>Hyper Text Transport Protocol.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>AAC</term>
          <listitem>
            <para>Advanced Audio Coding.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>URI</term>
          <listitem>
            <para>Uniform Resource Identifier.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>WSDL</term>
          <listitem>
            <para>Web Services Description Language.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>XML</term>
          <listitem>
            <para>eXtensible Markup Language.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TTL</term>
          <listitem>
            <para>Time To Live.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>
  <chapter xml:id="overview">
    <title>Test Overview</title>
    <para>
      This section describes about the test setup and prerequisites needed,
      and the test policies that should be followed for test case execution.
    </para>
    <section xml:id="overview.test_setup">
      <title>Test Setup</title>
      <section xml:id="overview.test_setup.network_configuration">
        <title>Network Configuration for DUT</title>
        <para>
          The generic test configuration for the execution of test cases defined in this document is as shown below (Figure 4.1).
        </para>
        <para>
          Based on the individual test case requirements, some of the entities in the below setup may not be needed for the execution of those corresponding test cases.
        </para>
        <figure>
          <title>Test Configuration for DUT</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="test_network.png" format="PNG" scalefit="0"/>
            </imageobject>
            <textobject>
              <phrase>Test Configuration for DUT</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <para>
          <emphasis role="bold">DUT:</emphasis> ONVIF device to be tested. Hereafter, this is referred to as DUT (Device Under Test).
        </para>
        <para>
          <emphasis role="bold">ONVIF Client (Test Tool):</emphasis> Tests are executed by this system and it controls the behavior of the DUT. It handles both expected and unexpected behavior.
        </para>
        <para>
          <emphasis role="bold">HTTP Proxy:</emphasis> provides facilitation in case of RTP and RTSP tunneling over HTTP.
        </para>
        <para>
          <emphasis role="bold">Wireless Access Point:</emphasis> provides wireless connectivity to the devices that support wireless connection.
        </para>
        <para>
          <emphasis role="bold">DNS Server:</emphasis> provides DNS related information to the connected devices.
        </para>
        <para>
          <emphasis role="bold">DHCP Server:</emphasis> provides IPv4 Address to the connected devices.
        </para>
        <para>
          <emphasis role="bold">NTP Server:</emphasis> provides time synchronization between ONVIF Client and DUT.
        </para>
        <para>
          <emphasis role="bold">Switching Hub:</emphasis> provides network connectivity among all the test equipments in the test environment. All devices should be connected to the Switching Hub.
          When running multiple test instances in parallel on the same network, the Switching Hub should be configured to use filtering in order to avoid multicast traffic being flooded to all ports, because this may affect test stability.
        </para>
        <para>
          <emphasis role="bold">Router:</emphasis> provides router advertisements for IPv6 configuration.
        </para>
      </section>
    </section>
    <section xml:id="overview.prerequisites">
      <title>Prerequisites</title>
      <para>
        The pre-requisites for executing the test cases described in this Test Specification are:
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              The DUT shall be configured with an IPv4 address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be IP reachable [in the test configuration].
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be able to be discovered by the Test Tool.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be configured with the time i.e. manual configuration of UTC time and if NTP is supported by DUT, then NTP time shall be synchronized with NTP Server.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT time and Test tool time shall be synchronized with each other either manually or by common NTP server
            </para>
          </listitem>
        </orderedlist>
      </para>
    </section>
    <section xml:id="overview.test_policy">
      <title>Test Policy</title>
      <para>
        This section describes the test policies specific to the test case execution of each functional block.
      </para>
      <para>
        The DUT shall adhere to the test policies defined in this section.
      </para>
      <section xml:id="overview.test_policy.real_time_streaming">
        <title>Real Time Streaming</title>
        <para>
          Real time streaming test case execution would need the successful execution of some of the Media Configuration test cases. So, Media Configuration features shall be implemented successfully in order to execute the Real Time Streaming test cases.
        </para>
        <para>
          ONVIF Client shall explicitly specify the optional transport protocols supported by DUT.
        </para>
        <para>
          ONVIF Client and DUT time should be synchronized for media streaming.
        </para>
        <para>
          Real time streaming testing will test only one media stream at a time.
        </para>
        <para>
          Poor streaming test is outside the scope of the ONVIF Test Specification
        </para>
        <para>
          Please refer to <xref linkend="tc.real_time_streaming"/> for Real Time Streaming Test Cases.
        </para>
      </section>
    </section>
  </chapter>
  <!--Real Time Streaming Test Cases-->
  <chapter xml:id="tc.real_time_streaming" xreflabel="Section 5">
    <title>Real Time Streaming Test Cases</title>
    <!--Video Streaming-->
    <section xml:id="tc.real_time_streaming.video_streaming">
      <title>Video Streaming</title>
      <!--Unicast-->
      <section xml:id="tc.real_time_streaming.video_streaming.unicast">
        <title>Unicast</title>
        <!--MEDIA2_RTSS-1-1-1-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-1">
          <title>MEDIA2 STREAMING – H.264 (RTP-Unicast/UDP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/UDP, H.264
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264 media streaming based on RTP/UDP Unicast Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT. Real-time streaming is supported by DUT.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-1.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.264 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-1.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>

        </section>
        <!--MEDIA2_RTSS-1-1-2-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-2">
          <title>MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/HTTP/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTP/TCP, H.264
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264 media streaming based on HTTP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT. Real-time streaming is supported by DUT. A media profile with H.264 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-2.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.264 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-2.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-3-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-3">
          <title>MEDIA2 STREAMING – H.264 (RTP/RTSP/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/TCP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP/RTSP/TCP, H.264
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264 media streaming based on RTP/RTSP/TCP using RTSP tunnel.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT. Real-time streaming is supported by DUT. A media profile with H.264 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-3.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.264 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-3.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-4-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-4">
          <title>MEDIA2 SET SYNCHRONIZATION POINT – H.264</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Set synchronization point.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> SetSynchronizationPoint, H.264
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To request synchronization point from DUT for H.264 media stream.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT. Real-time streaming is supported by DUT. A media profile with H.264 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-4.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address.
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Response header =: <emphasis role="italic">responseHeader</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        SDP information =: <emphasis role="italic">sdp</emphasis>
                      </para>
                    </listitem>

                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">sdp</emphasis> - SDP information
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details), with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Transport := RTP/AVP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Transport
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Session =: <emphasis role="italic">session</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Session := <emphasis role="italic">session</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Session
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        RTP-Info
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If DUT does not send <emphasis role="italic">encoding</emphasis> RTP media stream to ONVIF Client over UDP, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">SetSynchronizationPoint</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  If DUT does not send I-frame before the regular ‘I-frame insertion time interval’, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Session := <emphasis role="italic">session</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Session
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-4.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">200 OK</emphasis> message for <emphasis role="bold">RTSP DESCRIBE</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">200 OK</emphasis> message for <emphasis role="bold">RTSP SETUP</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">200 OK</emphasis> message for <emphasis role="bold">RTSP PLAY</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">200 OK</emphasis> message for <emphasis role="bold">RTSP TEARDOWN</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperIframeInsertionTimeInterval"/> for details on ‘I-frame insertion time interval’.
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-5-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-5">
          <title>MEDIA2 STREAMING – H.264 (RTP-Unicast/UDP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-5
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/UDP, H.264, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264 media streaming based on RTP/UDP Unicast Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT. A media profile with H.264 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-5.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.264 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-5.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-6-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-6">
          <title>MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/HTTP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-6
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTP/TCP, H.264, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264 media streaming based on HTTP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT. A media profile with H.264 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-6.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.264 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-6.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-7-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-7">
          <title>MEDIA2 STREAMING – H.264 (RTP/RTSP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-7
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/TCP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP/RTSP/TCP, H.264, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264 media streaming based on RTP/RTSP/TCP using RTSP tunnel for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT. A media profile with H.264 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-7.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.264 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-7.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-8-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-8">
          <title>MEDIA2 STREAMING – H.265 (RTP-Unicast/UDP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-8
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/UDP, H.265
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.265 media streaming based on RTP/UDP Unicast Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.265 encoding is supported by DUT. Real-time streaming is supported by DUT. A media profile with H.265 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-8.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H265 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.265 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-8.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-9-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-9">
          <title>MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/HTTP/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-9
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTP/TCP, H.265
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.265 media streaming based on HTTP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.265 encoding is supported by DUT. Real-time streaming is supported by DUT. A media profile with H.265 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-9.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H265 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.265 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-9.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-10-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-10">
          <title>MEDIA2 STREAMING – H.265 (RTP/RTSP/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-10
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/TCP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP/RTSP/TCP, H.265
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.265 media streaming based on RTP/RTSP/TCP using RTSP tunnel.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.265 encoding is supported by DUT. Real-time streaming is supported by DUT. A media profile with H.265 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-10.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H265 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.265 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-10.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-11-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-11">
          <title>MEDIA2 SET SYNCHRONIZATION POINT – H.265</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-11
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Set synchronization point.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> SetSynchronizationPoint, H.265
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To request synchronization point from DUT for H.265 media stream.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.265 encoding is supported by DUT. Real-time streaming is supported by DUT. A media profile with H.265 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-11.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address.
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Response header =: <emphasis role="italic">responseHeader</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        SDP information =: <emphasis role="italic">sdp</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">sdp</emphasis> - SDP information
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details), with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Transport := RTP/AVP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Transport
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Session =: <emphasis role="italic">session</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Session := <emphasis role="italic">session</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Session
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        RTP-Info
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If DUT does not send <emphasis role="italic">encoding</emphasis> RTP media stream to ONVIF Client over UDP, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">SetSynchronizationPoint</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  If DUT does not send I-frame before the regular ‘I-frame insertion time interval’, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Session := <emphasis role="italic">session</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Session
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-11.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">200 OK</emphasis> message for <emphasis role="bold">RTSP DESCRIBE</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">200 OK</emphasis> message for <emphasis role="bold">RTSP SETUP</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">200 OK</emphasis> message for <emphasis role="bold">RTSP PLAY</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">200 OK</emphasis> message for <emphasis role="bold">RTSP TEARDOWN</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperIframeInsertionTimeInterval"/> for details on ‘I-frame insertion time interval’.
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-12-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-12">
          <title>MEDIA2 STREAMING – H.265 (RTP-Unicast/UDP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-12
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/UDP, H.265, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.265 media streaming based on RTP/UDP Unicast Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.265 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT. A media profile with H.265 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-12.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H265 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.265 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-12.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-13-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-13">
          <title>MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/HTTP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-13
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTP/TCP, H.265, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.265 media streaming based on HTTP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.265 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT. A media profile with H.265 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-13.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.265 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-13.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-14-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-14">
          <title>MEDIA2 STREAMING – H.265 (RTP/RTSP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-14
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/TCP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP/RTSP/TCP, H.265, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.265 media streaming based on RTP/RTSP/TCP using RTSP tunnel for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.265 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT. A media profile with H.265 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-14.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H265 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.265 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-14.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-15-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-15">
          <title>MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/HTTPS/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-15
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP, RTSP over HTTPS.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTPS/TCP, H.264
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264 media streaming based on HTTPS Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT.
            Real-time streaming is supported by DUT.
            A media profile with H.264 video encoder configuration is configured on the Device.
            RTP/RTSP/HTTPS feature is supported by DUT. HTTPS is configured on the DUT, if TLS Server is not supported by DUT.
            Security Configuration Service is received from the DUT, if TLS Server is supported by DUT.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-15.3">
                <para>
                  ONVIF Client configures HTTPS if required by following the procedure mentioned in <xref linkend="Annex_HelperCheckAndConfigureHTTPS"/>.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-15.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTPS/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPSTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.264 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-15.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores HTTPS settings which was changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-15.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-16-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-16">
          <title>MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/HTTPS/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-16
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP, RTSP over HTTPS.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTPS/TCP, H.265
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.265 media streaming based on HTTPS Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.265 encoding is supported by DUT. Real-time streaming is supported by DUT. A media profile with H.265 video encoder configuration is configured on the Device. RTP/RTSP/HTTPS feature is supported by DUT. HTTPS is configured on the DUT, if TLS Server is not supported by DUT. Security Configuration Service is received from the DUT, if TLS Server is supported by DUT.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-16.3">
                <para>
                  ONVIF Client configures HTTPS if required by following the procedure mentioned in <xref linkend="Annex_HelperCheckAndConfigureHTTPS"/>.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-16.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H265 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTPS/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPSTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.265 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-16.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores HTTPS settings which was changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-16.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-17-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-17">
          <title>MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-17
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP, RTSP over HTTPS.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTPS/TCP, H.264, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264 media streaming based on HTTPS Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT. Real-time streaming is supported by DUT. A media profile with H.264 video encoder configuration is configured on the Device. RTP/RTSP/HTTPS feature is supported by DUT. HTTPS is configured on the DUT, if TLS Server is not supported by DUT. Security Configuration Service is received from the DUT, if TLS Server is supported by DUT. IPv6 is supported by DUT.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-17.4">
                <para>
                  ONVIF Client configures HTTPS if required by following the procedure mentioned in <xref linkend="Annex_HelperCheckAndConfigureHTTPS"/>.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-17.5">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTPS/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPSTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.264 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-17.5"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores HTTPS settings which was changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-17.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-18-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-18">
          <title>MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-18
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP, RTSP over HTTPS.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTPS/TCP, H.265, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.265 media streaming based on HTTPS Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.265 encoding is supported by DUT. Real-time streaming is supported by DUT. A media profile with H.265 video encoder configuration is configured on the Device.
            RTP/RTSP/HTTPS feature is supported by DUT. HTTPS is configured on the DUT, if TLS Server is not supported by DUT. Security Configuration Service is received from the DUT, if TLS Server is supported by DUT. IPv6 is supported by DUT.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-18.4">
                <para>
                  ONVIF Client configures HTTPS if required by following the procedure mentioned in <xref linkend="Annex_HelperCheckAndConfigureHTTPS"/>.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-18.5">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H265 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTPS/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPSTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.265 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-18.5"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores HTTPS settings which was changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-18.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-19-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-19">
          <title>MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/WebSockets)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-19
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Capabilities (ONVIF Media2 Service Specification),  WebSocket transport for RTP/RTSP/TCP (ONVIF Streaming Specification).
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over WebSocket, H.264
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264 media streaming over WebSocket.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT. Real-time streaming is supported by DUT.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-19.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over WebSocket by following the procedure mentioned in <xref linkend="Annex_HelperStreamingOverWebSocket"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.264 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-19.3"/>.
                </para>
              </listitem>


            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>

            </itemizedlist>
          </para>

        </section>
        <!--MEDIA2_RTSS-1-1-20-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-20">
          <title>MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/WebSockets)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-20
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Capabilities (ONVIF Media2 Service Specification),  WebSocket transport for RTP/RTSP/TCP (ONVIF Streaming Specification).
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over WebSocket, H.265
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.265 media streaming over WebSocket.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.265 encoding is supported by DUT. Real-time streaming is supported by DUT.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-20.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in H265 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over WebSocket by following the procedure mentioned in <xref linkend="Annex_HelperStreamingOverWebSocket"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.265 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-20.3"/>.
                </para>
              </listitem>


            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>

        </section>
        <!--MEDIA2_RTSS-1-1-21-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-21">
          <title>MEDIA2 STREAMING – H.264 (RTP-Unicast/RTSP/WebSockets, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-21
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Capabilities (ONVIF Media2 Service Specification),  WebSocket transport for RTP/RTSP/TCP (ONVIF Streaming Specification).
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over WebSocket, H.264, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264 media streaming over WebSocket for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-21.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>



              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over WebSocket by following the procedure mentioned in <xref linkend="Annex_HelperStreamingOverWebSocket"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.264 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-21.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>

            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>

            </itemizedlist>
          </para>

        </section>
        <!--MEDIA2_RTSS-1-1-22-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-22">
          <title>MEDIA2 STREAMING – H.265 (RTP-Unicast/RTSP/WebSockets, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-22
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Capabilities (ONVIF Media2 Service Specification),  WebSocket transport for RTP/RTSP/TCP (ONVIF Streaming Specification).
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over WebSocket, H.265, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.265 media streaming over WebSocket for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.265 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-22.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H265 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>



              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over WebSocket by following the procedure mentioned in <xref linkend="Annex_HelperStreamingOverWebSocket"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.264 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-1-22.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>

            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>

            </itemizedlist>
          </para>

        </section>
        <!--MEDIA2_RTSS-1-1-23-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-23">
          <title>VIDEO ENCODER INSTANCES</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-23
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Get video encoder instance information (Media2), Media Profile Management (Profile T), RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> GetVideoEncoderInstances, Streaming over RTP-Unicast/UDP
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify that for each video source configuration DUT supports creation of as many Media Profiles and concurent video streams as the number of instances, which is returned by GetVideoEncoderInstances for that video source configuration token.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Real-time streaming is supported by DUT. Profile T is supported by DUT as indicated by receiving the GetScopesResponse.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <!--GetProfiles-->
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type[0] := All
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList1</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <!--GetServiceCapabilities-->
              <listitem>
                <para>
                  ONVIF Client retrieves Media2 Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap1</emphasis> - Media2 Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <!--GetVideoSourceConfigurations-->
              <listitem>
                <para>
                  ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">videoSourceConfList1</emphasis> - Video Source Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <!--GetVideoEncoderInstances-->
              <listitem>
                <para>
                  For each Video Source Configuration <emphasis role="italic">videoSourceConfig1</emphasis> from <emphasis role="italic">videoSourceConfList1</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoEncoderInstances</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">videoSourceConfig1</emphasis>.token
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetVideoEncoderInstancesResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Info = <emphasis role="italic">info1</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Set <emphasis role="italic">infoList1</emphasis>[<emphasis role="italic">videoSourceConfig1</emphasis>.@token] := <emphasis role="italic">info1</emphasis>.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken - skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken - skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with all video encoder configurations in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Configurations list =: <emphasis role="italic">videoEncoderConfList1</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">numberOfProfilesToBeCreated1</emphasis> := sum of all Total values from <emphasis role="italic">infoList1</emphasis> list.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">numberOfFixedProfiles1</emphasis> := number of items at <emphasis role="italic">profileList1</emphasis> list with @fixed = true.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">numberOfVEC1</emphasis> := number of items at <emphasis role="italic">videoEncoderConfList1</emphasis> list.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">numberOfProfilesToBeCreated1</emphasis> &gt; <emphasis role="italic">cap1</emphasis>.ProfileCapabilities.MaximumNumberOfProfiles - <emphasis role="italic">numberOfFixedProfiles1</emphasis>, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">numberOfProfilesToBeCreated1</emphasis> &gt; <emphasis role="italic">numberOfVEC1</emphasis>, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-23.15">
                <para>
                  ONVIF Client removes all non-fixed Media Profiles and removes all configurations from fixed Media Profiles by following the procedure mentioned in <xref linkend="Annex_HelperMediaProfilesCleanUp"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">profileList1</emphasis> - Media Profiles List
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Video Source Configuration <emphasis role="italic">videoSourceConfig1</emphasis> from <emphasis role="italic">videoSourceConfList1</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem xml:id="tc.MEDIA2_RTSS-1-1-23.16.1" xreflabel="16.1">
                      <para>
                        ONVIF Client tries to create new Media Profiles to get number of profiles equal to info.Total by following the procedure mentioned in <xref linkend="Annex_HelperFindGuaranteedProfiles4"/> with the following input and output parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              in <emphasis role="italic">videoSourceConfig1</emphasis> - Video Source Configuration
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">infoList1</emphasis>[<emphasis role="italic">videoSourceConfig1</emphasis>.@token] - information about guaranteed Encoder instances for Video Source Configuration
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              out <emphasis role="italic">configuredProfilesList1</emphasis> - list of configured Media Profiles for Video Source Configuration
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If number of Media Profiles with @token = <emphasis role="italic">videoSourceConfig1</emphasis>.@token in <emphasis role="italic">configuredProfilesList1</emphasis> &lt; <emphasis role="italic">infoList1</emphasis>[<emphasis role="italic">videoSourceConfig1</emphasis>.@token].Total, then FAIL the test and go to step <xref linkend="tc.MEDIA2_RTSS-1-1-23.17"/>.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP for each configured media profile by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDPInstances"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">configuredProfilesList1</emphasis> - Media Profiles list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-23.17">
                <para>
                  ONVIF Client restores Media Profiles list if it was changed at steps <xref linkend="tc.MEDIA2_RTSS-1-1-23.15"/>, <xref linkend="tc.MEDIA2_RTSS-1-1-23.16.1"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoEncoderInstancesResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-24-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-24">
          <title>VIDEO ENCODER INSTANCES - H.264</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-24
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Get video encoder instance information (Media2), Media Profile Management (Profile T), RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> GetVideoEncoderInstances, Streaming over RTP-Unicast/UDP, H.264
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify that for each video source configuration DUT supports creation of as many Media Profiles and concurent H.264 video streams as the number of instances for H.264, which is returned by GetVideoEncoderInstances for that video source configuration token.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT. Real-time streaming is supported by DUT. Profile T is supported by DUT as indicated by receiving the GetScopesResponse.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <!--GetProfiles-->
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type[0] := All
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList1</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <!--GetServiceCapabilities-->
              <listitem>
                <para>
                  ONVIF Client retrieves Media2 Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap1</emphasis> - Media2 Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <!--GetVideoSourceConfigurations-->
              <listitem>
                <para>
                  ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">videoSourceConfList1</emphasis> - Video Source Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <!--GetVideoEncoderInstances-->
              <listitem>
                <para>
                  For each Video Source Configuration <emphasis role="italic">videoSourceConfig1</emphasis> from <emphasis role="italic">videoSourceConfList1</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoEncoderInstances</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">videoSourceConfig1</emphasis>.token
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetVideoEncoderInstancesResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Info = <emphasis role="italic">info1</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Set <emphasis role="italic">infoList1</emphasis>[<emphasis role="italic">videoSourceConfig1</emphasis>.@token] := <emphasis role="italic">info1</emphasis>.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken - skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken - skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with all video encoder configurations in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Configurations list =: <emphasis role="italic">videoEncoderConfList1</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">numberOfProfilesToBeCreated1</emphasis> := sum of limitations for H.264 encoding for each item in the <emphasis role="italic">infoList1</emphasis> list which calculates by following the procedure mentioned in <xref linkend="Annex_HelperNumberOfInstansesForEncoding"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">numberOfFixedProfiles1</emphasis> := number of items at <emphasis role="italic">profileList1</emphasis> list with @fixed = true.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">numberOfVEC1</emphasis> := number of items at <emphasis role="italic">videoEncoderConfList1</emphasis> list.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">numberOfProfilesToBeCreated1</emphasis> &gt; <emphasis role="italic">cap1</emphasis>.ProfileCapabilities.MaximumNumberOfProfiles - <emphasis role="italic">numberOfFixedProfiles1</emphasis>, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">numberOfProfilesToBeCreated1</emphasis> &gt; <emphasis role="italic">numberOfVEC1</emphasis>, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-24.15">
                <para>
                  ONVIF Client removes all non-fixed Media Profiles and removes all configurations from fixed Media Profiles by following the procedure mentioned in <xref linkend="Annex_HelperMediaProfilesCleanUp"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">profileList1</emphasis> - Media Profiles List
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Video Source Configuration <emphasis role="italic">videoSourceConfig1</emphasis> from <emphasis role="italic">videoSourceConfList1</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem xml:id="tc.MEDIA2_RTSS-1-1-24.16.1" xreflabel="16.1">
                      <para>
                        ONVIF Client tries to create new Media Profiles to get number of profiles equal to limitation for specified encoder by following the procedure mentioned in <xref linkend="Annex_HelperFindGuaranteedProfiles1"/> with the following input and output parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              in <emphasis role="italic">videoSourceConfig1</emphasis> - Video Source Configuration
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">infoList1</emphasis>[<emphasis role="italic">videoSourceConfig1</emphasis>.@token] - information about guaranteed Encoder instances for Video Source Configuration
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in H264 - encoding
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              out <emphasis role="italic">configuredProfilesList1</emphasis> - list of configured Media Profiles for Video Source Configuration
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If number of Media Profiles with @token = <emphasis role="italic">videoSourceConfig1</emphasis>.@token in <emphasis role="italic">configuredProfilesList1</emphasis> &lt; limitation for H.264 encoding from <emphasis role="italic">infoList1</emphasis>[<emphasis role="italic">videoSourceConfig1</emphasis>.@token] which calculates by following the procedure mentioned in <xref linkend="Annex_HelperNumberOfInstansesForEncoding"/>, then FAIL the test and go to step <xref linkend="tc.MEDIA2_RTSS-1-1-24.17"/>.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP for each configured media profile by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDPInstances"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">configuredProfilesList1</emphasis> - Media Profiles list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-24.17">
                <para>
                  ONVIF Client restores Media Profiles list if it was changed at steps <xref linkend="tc.MEDIA2_RTSS-1-1-24.15"/>, <xref linkend="tc.MEDIA2_RTSS-1-1-24.16.1"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoEncoderInstancesResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-1-1-25-->
        <section xml:id="tc.MEDIA2_RTSS-1-1-25">
          <title>VIDEO ENCODER INSTANCES - H.265</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-1-25
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Get video encoder instance information (Media2), Media Profile Management (Profile T), RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> GetVideoEncoderInstances, Streaming over RTP-Unicast/UDP, H.265
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify that for each video source configuration DUT supports creation of as many Media Profiles and concurent H.265 video streams as the number of instances for H.264, which is returned by GetVideoEncoderInstances for that video source configuration token.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT. Real-time streaming is supported by DUT. Profile T is supported by DUT as indicated by receiving the GetScopesResponse.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <!--GetProfiles-->
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type[0] := All
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList1</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <!--GetServiceCapabilities-->
              <listitem>
                <para>
                  ONVIF Client retrieves Media2 Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap1</emphasis> - Media2 Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <!--GetVideoSourceConfigurations-->
              <listitem>
                <para>
                  ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">videoSourceConfList1</emphasis> - Video Source Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <!--GetVideoEncoderInstances-->
              <listitem>
                <para>
                  For each Video Source Configuration <emphasis role="italic">videoSourceConfig1</emphasis> from <emphasis role="italic">videoSourceConfList1</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoEncoderInstances</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">videoSourceConfig1</emphasis>.token
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetVideoEncoderInstancesResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Info = <emphasis role="italic">info1</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Set <emphasis role="italic">infoList1</emphasis>[<emphasis role="italic">videoSourceConfig1</emphasis>.@token] := <emphasis role="italic">info1</emphasis>.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken - skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken - skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with all video encoder configurations in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Configurations list =: <emphasis role="italic">videoEncoderConfList1</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">numberOfProfilesToBeCreated1</emphasis> := sum of limitations for H.265 encoding for each item in the <emphasis role="italic">infoList1</emphasis> list which calculates by following the procedure mentioned in <xref linkend="Annex_HelperNumberOfInstansesForEncoding"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">numberOfFixedProfiles1</emphasis> := number of items at <emphasis role="italic">profileList1</emphasis> list with @fixed = true.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">numberOfVEC1</emphasis> := number of items at <emphasis role="italic">videoEncoderConfList1</emphasis> list.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">numberOfProfilesToBeCreated1</emphasis> &gt; <emphasis role="italic">cap1</emphasis>.ProfileCapabilities.MaximumNumberOfProfiles - <emphasis role="italic">numberOfFixedProfiles1</emphasis>, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">numberOfProfilesToBeCreated1</emphasis> &gt; <emphasis role="italic">numberOfVEC1</emphasis>, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-25.15">
                <para>
                  ONVIF Client removes all non-fixed Media Profiles and removes all configurations from fixed Media Profiles by following the procedure mentioned in <xref linkend="Annex_HelperMediaProfilesCleanUp"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">profileList1</emphasis> - Media Profiles List
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Video Source Configuration <emphasis role="italic">videoSourceConfig1</emphasis> from <emphasis role="italic">videoSourceConfList1</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem xml:id="tc.MEDIA2_RTSS-1-1-25.16.1" xreflabel="16.1">
                      <para>
                        ONVIF Client tries to create new Media Profiles to get number of profiles equal to limitation for specified encoder by following the procedure mentioned in <xref linkend="Annex_HelperFindGuaranteedProfiles1"/> with the following input and output parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              in <emphasis role="italic">videoSourceConfig1</emphasis> - Video Source Configuration
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">infoList1</emphasis>[<emphasis role="italic">videoSourceConfig1</emphasis>.@token] - information about guaranteed Encoder instances for Video Source Configuration
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in H265 - encoding
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              out <emphasis role="italic">configuredProfilesList1</emphasis> - list of configured Media Profiles for Video Source Configuration
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If number of Media Profiles with @token = <emphasis role="italic">videoSourceConfig1</emphasis>.@token in <emphasis role="italic">configuredProfilesList1</emphasis> &lt; limitation for H.265 encoding from <emphasis role="italic">infoList1</emphasis>[<emphasis role="italic">videoSourceConfig1</emphasis>.@token] which calculates by following the procedure mentioned in <xref linkend="Annex_HelperNumberOfInstansesForEncoding"/>, then FAIL the test and go to step <xref linkend="tc.MEDIA2_RTSS-1-1-25.17"/>.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP for each configured media profile by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDPInstances"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">configuredProfilesList1</emphasis> - Media Profiles list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-1-25.17">
                <para>
                  ONVIF Client restores Media Profiles list if it was changed at steps <xref linkend="tc.MEDIA2_RTSS-1-1-25.15"/>, <xref linkend="tc.MEDIA2_RTSS-1-1-25.16.1"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoEncoderInstancesResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
      </section>
      <!--Multicast-->
      <section xml:id="tc.real_time_streaming.video_streaming.multicast">
        <title>Multicast</title>
        <!--MEDIA2_RTSS-1-2-1-->
        <section xml:id="tc.MEDIA2_RTSS-1-2-1">
          <title>MEDIA2 STREAMING – H.264 (RTP-Multicast, IPv4)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-2-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Multicast, H.264
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264 media streaming based on RTP-Multicast/UDP Transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT. Real-time streaming is supported by DUT. RTP-Multicast transport protocol is supported by DUT. A media profile with H.264 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-2-1.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Multicast by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPMulticast"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.264 - expected media stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version for multicast streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-2-1.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-2-2-->
        <section xml:id="tc.MEDIA2_RTSS-1-2-2">
          <title>MEDIA2 STREAMING – H.264 (RTP-Multicast, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-2-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Multicast, H.264, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264 media streaming based on RTP-Multicast/UDP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.264 encoding is supported by DUT. Real-time streaming is supported by DUT. RTP-Multicast transport protocol is supported by DUT. IPv6 is supported by DUT. A media profile with H.264 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-2-2.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Multicast by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPMulticast"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.264 - expected media stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version for multicast streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-2-2.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-2-3-->
        <section xml:id="tc.MEDIA2_RTSS-1-2-3">
          <title>MEDIA2 STREAMING – H.265 (RTP-Multicast, IPv4)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-2-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Multicast, H.265
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.265 media streaming based on RTP-Multicast/UDP Transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.265 encoding is supported by DUT. Real-time streaming is supported by DUT. RTP-Multicast transport protocol is supported by DUT. A media profile with H.265 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-2-3.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H265 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Multicast by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPMulticast"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.265 - expected media stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version for multicast streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-2-3.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-1-2-4-->
        <section xml:id="tc.MEDIA2_RTSS-1-2-4">
          <title>MEDIA2 STREAMING – H.265 (RTP-Multicast, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-1-2-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Multicast, H.265, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.265 media streaming based on RTP-Multicast/UDP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. H.265 encoding is supported by DUT. Real-time streaming is supported by DUT. RTP-Multicast transport protocol is supported by DUT. IPv6 is supported by DUT. A media profile with H.265 video encoder configuration is configured on the Device.

          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-1-2-4.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in H264 - required video encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Multicast by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPMulticast"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in H.265 - expected media stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version for multicast streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-1-2-4.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
      </section>
    </section>
    <!--Audio Streaming-->
    <section xml:id="tc.real_time_streaming.audio_streaming">
      <title>Audio Streaming</title>
      <!--Unicast-->
      <section xml:id="tc.real_time_streaming.audio_streaming.unicast">
        <title>Unicast</title>
        <!--MEDIA2_RTSS-2-1-1-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-1">
          <title>MEDIA2 STREAMING – G.711 (RTP-Unicast/UDP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/UDP, G.711
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G.711 media streaming based on RTP-Unicast/UDP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-1.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-1.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-2-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-2">
          <title>MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/HTTP/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTP/TCP, G.711
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G7.11 media streaming based on HTTP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-2.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-2.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-3-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-3">
          <title>MEDIA2 STREAMING – G.711 (RTP/RTSP/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/TCP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP/RTSP/TCP, G.711
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G.711 media streaming based on RTP/RTSP/TCP using RTSP tunnel.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-3.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-3.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-4-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-4">
          <title>MEDIA2 STREAMING – G.711 (RTP-Unicast/UDP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/UDP, G.711, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G.711 media streaming based on RTP/UDP Unicast Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio streaming is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-4.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-4.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-5-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-5">
          <title>MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-5
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTP/TCP, G.711, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G.711 media streaming based on HTTP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-5.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-5.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-6-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-6">
          <title>MEDIA2 STREAMING – G.711 (RTP/RTSP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-6
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/TCP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP/RTSP/TCP, G.711, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G.711 media streaming based on RTP/RTSP/TCP using RTSP tunnel for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-6.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-6.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-7-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-7">
          <title>MEDIA2 STREAMING – AAC (RTP-Unicast/UDP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-7
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/UDP, AAC
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify AAC media streaming based on RTP-Unicast/UDP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-7.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacEncoding</emphasis> - AAC audio encoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacEncoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-7.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-8-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-8">
          <title>MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTP/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-8
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTP/TCP, AAC
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G7.11 media streaming based on HTTP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-8.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacEncoding</emphasis> - AAC audio encoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacEncoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-8.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-9-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-9">
          <title>MEDIA2 STREAMING – AAC (RTP/RTSP/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-9
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/TCP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP/RTSP/TCP, AAC
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify AAC media streaming based on RTP/RTSP/TCP using RTSP tunnel.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-9.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacEncoding</emphasis> - AAC audio encoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacEncoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-9.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-10-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-10">
          <title>MEDIA2 STREAMING – AAC (RTP-Unicast/UDP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-10
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/UDP, AAC, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify AAC media streaming based on RTP/UDP Unicast Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio streaming is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-10.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacEncoding</emphasis> - AAC audio encoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacEncoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-10.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-11-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-11">
          <title>MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-11
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTP/TCP, AAC, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify AAC media streaming based on HTTP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-11.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacEncoding</emphasis> - AAC audio encoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacEncoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-11.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-12-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-12">
          <title>MEDIA2 STREAMING – AAC (RTP/RTSP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-12
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/TCP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify AAC media streaming based on RTP/RTSP/TCP using RTSP tunnel for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-12.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacEncoding</emphasis> - AAC audio encoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacEncoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-12.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>

        <!--MEDIA2_RTSS-2-1-13-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-13">
          <title>MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/HTTPS/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-13
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP, RTSP over HTTPS.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTPS/TCP, G.711
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G7.11 media streaming based on HTTPS Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT. RTP/RTSP/HTTPS feature is supported by DUT. HTTPS is configured on the DUT, if TLS Server is not supported by DUT. Security Configuration Service is received from the DUT, if TLS Server is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-13.3">
                <para>
                  ONVIF Client configures HTTPS if required by following the procedure mentioned in <xref linkend="Annex_HelperCheckAndConfigureHTTPS"/>.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-13.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTPS/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPSTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-13.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores HTTPS settings which was changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-13.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-14-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-14">
          <title>MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTPS/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-14
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP, RTSP over HTTPS.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTPS/TCP, AAC
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G7.11 media streaming based on HTTPS Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT. RTP/RTSP/HTTPS feature is supported by DUT. HTTPS is configured on the DUT, if TLS Server is not supported by DUT. Security Configuration Service is received from the DUT, if TLS Server is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-14.3">
                <para>
                  ONVIF Client configures HTTPS if required by following the procedure mentioned in <xref linkend="Annex_HelperCheckAndConfigureHTTPS"/>.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-14.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacEncoding</emphasis> - AAC audio encoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTPS/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPSTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacEncoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-14.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores HTTPS settings which was changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-14.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-15-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-15">
          <title>MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-15
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP, RTSP over HTTPS.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTPS/TCP, G.711, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G.711 media streaming based on HTTPS Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT. RTP/RTSP/HTTPS feature is supported by DUT. HTTPS is configured on the DUT, if TLS Server is not supported by DUT. Security Configuration Service is received from the DUT, if TLS Server is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-15.4">
                <para>
                  ONVIF Client configures HTTPS if required by following the procedure mentioned in <xref linkend="Annex_HelperCheckAndConfigureHTTPS"/>.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-15.5">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTPS/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPSTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-15.5"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores HTTPS settings which was changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-15.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-16-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-16">
          <title>MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-16
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP, RTSP over HTTPS.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify AAC media streaming based on HTTPS Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT. RTP/RTSP/HTTPS feature is supported by DUT. HTTPS is configured on the DUT, if TLS Server is not supported by DUT. Security Configuration Service is received from the DUT, if TLS Server is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-16.4">
                <para>
                  ONVIF Client configures HTTPS if required by following the procedure mentioned in <xref linkend="Annex_HelperCheckAndConfigureHTTPS"/>.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-16.5">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacEncoding</emphasis> - AAC audio encoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTPS/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPSTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacEncoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-16.5"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores HTTPS settings which was changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-16.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-17-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-17">
          <title>MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/WebSockets)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-17
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Capabilities (ONVIF Media2 Service Specification),  WebSocket transport for RTP/RTSP/TCP (ONVIF Streaming Specification).
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over WebSocket
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G.711 media streaming over WebSocket.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT.
            WebSocket is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>


              <listitem xml:id="tc.MEDIA2_RTSS-2-1-17.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>



              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over WebSocket by following the procedure mentioned in <xref linkend="Annex_HelperStreamingOverWebSocket"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-17.3"/>.
                </para>
              </listitem>


            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>

            </itemizedlist>
          </para>

        </section>
        <!--MEDIA2_RTSS-2-1-18-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-18">
          <title>MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/WebSockets)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-18
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Capabilities (ONVIF Media2 Service Specification),  WebSocket transport for RTP/RTSP/TCP (ONVIF Streaming Specification).
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over WebSocket
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify AAC media streaming over WebSocket.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT.
            WebSocket is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>


              <listitem xml:id="tc.MEDIA2_RTSS-2-1-18.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacEncoding</emphasis> - AAC audio encoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>



              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over WebSocket by following the procedure mentioned in <xref linkend="Annex_HelperStreamingOverWebSocket"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacEncoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-18.3"/>.
                </para>
              </listitem>


            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>

            </itemizedlist>
          </para>

        </section>
        <!--MEDIA2_RTSS-2-1-19-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-19">
          <title>MEDIA2 STREAMING – G.711 (RTP-Unicast/RTSP/WebSockets, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-19
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Capabilities (ONVIF Media2 Service Specification),  WebSocket transport for RTP/RTSP/TCP (ONVIF Streaming Specification).
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over WebSocket for IPv6.
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G.711 media streaming over WebSocket for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. IPv6 is supported by DUT. Audio streaming is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT.
            WebSocket is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-19.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>



              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over WebSocket by following the procedure mentioned in <xref linkend="Annex_HelperStreamingOverWebSocket"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-19.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>

            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>

            </itemizedlist>
          </para>

        </section>
        <!--MEDIA2_RTSS-2-1-20-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-20">
          <title>MEDIA2 STREAMING – AAC (RTP-Unicast/RTSP/WebSockets, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-20
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Capabilities (ONVIF Media2 Service Specification),  WebSocket transport for RTP/RTSP/TCP (ONVIF Streaming Specification).
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over WebSocket for IPv6.
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify AAC media streaming over WebSocket for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. IPv6 is supported by DUT. Audio streaming is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT.
            WebSocket is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-20.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacEncoding</emphasis> - AAC audio encoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over WebSocket by following the procedure mentioned in <xref linkend="Annex_HelperStreamingOverWebSocket"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacEncoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-20.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-2-1-21-->
        <section xml:id="tc.MEDIA2_RTSS-2-1-21">
          <title>MEDIA2 AUDIO STREAMING – G.711 (RTP-Unicast/UDP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-1-21
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/UDP, G.711
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G.711 media streaming based on RTP-Unicast/UDP Transport for case if there is only Audio Source Configuration and Audio encoder Configuration in Media Profile.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-1-21.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreamingUsingOnlyAudioInProfile"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-1-21.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
      </section>
      <!--Multicast-->
      <section xml:id="tc.real_time_streaming.audio_streaming.multicast">
        <title>Multicast</title>
        <!--MEDIA2_RTSS-2-2-1-->
        <section xml:id="tc.MEDIA2_RTSS-2-2-1">
          <title>MEDIA2 STREAMING – G.711 (RTP-Multicast, IPv4)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-2-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Multicast, G.711
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G.711 media streaming based on RTP-Multicast/UDP Transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT. RTP-Multicast transport protocol is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-2-1.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Multicast by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPMulticast"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version for multicast streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-2-1.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-2-2-->
        <section xml:id="tc.MEDIA2_RTSS-2-2-2">
          <title>MEDIA2 STREAMING – G.711 (RTP-Multicast, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-2-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Multicast, G.711, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G.711 media streaming based on RTP-Multicast/UDP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT. RTP-Multicast transport protocol is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-2-2.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Multicast by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPMulticast"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version for multicast streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-2-2.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-2-3-->
        <section xml:id="tc.MEDIA2_RTSS-2-2-3">
          <title>MEDIA2 STREAMING – AAC (RTP-Multicast, IPv4)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-2-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Multicast, AAC
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify AAC media streaming based on RTP-Multicast/UDP Transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT. RTP-Multicast transport protocol is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-2-3.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacEncoding</emphasis> - AAC audio encoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Multicast by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPMulticast"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacEncoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version for multicast streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-2-3.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-2-2-4-->
        <section xml:id="tc.MEDIA2_RTSS-2-2-4">
          <title>MEDIA2 STREAMING – AAC (RTP-Multicast, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-2-2-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Multicast, AAC, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify AAC media streaming based on RTP-Multicast/UDP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT. RTP-Multicast transport protocol is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-2-2-4.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForAudioStreaming"/> with the following input and output parameters

                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacEncoding</emphasis> - AAC audio encoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Multicast by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPMulticast"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacEncoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version for multicast streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Encoder Configuration and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-2-2-4.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
      </section>
    </section>
    <!--Audio Backchannel-->
    <section xml:id="tc.real_time_streaming.audio_backchannel">
      <title>Audio Backchannel</title>
      <!--Unicast-->
      <section xml:id="tc.real_time_streaming.audio_backchannel.unicast">
        <title>Unicast</title>
        <!--MEDIA2_RTSS-3-1-1-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-1">
          <title>BACKCHANNEL – G.711 (RTP-Unicast/UDP, IPv4)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-1
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel G.711, RTP-Unicast/UDP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for G.711 audio streaming using RTP-Unicast/UDP transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. G.711 decoder is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-1.3">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-1.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-1.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>


        <!--MEDIA2_RTSS-3-1-3-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-3">
          <title>BACKCHANNEL – G.711 (RTP/RTSP/TCP, IPv4)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-3
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel G.711, RTP/RTSP/TCP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for G.711 audio streaming using RTP/RTSP/TCP transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. G.711 decoder is supported by DUT. RTP/RTSP/TCP is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-3.3">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-3.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-3.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-4-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-4">
          <title>BACKCHANNEL – G.711 (RTP-Unicast/UDP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-4
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel G.711, RTP-Unicast/UDP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for G.711 audio streaming using RTP-Unicast/UDP transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. G.711 decoder is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-4.4">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP Type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-4.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-4.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-5-->

        <!--MEDIA2_RTSS-3-1-6-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-6">
          <title>BACKCHANNEL – G.711 (RTP/RTSP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-6
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel G.711, RTP/RTSP/TCP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for G.711 audio streaming using RTP/RTSP/TCP transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. G.711 decoder is supported by DUT. RTP/RTSP/TCP is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-6.4">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP Type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-6.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-6.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-7-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-7">
          <title>BACKCHANNEL – AAC (RTP-Unicast/UDP, IPv4)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-7
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel AAC, RTP-Unicast/UDP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for AAC audio streaming using RTP-Unicast/UDP transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. AAC decoder is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-7.3">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacDecoding</emphasis> - AAC audio decoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacDecoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-7.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-7.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>


        <!--MEDIA2_RTSS-3-1-9-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-9">
          <title>BACKCHANNEL – AAC (RTP/RTSP/TCP, IPv4)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-9
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel AAC, RTP/RTSP/TCP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for AAC audio streaming using RTP/RTSP/TCP transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. AAC decoder is supported by DUT. RTP/RTSP/TCP is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-9.3">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacDecoding</emphasis> - AAC audio decoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacDecoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-9.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-9.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-10-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-10">
          <title>BACKCHANNEL – AAC (RTP-Unicast/UDP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-10
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel AAC, RTP-Unicast/UDP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for AAC audio streaming using RTP-Unicast/UDP transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. AAC decoder is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-10.4">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP Type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacDecoding</emphasis> - AAC audio decoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacDecoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-10.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-10.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>


        <!--MEDIA2_RTSS-3-1-12-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-12">
          <title>BACKCHANNEL – AAC (RTP/RTSP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-12
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel AAC, RTP/RTSP/TCP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for AAC audio streaming using RTP/RTSP/TCP transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. AAC decoder is supported by DUT. RTP/RTSP/TCP is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-12.4">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP Type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacDecoding</emphasis> - AAC audio decoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacDecoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-12.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-12.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-13-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-13">
          <title>BACKCHANNEL – G.711 (RTP-Unicast/RTSP/WebSockets)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-13
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), Capabilities (ONVIF Media2 Service Specification),  WebSocket transport for RTP/RTSP/TCP (ONVIF Streaming Specification).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel G.711 over WebSocket, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for G.711 audio streaming over WebSocket for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. G.711 decoder is supported by DUT. RTP/RTSP/TCP is supported by DUT. Real-time streaming is supported by DUT.
            WebSocket is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-13.3">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start an audio backchannel streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingOverWebSocket"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-13.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-13.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-14-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-14">
          <title>BACKCHANNEL – AAC (RTP-Unicast/RTSP/WebSockets)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-14
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), Capabilities (ONVIF Media2 Service Specification),  WebSocket transport for RTP/RTSP/TCP (ONVIF Streaming Specification).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel AAC over WebSocket, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for AAC audio streaming over WebSocket for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. AAC decoder is supported by DUT. RTP/RTSP/TCP is supported by DUT. Real-time streaming is supported by DUT.
            WebSocket is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-14.3">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacDecoding</emphasis> - AAC audio decoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start an audio backchannel streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingOverWebSocket"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacDecoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-14.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-14.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-15-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-15">
          <title>BACKCHANNEL – G.711 (RTP-Unicast/RTSP/WebSockets, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-15
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), Capabilities (ONVIF Media2 Service Specification),  WebSocket transport for RTP/RTSP/TCP (ONVIF Streaming Specification).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel G.711 over WebSocket, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for G.711 audio streaming over WebSocket for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. G.711 decoder is supported by DUT. RTP/RTSP/TCP is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
            WebSocket is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-15.4">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP Type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start an audio backchannel streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingOverWebSocket"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-15.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-15.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-16-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-16">
          <title>BACKCHANNEL – AAC (RTP-Unicast/RTSP/WebSockets, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-16
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), Capabilities (ONVIF Media2 Service Specification),  WebSocket transport for RTP/RTSP/TCP (ONVIF Streaming Specification).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel AAC over WebSocket, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for AAC audio streaming over WebSocket for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. AAC decoder is supported by DUT. RTP/RTSP/TCP is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
            WebSocket is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-16.4">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP Type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacDecoding</emphasis> - AAC audio decoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start an audio backchannel streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingOverWebSocket"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacDecoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-16.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-16.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>

        <section xml:id="tc.MEDIA2_RTSS-3-1-21">
          <title>BACKCHANNEL STREAMING BY POST – G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv4)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-21
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel G.711, RTP-Unicast/RTSP/HTTP/TCP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for G.711 audio streaming using RTP-Unicast/RTSP/HTTP/TCP transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. G.711 decoder is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-21.3">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming by POST over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingByPOSTRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-21.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-21.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-22-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-22">
          <title> BACKCHANNEL STREAMING BY POST – G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-22
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel G.711, RTP-Unicast/RTSP/HTTP/TCP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for G.711 audio streaming using RTP-Unicast/RTSP/HTTP/TCP transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. G.711 decoder is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-22.4">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP Type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming by POST over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingByPOSTRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-22.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-22.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-23-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-23">
          <title>BACKCHANNEL STREAMING BY POST – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv4)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-23
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel AAC, RTP-Unicast/RTSP/HTTP/TCP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for AAC audio streaming using RTP-Unicast/RTSP/HTTP/TCP transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. AAC decoder is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-23.3">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacDecoding</emphasis> - AAC audio decoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming by POST over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingByPOSTRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacDecoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-23.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-23.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-24-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-24">
          <title>BACKCHANNEL STREAMING BY POST – AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-24
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel AAC, RTP-Unicast/RTSP/HTTP/TCP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for AAC audio streaming using RTP-Unicast/RTSP/HTTP/TCP transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. AAC decoder is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-24.4">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP Type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacDecoding</emphasis> - AAC audio decoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming by POST over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingByPOSTRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacDecoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-24.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-24.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-25-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-25">
          <title>BACKCHANNEL STREAMING BY POST – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv4)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-25
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming), RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP, RTSP over HTTPS.
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel G.711, Streaming over RTP-Unicast/RTSP/HTTPS/TCP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for G.711 audio streaming using RTP-Unicast/RTSP/HTTPS/TCP transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by the DUT. G.711 decoder is supported by the DUT. Real-time streaming is supported by the DUT. RTP/RTSP/HTTPS/TCP feature is supported by the DUT. HTTPS is configured on the DUT, if TLS Server is not supported by the DUT.
            Security Configuration Service is received from the DUT, if TLS Server is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-25.3">
                <para>
                  ONVIF Client configures HTTPS if required by following the procedure mentioned in <xref linkend="Annex_HelperCheckAndConfigureHTTPS"/>.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-25.4">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming by POST over RTP-Unicast/RTSP/HTTPS/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingByPOSTRTPUnicastRTSPHTTPSTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-25.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-25.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores HTTPS settings which was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-25.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-26-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-26">
          <title>BACKCHANNEL STREAMING BY POST – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv4)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-26
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming), RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP, RTSP over HTTPS.
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel AAC, Streaming over RTP-Unicast/RTSP/HTTPS/TCP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for AAC audio streaming using RTP-Unicast/RTSP/HTTPS/TCP transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by the DUT. AAC decoder is supported by the DUT. Real-time streaming is supported by the DUT. RTP/RTSP/HTTPS/TCP feature is supported by the DUT. HTTPS is configured on the DUT, if TLS Server is not supported by the DUT.
            Security Configuration Service is received from the DUT, if TLS Server is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-26.3">
                <para>
                  ONVIF Client configures HTTPS if required by following the procedure mentioned in <xref linkend="Annex_HelperCheckAndConfigureHTTPS"/>.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-26.4">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacDecoding</emphasis> - AAC audio decoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming by POST over RTP-Unicast/RTSP/HTTPS/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingByPOSTRTPUnicastRTSPHTTPSTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacDecoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-26.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-26.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores HTTPS settings which was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-26.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-27-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-27">
          <title>BACKCHANNEL STREAMING BY POST – G.711 (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-27
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming), RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP, RTSP over HTTPS.
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel G.711, Streaming over RTP-Unicast/RTSP/HTTPS/TCP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for G.711 audio streaming using RTP-Unicast/RTSP/HTTPS/TCP transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by the DUT. G.711 decoder is supported by the DUT. Real-time streaming is supported by the DUT. RTP/RTSP/HTTPS/TCP feature is supported by the DUT. HTTPS is configured on the DUT, if TLS Server is not supported by the DUT.
            Security Configuration Service is received from the DUT, if TLS Server is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-27.4">
                <para>
                  ONVIF Client configures HTTPS if required by following the procedure mentioned in <xref linkend="Annex_HelperCheckAndConfigureHTTPS"/>.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-27.5">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP Type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming by POST over RTP-Unicast/RTSP/HTTPS/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingByPOSTRTPUnicastRTSPHTTPSTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-27.5"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-27.5"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores HTTPS settings which was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-27.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2_RTSS-3-1-28-->
        <section xml:id="tc.MEDIA2_RTSS-3-1-28">
          <title>BACKCHANNEL STREAMING BY POST – AAC (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-1-28
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming), RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP, RTSP over HTTPS.
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel AAC, Streaming over RTP-Unicast/RTSP/HTTPS/TCP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for AAC audio streaming using RTP-Unicast/RTSP/HTTPS/TCP transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by the DUT. AAC decoder is supported by the DUT. Real-time streaming is supported by the DUT. RTP/RTSP/HTTPS/TCP feature is supported by the DUT. HTTPS is configured on the DUT, if TLS Server is not supported by the DUT.
            Security Configuration Service is received from the DUT, if TLS Server is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-28.4">
                <para>
                  ONVIF Client configures HTTPS if required by following the procedure mentioned in <xref linkend="Annex_HelperCheckAndConfigureHTTPS"/>.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-1-28.5">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP Type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">aacDecoding</emphasis> - AAC audio decoding that is set in profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming by POST over RTP-Unicast/RTSP/HTTPS/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingByPOSTRTPUnicastRTSPHTTPSTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">aacDecoding</emphasis> - expected media stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-28.5"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-28.5"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores HTTPS settings which was changed at step <xref linkend="tc.MEDIA2_RTSS-3-1-28.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>

      </section>
      <!--Multicast-->
      <!--<section xml:id="tc.real_time_streaming.audio_backchannel.multicast">-->
      <!--<title>Multicast</title>-->
      <!--MEDIA2_RTSS-3-2-1-->
      <!--<section xml:id="tc.MEDIA2_RTSS-3-2-1">
          <title>BACKCHANNEL – G.711 (RTP-Multicast/UDP, IPv4)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-2-1
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel G.711, RTP-Multicast/UDP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for G.711 audio streaming using RTP-Multicast/UDP transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. G.711 decoder is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-2-1.3">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client removes Video Encoder Configuration, Audio Encoder Configuration and Metadata Configuration from media profile by following the procedure mentioned in <xref linkend="Annex_HelperRemoveAudioEncoderConfigAndMetadataConfigAndVideoConfigFromMediaProfile">Annex A.25</link> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">profile</emphasis> - Media Profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingRTPMulticast">Annex A.24</link> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version for multicast streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-2-1.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-2-1.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>-->
      <!--MEDIA2_RTSS-3-2-2-->
      <!--<section xml:id="tc.MEDIA2_RTSS-3-2-2">
          <title>BACKCHANNEL – G.711 (RTP-Multicast/UDP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-2-2
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel G.711, RTP-Multicast/UDP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for G.711 audio streaming using RTP-Multicast/UDP transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. G.711 decoder is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-2-2.4">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client removes Video Encoder Configuration, Audio Encoder Configuration and Metadata Configuration from media profile by following the procedure mentioned in <xref linkend="Annex_HelperRemoveAudioEncoderConfigAndMetadataConfigAndVideoConfigFromMediaProfile">Annex A.25</link> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">profile</emphasis> - Media Profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingRTPMulticast">Annex A.24</link> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected media stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version for multicast streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-2-2.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-2-2.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>-->
      <!--MEDIA2_RTSS-3-2-3-->
      <!--<section xml:id="tc.MEDIA2_RTSS-3-2-3">
          <title>BACKCHANNEL – AAC (RTP-Multicast/UDP, IPv4)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-2-3
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel AAC, RTP-Multicast/UDP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for AAC audio streaming using RTP-Multicast/UDP transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. AAC decoder is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-2-3.3">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in MP4A-LATM - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client removes Video Encoder Configuration, Audio Encoder Configuration and Metadata Configuration from media profile by following the procedure mentioned in <xref linkend="Annex_HelperRemoveAudioEncoderConfigAndMetadataConfigAndVideoConfigFromMediaProfile">Annex A.25</link> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">profile</emphasis> - Media Profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingRTPMulticast">Annex A.24</link> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in AAC - expected media stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version for multicast streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-2-3.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-2-3.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>-->
      <!--MEDIA2_RTSS-3-2-4-->
      <!--<section xml:id="tc.MEDIA2_RTSS-3-2-4">
          <title>BACKCHANNEL – AAC (RTP-Multicast/UDP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-3-2-4
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Back Channel Connection (Streaming), RTSP Require- Tag (Streaming), Connection setup for a bi-directional connection (Streaming).
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> Audio Backchannel AAC, RTP-Multicast/UDP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Backchannel for AAC audio streaming using RTP-Multicast/UDP transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. AAC decoder is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-3-2-4.4">
                <para>
                  ONVIF Client configures a Media Profile which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and gets stream URI for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForBackchannelStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in MP4A-LATM - required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration and Audio Decoder Configuration with the required audio decoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client removes Video Encoder Configuration, Audio Encoder Configuration and Metadata Configuration from media profile by following the procedure mentioned in <xref linkend="Annex_HelperRemoveAudioEncoderConfigAndMetadataConfigAndVideoConfigFromMediaProfile">Annex A.25</link> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">profile</emphasis> - Media Profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelStreamingRTPMulticast">Annex A.24</link> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in AAC - expected media stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version for multicast streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-2-4.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-3-2-4.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>-->
      <!--</section>-->
    </section>
    <!--Metadata Streaming-->
    <section xml:id="tc.real_time_streaming.metadata_streaming">
      <title>Metadata Streaming</title>
      <!--Unicast-->
      <section xml:id="tc.real_time_streaming.metadata_streaming.unicast">
        <title>Unicast</title>
        <!--MEDIA2_RTSS-4-1-1-->
        <section xml:id="tc.MEDIA2_RTSS-4-1-1">
          <title>METADATA STREAMING (RTP-Unicast/UDP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-4-1-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP for Metadata stream, RTCP, Stream control, RTSP session for a Metadata stream.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Metadata Streaming, RTP-Unicast/UDP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify metadata streaming based on RTP/UDP Unicast Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature is supported by the DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-1-1.3">
                <para>
                  ONVIF Client selects a Media Profile with Metadata Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForMetadataStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Metadata Configuration
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>


              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperMetadataStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>

                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Metadata Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-1.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-1.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not pass all assertions.
                </para>
              </listitem>

            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-4-1-2-->
        <section xml:id="tc.MEDIA2_RTSS-4-1-2">
          <title>METADATA STREAMING (RTP-Unicast/RTSP/HTTP/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-4-1-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTSP over HTTP, RTP for Metadata stream, RTCP, Stream control, RTSP session for a Metadata stream.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Metadata Streaming, RTP-Unicast/RTSP/HTTP/TCP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify metadata streaming based on HTTP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature is supported by the DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-1-2.3">
                <para>
                  ONVIF Client selects a Media Profile with Metadata Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForMetadataStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Metadata Configuration
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperMetadataStreamingRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Metadata Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-2.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-2.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not pass all assertions.
                </para>
              </listitem>


            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-4-1-3-->
        <section xml:id="tc.MEDIA2_RTSS-4-1-3">
          <title>METADATA STREAMING (RTP/RTSP/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-4-1-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/TCP, RTP for Metadata stream, RTCP, Stream control, RTSP session for a Metadata stream.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Metadata Streaming, RTP/RTSP/TCP
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify metadata streaming based on RTP/RTSP/TCP Unicast Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature is supported by the DUT. Real-time streaming is supported by DUT. RTP/RTSP/TCP is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-1-3.3">
                <para>
                  ONVIF Client selects a Media Profile with Metadata Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForMetadataStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in RTSP - Transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Metadata Configuration
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>


              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTSP by following the procedure mentioned in <xref linkend="Annex_HelperMetadataStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Metadata Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-3.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-3.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not pass all assertions.
                </para>
              </listitem>


            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-4-1-4-->
        <section xml:id="tc.MEDIA2_RTSS-4-1-4">
          <title>METADATA STREAMING - SET SYNCHRONIZATION POINT</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-4-1-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP for Metadata stream, Synchronization Points.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Synchronization Points for Metadata Streaming
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To request synchronization point from DUT for metadata streaming.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature is supported by the DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-1-4.3">
                <para>
                  ONVIF Client selects a Media Profile with Metadata Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForMetadataStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Metadata Configuration
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address.
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Response header =: <emphasis role="italic">responseHeader</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        SDP information =: <emphasis role="italic">sdp</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">sdp</emphasis> - SDP information
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to 'application' media type with 'vnd.onvif.metadata' encoding name in a=rtpmap (see [RFC2326] for details), with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Transport := RTP/AVP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Transport
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Session =: <emphasis role="italic">session</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Session := <emphasis role="italic">session</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Session
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        RTP-Info
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <!--<listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">SetMetadataConfiguration</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Configuration.@token := <emphasis role="italic">metadataConfiguration</emphasis>.@token
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Configuration.Name := <emphasis role="italic">metadataConfiguration</emphasis>.Name
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Configuration.UseCount := <emphasis role="italic">metadataConfiguration</emphasis>.UseCount
                      </para>
                    </listitem>
                    
                    <listitem>
                      <para>
                        Configuration.@CompressionType := <emphasis role="italic">metadataConfiguration</emphasis>.CompressionType
                      </para>
                    </listitem>
                  

                    <listitem>
                      <para>
                        Configuration.PTZStatus := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Configuration.PTZStatus.Status := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Status
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Configuration.PTZStatus.Position := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Position
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        Configuration.Events.Filter.TopicExpression.Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Configuration.Events.Filter.TopicExpression := "tns1:Media/ConfigurationChanged"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Configuration.Events.Filter.MessageContent skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Configuration.Events.SubscriptionPolicy skipped
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        Configuration.Analytics := <emphasis role="italic">metadataConfiguration</emphasis>.Analytics
                      </para>
                    </listitem>


                    <listitem>
                      <para>
                        Configuration.Multicast.Address.Type := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.Type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Configuration.Multicast.Address.IPv4Address := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv4Address
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Configuration.Multicast.Address.IPv6Address := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv6Address
                      </para>
                    </listitem>




                    <listitem>
                      <para>
                        Configuration.Multicast.Port := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Port
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Configuration.Multicast.TTL := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.TTL
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Configuration.Multicast.AutoStart := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.AutoStart
                      </para>
                    </listitem>


                  
                    <listitem>
                      <para>
                        Configuration.SessionTimeout := <emphasis role="italic">metadataConfiguration</emphasis>.SessionTimeout
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>-->
              <!--<listitem>
                <para>
                  The DUT responds with <emphasis role="bold">SetMetadataConfigurationResponse</emphasis> message.
                </para>
              </listitem>-->
              <listitem>
                <para>
                  If DUT does not send Metadata RTP media stream to ONVIF Client over UDP, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">SetSynchronizationPoint</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  If DUT does not close previous XML document and does not start new XML document, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Session := <emphasis role="italic">session</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Session
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Metadata Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-1.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-1.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>


              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
                </para>
              </listitem>
              <listitem>
                <para>
                  RTSP Session is terminated by DUT during media streaming.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-4-1-5-->
        <section xml:id="tc.MEDIA2_RTSS-4-1-5">
          <title>METADATA STREAMING (RTP-Unicast/UDP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-4-1-5
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP for Metadata stream, RTCP, Stream control, RTSP session for a Metadata stream.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Metadata Streaming, RTP-Unicast/UDP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify metadata streaming based on RTP/UDP Unicast Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature is supported by the DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-1-5.4">
                <para>
                  ONVIF Client selects a Media Profile with Metadata Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForMetadataStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Metadata Configuration
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>





              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperMetadataStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Metadata Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-5.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-5.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not pass all assertions.
                </para>
              </listitem>


            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-4-1-6-->
        <section xml:id="tc.MEDIA2_RTSS-4-1-6">
          <title>METADATA STREAMING (RTP-Unicast/RTSP/HTTP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-4-1-6
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTSP over HTTP, RTP for Metadata stream, RTCP, Stream control, RTSP session for a Metadata stream.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Metadata Streaming, RTP-Unicast/RTSP/HTTP/TCP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify metadata streaming based on HTTP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature is supported by the DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-1-6.4">
                <para>
                  ONVIF Client selects a Media Profile with Metadata Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForMetadataStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Metadata Configuration
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperMetadataStreamingRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Metadata Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-6.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-6.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not pass all assertions.
                </para>
              </listitem>


            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-4-1-7-->
        <section xml:id="tc.MEDIA2_RTSS-4-1-7">
          <title>METADATA STREAMING (RTP/RTSP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-4-1-7
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/TCP, RTP for Metadata stream, RTCP, Stream control, RTSP session for a Metadata stream.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Metadata Streaming, RTP/RTSP/TCP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify metadata streaming based on RTP/RTSP/TCP Unicast Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.Metadata feature is supported by the DUT. Real-time streaming is supported by DUT. RTP/RTSP/TCP is supported by DUT.
            IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-1-7.4">
                <para>
                  ONVIF Client selects a Media Profile with Metadata Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForMetadataStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in RTSP - Transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Metadata Configuration
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>


              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTSP by following the procedure mentioned in <xref linkend="Annex_HelperMetadataStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>


              <listitem>
                <para>
                  ONVIF Client restores settings of Metadata Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-7.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-7.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not pass all assertions.
                </para>
              </listitem>

            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-4-1-8-->
        <section xml:id="tc.MEDIA2_RTSS-4-1-8">
          <title>METADATA STREAMING (RTP-Unicast/RTSP/HTTPS/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-4-1-8
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTPS/TCP, RTSP over HTTP, RTP for Metadata stream, RTCP, Stream control, RTSP session for a Metadata stream, RTSP over HTTPS
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Metadata Streaming, Streaming over RTP-Unicast/RTSP/HTTP/TCP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify metadata streaming based on HTTPS Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature is supported by the DUT. Real-time streaming is supported by DUT. RTP/RTSP/HTTPS feature is supported by DUT. HTTPS is configured on the DUT, if TLS Server is not supported by DUT. Security Configuration Service is received from the DUT, if TLS Server is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-1-8.3">
                <para>
                  ONVIF Client configures HTTPS if required by following the procedure mentioned in <xref linkend="Annex_HelperCheckAndConfigureHTTPS"/>.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-1-8.4">
                <para>
                  ONVIF Client selects a Media Profile with Metadata Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForMetadataStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Metadata Configuration
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTPS/TCP by following the procedure mentioned in <xref linkend="Annex_HelperMetadataStreamingRTPUnicastRTSPHTTPSTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Metadata Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-8.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-8.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores HTTPS settings which was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-8.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not pass all assertions.
                </para>
              </listitem>


            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-4-1-9-->
        <section xml:id="tc.MEDIA2_RTSS-4-1-9">
          <title>METADATA STREAMING (RTP-Unicast/RTSP/HTTPS/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-4-1-9
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTPS/TCP, RTSP over HTTP, RTP for Metadata stream, RTCP, Stream control, RTSP session for a Metadata stream, RTSP over HTTPS
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Metadata Streaming, Streaming over RTP-Unicast/RTSP/HTTP/TCP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify metadata streaming based on HTTPS Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature is supported by the DUT. Real-time streaming is supported by DUT. RTP/RTSP/HTTPS feature is supported by DUT. HTTPS is configured on the DUT, if TLS Server is not supported by DUT. Security Configuration Service is received from the DUT, if TLS Server is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-1-9.4">
                <para>
                  ONVIF Client configures HTTPS if required by following the procedure mentioned in <xref linkend="Annex_HelperCheckAndConfigureHTTPS"/>.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-1-9.5">
                <para>
                  ONVIF Client selects a Media Profile with Metadata Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForMetadataStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Metadata Configuration
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTPS/TCP by following the procedure mentioned in <xref linkend="Annex_HelperMetadataStreamingRTPUnicastRTSPHTTPSTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Metadata Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-9.5"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-9.5"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores HTTPS settings which was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-9.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not pass all assertions.
                </para>
              </listitem>


            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-4-1-10-->
        <section xml:id="tc.MEDIA2_RTSS-4-1-10">
          <title>METADATA STREAMING (RTP-Unicast/RTSP/WebSockets)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-4-1-10
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> WebSocket transport for RTP/RTSP/TCP (ONVIF Streaming Specification).
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Metadata Streaming, Streaming over WebSocket, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify metadata streaming over WebSocket.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature is supported by the DUT. Real-time streaming is supported by DUT. WebSocket is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-1-10.3">
                <para>
                  ONVIF Client selects a Media Profile with Metadata Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForMetadataStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in RTSP - Transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Metadata Configuration
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>


              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over WebSocket by following the procedure mentioned in <xref linkend="Annex_HelperMetadataStreamingWebSocket"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>

                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Metadata Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-10.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-10.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not pass all assertions.
                </para>
              </listitem>

            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-4-1-11-->
        <section xml:id="tc.MEDIA2_RTSS-4-1-11">
          <title>METADATA STREAMING (RTP-Unicast/RTSP/WebSockets, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-4-1-11
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> WebSocket transport for RTP/RTSP/TCP (ONVIF Streaming Specification).
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Metadata Streaming, Streaming over WebSocket, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify metadata streaming over WebSocket for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature is supported by the DUT. Real-time streaming is supported by DUT. IPv6 is supported by DUT. WebSocket is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-1-11.4">
                <para>
                  ONVIF Client selects a Media Profile with Metadata Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForMetadataStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in RTSP - Transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Metadata Configuration
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>





              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over WebSocket by following the procedure mentioned in <xref linkend="Annex_HelperMetadataStreamingWebSocket"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Metadata Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-11.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-1-11.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not pass all assertions.
                </para>
              </listitem>


            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
      </section>
      <!--Multicast-->
      <section xml:id="tc.real_time_streaming.metadata_streaming.multicast">
        <title>Multicast</title>
        <!--MEDIA2_RTSS-4-2-1-->
        <section xml:id="tc.MEDIA2_RTSS-4-2-1">
          <title>METADATA STREAMING (RTP-Multicast/UDP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-4-2-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP for Metadata stream, RTCP, Stream control, RTSP session for a Metadata stream.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Metadata Streaming, RTP-Multicast/UDP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify metadata streaming using RTP-Multicast/UDP transport for IPv4.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature is supported by the DUT. Real-time streaming is supported by DUT. RTP-Multicast/UDP is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-2-1.3">
                <para>
                  ONVIF Client selects a Media Profile with Metadata Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForMetadataStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in RtspMulticast - Transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version of Multicast streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Metadata Configuration
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Multicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperMetadataStreamingRTPMulticastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version for multicast streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Metadata Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-2-1.3"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-2-1.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not pass all assertions.
                </para>
              </listitem>


            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-4-2-2-->
        <section xml:id="tc.MEDIA2_RTSS-4-2-2">
          <title>METADATA STREAMING (RTP-Multicast/UDP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-4-2-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP for Metadata stream, RTCP, Stream control, RTSP session for a Metadata stream.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Metadata Streaming, RTP-Multicast/UDP, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify metadata streaming using RTP-Multicast/UDP transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature is supported by the DUT. Real-time streaming is supported by DUT. RTP-Multicast/UDP is supported by DUT. IPv6 is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-4-2-2.4">
                <para>
                  ONVIF Client selects a Media Profile with Metadata Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForMetadataStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in RtspMulticast - Transport protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Metadata Configuration
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Multicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperMetadataStreamingRTPMulticastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version for multicast streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">metadataConfiguration</emphasis> - Metadata Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Metadata Configuration with @token = <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-2-2.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token if it was changed at step <xref linkend="tc.MEDIA2_RTSS-4-2-2.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not pass all assertions.
                </para>
              </listitem>

            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
      </section>
    </section>
    <!--Audio & Video Streaming-->
    <section xml:id="tc.real_time_streaming.audio_and_video_streaming">
      <title>Audio &amp; Video Streaming</title>
      <!--Unicast-->
      <section xml:id="tc.real_time_streaming.audio_and_video_streaming.unicast">
        <title>Unicast</title>
        <!--MEDIA2_RTSS-5-1-1-->
        <section xml:id="tc.MEDIA2_RTSS-5-1-1">
          <title>MEDIA2 STREAMING – H.26X/G.711 (RTP-Unicast/UDP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-1-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/UDP, G.711
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/G.711 or H.265/G.711 video and audio media streaming based on RTP-Unicast/UDP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-1-1.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-1-1.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-5-1-2-->
        <section xml:id="tc.MEDIA2_RTSS-5-1-2">
          <title>MEDIA2 STREAMING – H.26X/G.711 (RTP-Unicast/RTSP/HTTP/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-1-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTP/TCP, G.711
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/G.711 or H.265/G.711 video and audio media streaming based on RTP-Unicast/RTSP/HTTP/TCP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-1-2.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-1-2.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-5-1-3-->
        <section xml:id="tc.MEDIA2_RTSS-5-1-3">
          <title>MEDIA2 STREAMING – H.26X/G.711 (RTP/RTSP/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-1-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/TCP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP/RTSP/TCP, G.711
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/G.711 or H.265/G.711 video and audio media streaming based on RTP/RTSP/TCP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. G.711 encoding is supported by DUT. RTP/RTSP/TCP is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-1-3.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-1-3.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-5-1-4-->
        <section xml:id="tc.MEDIA2_RTSS-5-1-4">
          <title>MEDIA2 STREAMING – H.26X/G.711 (RTP-Unicast/UDP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-1-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/UDP, G.711, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/G.711 or H.265/G.711 video and audio media streaming based on RTP-Unicast/UDP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-1-4.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-1-4.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-5-1-5-->
        <section xml:id="tc.MEDIA2_RTSS-5-1-5">
          <title>MEDIA2 STREAMING – H.26X/G.711 (RTP-Unicast/RTSP/HTTP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-1-5
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTP/TCP, G.711, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/G.711 or H.265/G.711 video and audio media streaming based on RTP-Unicast/RTSP/HTTP/TCP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-1-5.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-1-5.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-5-1-6-->
        <section xml:id="tc.MEDIA2_RTSS-5-1-6">
          <title>MEDIA2 STREAMING – H.26X/G.711 (RTP/RTSP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-1-6
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/TCP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP/RTSP/TCP, G.711, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/G.711 or H.265/G.711 video and audio media streaming based on RTP/RTSP/TCP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. G.711 encoding is supported by DUT. RTP/RTSP/TCP is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-1-6.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-1-6.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-5-1-7-->
        <section xml:id="tc.MEDIA2_RTSS-5-1-7">
          <title>MEDIA2 STREAMING – H.26X/AAC (RTP-Unicast/UDP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-1-7
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/UDP, AAC
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/AAC or H.265/AAC video and audio media streaming based on RTP-Unicast/UDP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-1-7.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media profile with required configurations
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">audioEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">audioEncoding</emphasis> - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-1-7.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-5-1-8-->
        <section xml:id="tc.MEDIA2_RTSS-5-1-8">
          <title>MEDIA2 STREAMING – H.26X/AAC (RTP-Unicast/RTSP/HTTP/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-1-8
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTP/TCP, AAC
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/AAC or H.265/AAC video and audio media streaming based on RTP-Unicast/RTSP/HTTP/TCP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-1-8.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media profile with required configurations
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">audioEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">audioEncoding</emphasis> - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-1-8.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-5-1-9-->
        <section xml:id="tc.MEDIA2_RTSS-5-1-9">
          <title>MEDIA2 STREAMING – H.26X/AAC (RTP/RTSP/TCP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-1-9
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/TCP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP/RTSP/TCP, AAC
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/AAC or H.265/AAC video and audio media streaming based on RTP/RTSP/TCP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. AAC encoding is supported by DUT. RTP/RTSP/TCP is supported by DUT. Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-1-9.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media profile with required configurations
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">audioEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">audioEncoding</emphasis> - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-1-9.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-5-1-10-->
        <section xml:id="tc.MEDIA2_RTSS-5-1-10">
          <title>MEDIA2 STREAMING – H.26X/AAC (RTP-Unicast/UDP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-1-10
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/UDP, AAC, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/AAC or H.265/AAC video and audio media streaming based on RTP-Unicast/UDP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-1-10.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media profile with required configurations
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">audioEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">audioEncoding</emphasis> - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-1-10.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-5-1-11-->
        <section xml:id="tc.MEDIA2_RTSS-5-1-11">
          <title>MEDIA2 STREAMING – H.26X/AAC (RTP-Unicast/RTSP/HTTP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-1-11
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/HTTP/TCP, RTP, RTCP, Stream control, RTSP, RTSP over HTTP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Unicast/RTSP/HTTP/TCP, AAC, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/AAC or H.265/AAC video and audio media streaming based on RTP-Unicast/RTSP/HTTP/TCP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-1-11.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspOverHttp - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media profile with required configurations
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">audioEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Unicast/RTSP/HTTP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPUnicastRTSPHTTPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">audioEncoding</emphasis> - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-1-11.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-5-1-12-->
        <section xml:id="tc.MEDIA2_RTSS-5-1-12">
          <title>MEDIA2 STREAMING – H.26X/AAC (RTP/RTSP/TCP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-1-12
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP/RTSP/TCP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP/RTSP/TCP, AAC, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/AAC or H.265/AAC video and audio media streaming based on RTP/RTSP/TCP Transport for IPv6.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. AAC encoding is supported by DUT. RTP/RTSP/TCP is supported by DUT. Real-time streaming is supported by DUT. IPv6 is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-1-12.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RTSP - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media profile with required configurations
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">audioEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP/RTSP/TCP by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPRTSPTCP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">audioEncoding</emphasis> - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-1-12.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>

      </section>
      <!--Multicast-->
      <section xml:id="tc.real_time_streaming.audio_and_video_streaming.multicast">
        <title>Multicast</title>
        <!--MEDIA2_RTSS-5-2-1-->
        <section xml:id="tc.MEDIA2_RTSS-5-2-1">
          <title>MEDIA2 STREAMING – H.26X/G.711 (RTP-Multicast/UDP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-2-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Multicast, G.711
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/G.711 or H.265/G.711 video and audio media streaming based on RTP-Multicast/UDP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT. RTP-Multicast transport protocol is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-2-1.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Multicast by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPMulticast"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-2-1.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-5-2-2-->
        <section xml:id="tc.MEDIA2_RTSS-5-2-2">
          <title>MEDIA2 STREAMING – H.26X/G.711 (RTP-Multicast/UDP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-2-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP, IPv6.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Multicast, G.711, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/G.711 or H.265/G.711 video and audio media streaming based on RTP-Multicast/UDP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. G.711 encoding is supported by DUT. Real-time streaming is supported by DUT. RTP-Multicast transport protocol is supported by DUT. IPv6 is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-2-2.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Multicast by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPMulticast"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in G.711 - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-2-2.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-5-2-3-->
        <section xml:id="tc.MEDIA2_RTSS-5-2-3">
          <title>MEDIA2 STREAMING – H.26X/AAC (RTP-Multicast/UDP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-2-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Multicast, AAC
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/AAC or H.265/AAC video and audio media streaming based on RTP-Multicast/UDP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT. RTP-Multicast transport protocol is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-2-3.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media profile with required configurations
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">audioEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Multicast by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPMulticast"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">audioEncoding</emphasis> - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-2-3.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
        <!--MEDIA2_RTSS-5-2-4-->
        <section xml:id="tc.MEDIA2_RTSS-5-2-4">
          <title>MEDIA2 STREAMING – H.26X/AAC (RTP-Multicast/UDP, IPv6)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-5-2-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP, IPv6.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Streaming over RTP-Multicast, AAC, IPv6
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify H.264/AAC or H.265/AAC video and audio media streaming based on RTP-Multicast/UDP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT. H.264 encoding OR H.265 encoding is supported by DUT. AAC encoding is supported by DUT. Real-time streaming is supported by DUT. RTP-Multicast transport protocol is supported by DUT. IPv6 is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures IPv6 address to use it for the next test steps by following the procedure mentioned in <xref linkend="Annex_HelperTurnOnIPv6"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-5-2-4.4">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in AAC - required audio encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspMulticast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv6 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media profile with required configurations
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">audioEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start and decode media streaming over RTP-Multicast by following the procedure mentioned in <xref linkend="Annex_HelperStreamingRTPMulticast"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in video - 1st media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in audio - 2nd media type
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">audioEncoding</emphasis> - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-5-2-4.4"/>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores network settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreNetworkSettings"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">initialNetworkSettings</emphasis> - initial Network settings
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>
      </section>
    </section>
    <!--Audio Backchannel & Audio & Video Streaming-->
    <section xml:id="tc.real_time_streaming.audio_backchannel_and_audio_and_video_streaming">
      <title>Audio Backchannel &amp; Video &amp; Audio Streaming</title>
      <!--Unicast-->
      <section xml:id="tc.real_time_streaming.audio_backchannel_and_audio_and_video_streaming.unicast">
        <title>Unicast</title>
        <!--MEDIA2_RTSS-6-1-1-->
        <section xml:id="tc.MEDIA2_RTSS-6-1-1">
          <title>MEDIA2 STREAMING – G.711 BACKCHANNEL AND H.26X VIDEO AND G.711/AAC AUDIO (RTP-Unicast/UDP)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2_RTSS-6-1-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> RTP data transfer via UDP, RTP, RTCP, Stream control, RTSP.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> Audio Backchannel G.711 with Video and Audio streaming, RTP-Unicast/UDP, IPv4
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> None
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify G.711 audio backchannel with H.264 or H.265 video and with G.711 or AAC audio media streaming based on RTP-Unicast/UDP Transport.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>
            Media2 Service is received from the DUT.
            Audio Outputs is supported by DUT. G.711 decoder is supported by DUT.
            Audio is supported by DUT. G.711 OR AAC audio encoding is supported by DUT.
            Video is supported by DUT. H.264 OR H.265 video encoding is supported by DUT.
            Real-time streaming is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2_RTSS-6-1-1.3">
                <para>
                  ONVIF Client configures a media profile and retrieves a stream uri for audio backchannel and video and audio streaming by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForBackchannelAndVideoAndAudioStreaming"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in PCMU - required supported audio decoder
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in RtspUnicast - Transport Protocol
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in IPv4 - IP version
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - configured media profile
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">videoEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">audioEncoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client tries to start audio backchannel streaming and start and decode media streaming over RTP-Unicast/UDP by following the procedure mentioned in <xref linkend="Annex_HelperBackchannelAndMediaStreamingRTPUnicastUDP"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        in G.711 - audio backchannel stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">videoEncoding</emphasis> - expected video stream encoding
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">audioEncoding</emphasis> - expected audio stream encoding
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings of Audio Decoder Configuration, Video Encoder Configuration, Audio Encoder Configuration, and Media Profile changed at step <xref linkend="tc.MEDIA2_RTSS-6-1-1.3"/>.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT does not pass all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
          </para>
        </section>

      </section>
    </section>
  </chapter>
  <appendix>
    <title>Helper Procedures and Additional Notes</title>
    <!--A.1-->
    <section xml:id="Annex_HelperInvalidRTPHeader" xreflabel="Annex A.1">
      <title>Invalid RTP Header</title>
      <para>
        A RTP header, which is not formed according to the header field format defined in the RFC 3550 Section 5.1, is considered an invalid RTP header.
      </para>
    </section>
    <!--A.2-->
    <section xml:id="Annex_HelperIframeInsertionTimeInterval" xreflabel="Annex A.2">
      <title>I-frame insertion time interval</title>
      <para>
        ‘I-frame insertion time interval’ is the time interval between two consecutive I-frames sent by DUT.
      </para>
      <para>
        ONVIF Client calculates this value by using the ‘GovLength’ parameter in the Video encoder configuration. ONVIF Client has to configure ‘GovLength’ to a large enough value so that there will be a sufficient time difference between two I-frames.
      </para>
      <para>
        For SetSynchronizationPoint test cases in the “Real Time Streaming” section, ONVIF Client follows this procedure to verify that I-frame is inserted as a result of SetSynchronizationPoint request.
      </para>
      <para>
        ONVIF Client waits for an I-frame before invoking SetSynchronizationPoint command.
      </para>
      <para>
        After receiving I-frame, ONVIF Client starts a timer with time out period less than ‘I-frame insertion time interval’ and immediately invokes SetSynchronizationPoint command.
      </para>
      <para>
        ONVIF Client waits for the I-frame and verifies that it receives I-frame before the timeout period.
      </para>
    </section>
    <!--A.3-->
    <section xml:id="Annex_NameParameters" xreflabel="Annex A.3">
      <title>Name and Token Parameters</title>
      <para>
        There are the following limitations on maximum length of the Name and Token parameters that shall be used during tests by ONVIF Device Test Tool to prevent faults from DUT:
        <itemizedlist>
          <listitem>
            <para>
              Name shall be less than or equal to 64 characters (only readable characters accepted).
            </para>
          </listitem>
          <listitem>
            <para>
              Token shall be less than or equal to 64 characters (only readable characters accepted).
            </para>
          </listitem>
          <listitem>
            <para>
              UTF-8 character set shall be used for Name and Token.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> these limitations will not be used, if ONVIF Device Test Tool reuses values that were received from the DUT.
      </para>
    </section>
    <!--A.4-->
    <section xml:id="Annex_HelperTurnOnIPv6" xreflabel="Annex A.4">
      <title>Turn on IPv6 network interface</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperTurnOnIPv6
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to turn on IPv6 network interface.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> IPv6 is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Initial Network settings (<emphasis role="italic">initialNetworkSettings</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetNetworkInterfacesRequest</emphasis> message to retrieve the original settings of the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client verifies <emphasis role="bold">GetNetworkInterfacesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">initialNetworkSettings</emphasis> := available network interface.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="bold">GetNetworkInterfacesResponse</emphasis> message contains NetworkInterfaces.IPv6 and NetworkInterfaces.IPv6.Enabled=true, then ONVIF Client checks NetworkInterfaces.IPv6.Config.DHCP. Otherwise, go to step 11.
            </para>
          </listitem>
          <listitem>
            <para>
              If NetworkInterfaces.IPv6.Config.DHCP=Off, then ONVIF Client checks NetworkInterfaces.IPv6.Config.Manual element. Otherwise, go to step 8.
            </para>
          </listitem>
          <listitem>
            <para>
              If NetworkInterfaces.IPv6.Config.Manual element is present and not empty, then ONVIF Client skips other steps and run test using NetworkInterfaces.IPv6.Config.Manual value as device IP. Otherwise, ONVIF Client checks NetworkInterfaces.IPv6.Config.LinkLocal element.
            </para>
          </listitem>
          <listitem>
            <para>
              If NetworkInterfaces.IPv6.Config.LinkLocal element is present and not empty, then ONVIF Client skips other steps and runs test using NetworkInterfaces.IPv6.Config.LinkLocal value as device IP. Otherwise, ONVIF Client skip other steps and failed test.
            </para>
          </listitem>

          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">SetNetworkInterfacesRequest</emphasis> message to turn off DHCP IPv6 (InterfaceToken = available network interface, NetworkInterfaces.IPv6.Config.DHCP=Off).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client gets current network interfaces via <emphasis role="bold">GetNetworkInterfacesRequest</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client verifies <emphasis role="bold">GetNetworkInterfacesResponse</emphasis> message and checks that set settings were applied. Repeat steps 6-7.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="bold">GetNetworkInterfacesResponse</emphasis> message does not contain NetworkInterfaces.IPv6 or NetworkInterfaces.IPv6.Enabled=false, then ONVIF Client will invoke <emphasis role="bold">SetNetworkInterfacesRequest</emphasis> message (InterfaceToken = available network interface,  NetworkInterfaces.IPv6. Enabled=true) to turn on IPv6 configuration.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT will return <emphasis role="bold">SetNetworkInterfacesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              If Reboot is required by DUT, invoke <emphasis role="bold">SystemReboot</emphasis> command.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT supports Discovery:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for HELLO message from the default network interface.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not support Discovery:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits during <emphasis role="italic">rebootTimeout</emphasis>.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client gets current network interfaces via <emphasis role="bold">GetNetworkInterfacesRequest</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client verifies <emphasis role="bold">GetNetworkInterfacesResponse</emphasis> message and checks that set settings were applaied. Execute steps 5-7.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetNetworkInterfacesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetNetworkInterfacesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SystemReboot</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.5-->
    <section xml:id="Annex_HelperRestoreNetworkSettings" xreflabel="Annex A.5">
      <title>Restore Network Settings</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperRestoreNetworkSettings
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to restore the original default settings.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Initial Network settings to restore (<emphasis role="italic">initialNetworkSettings</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Restore the initial network settings by invoking <emphasis role="bold">SetNetworkInterfaces</emphasis> (Default settings) command.
            </para>
          </listitem>
          <listitem>
            <para>
              If Reboot is required by DUT, invoke <emphasis role="bold">SystemReboot</emphasis> command.
            </para>
          </listitem>
          <listitem>
            <para>
            If <emphasis role="bold"  service="skip">SystemReboot</emphasis> is invoked and DUT supports Discovery, wait for HELLO message from the default network interface.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not support Discovery:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits during <emphasis role="italic">rebootTimeout</emphasis>.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetNetworkInterfacesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetNetworkInterfacesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SystemReboot</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.6-->
    <section xml:id="Annex_HelperFindMediaProfileForVideoStreaming" xreflabel="Annex A.6">
      <title>Media2 Service Profile Configuration for Video Streaming</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperFindMediaProfileForVideoStreaming
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media Profile to contain Video Source Configuration and Video Encoder Configuration with the required video encoding.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Required video encoding (<emphasis role="italic">requiredVideoEncoding</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>) containing Video Source Configuration and Video Encoder Configuration with the required video encoding. Video Encoder Configuration Options for the Media Profile (<emphasis role="italic">vecOptions</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := VideoSource
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[1] := VideoEncoder
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each Media Profile <emphasis role="italic">profile1</emphasis> in <emphasis role="italic">profileList</emphasis> with both Configuration.VideoSource and Configuration.VideoEncoder repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken := <emphasis role="italic">profile1</emphasis>.Configuration.VideoEncoder.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Options list =: <emphasis role="italic">optionsList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">optionsList</emphasis> list contains item with Encoding = <emphasis role="italic">requiredVideoEncoding</emphasis>:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profile1</emphasis>.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">vecOptions</emphasis> := item with Encoding = <emphasis role="italic">requiredVideoEncoding</emphasis> from <emphasis role="italic">optionsList</emphasis> list.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Skip other steps in procedure.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each Media Profile <emphasis role="italic">profile1</emphasis> in <emphasis role="italic">profileList</emphasis> that contains VideoSource configuration repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.@token is different from video source configuration token of previous profiles in cycle:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>

                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ConfigurationToken skipped
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          The DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configurations list =: <emphasis role="italic">videoEncoderConfList</emphasis>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          For each Vedeo Encoder Configuration <emphasis role="italic">videoEncoderConfiguration1</emphasis> in <emphasis role="italic">videoEncoderConfList</emphasis> repeat the following steps:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      ConfigurationToken := <emphasis role="italic">videoEncoderConfiguration1</emphasis>.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      Options list =: <emphasis role="italic">optionsList</emphasis>
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                If <emphasis role="italic">optionsList</emphasis> list contains item with Encoding = <emphasis role="italic">requiredVideoEncoding</emphasis>:
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                                      <itemizedlist>
                                        <listitem>
                                          <para>
                                            ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Name skipped
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Configuration[0].Type := VideoEncoder
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Configuration[0].Token := <emphasis role="italic">videoEncoderConfiguration1</emphasis>.@token
                                          </para>
                                        </listitem>
                                      </itemizedlist>
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profile1</emphasis>.
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Set <emphasis role="italic">vecOptions</emphasis> := item with Encoding = <emphasis role="italic">requiredVideoEncoding</emphasis> from <emphasis role="italic">optionsList</emphasis> list.
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Skip other steps in procedure.
                                    </para>
                                  </listitem>
                                </orderedlist>
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>

          <listitem>
            <para>
              Set <emphasis role="italic">profile1</emphasis> := <emphasis role="italic">profileList</emphasis>[0]
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">confTypeList</emphasis> := (configurations that are contained in profile <emphasis role="italic">profile1</emphasis>)
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client removes all configurations from the Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperRemoveConfigurationsFromMediaProfile"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">confTypeList</emphasis> - list of configuration type to remove from Media Profile
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">profile1</emphasis> - Media Profile to update
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">videoSourceConfList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each Video Source Configuration <emphasis role="italic">videoSourceConfiguration1</emphasis> in <emphasis role="italic">videoSourceConfList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="3.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Name skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Type := VideoSource
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Token := <emphasis role="italic">videoSourceConfiguration1</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configurations list =: <emphasis role="italic">videoEncoderConfList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    For each Video Encoder Configuration <emphasis role="italic">videoEncoderConfiguration1</emphasis> in <emphasis role="italic">videoEncoderConfList</emphasis> repeat the following steps:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="4.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ConfigurationToken := <emphasis role="italic">videoEncoderConfiguration1</emphasis>.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Options list =: <emphasis role="italic">optionsList</emphasis>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">optionsList</emphasis> list contains item with Encoding = <emphasis role="italic">requiredVideoEncoding</emphasis>:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="5.5em"?>
                            <listitem>
                              <para>
                                ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Name skipped
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration[0].Type := VideoEncoder
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration[0].Token := <emphasis role="italic">videoEncoderConfiguration1</emphasis>.@token
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profile1</emphasis>.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">vecOptions</emphasis> := item with Encoding = <emphasis role="italic">requiredVideoEncoding</emphasis> from <emphasis role="italic">optionsList</emphasis> list.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Skip other steps in procedure.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>

          <listitem>
            <para>
              FAIL the test and skip other steps.
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.7-->
    <section xml:id="Annex_HelperConfigureMediaProfileForAudioStreaming" xreflabel="Annex A.7">
      <title>Media2 Service – Media Profile Configuration for Audio Streaming</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperConfigureMediaProfileForAudioStreaming
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media Profile to contain Audio Source Configuration and Audio Encoder Configuration with the required audio encoding.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Audio streaming is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Required audio encoding (<emphasis role="italic">requiredAudioEncoding</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>) containing Audio Source Configuration and Audio Encoder Configuration with the required audio encoding. Audio Encoder Configuration Options for the Media Profile (<emphasis role="italic">aecOptions</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := AudioSource
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[1] := AudioEncoder
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each Media Profile <emphasis role="italic">profile1</emphasis> in <emphasis role="italic">profileList</emphasis> with both Configuration.AudioSource and Configuration.AudioEncoder repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurationOptions</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken := <emphasis role="italic">profile1</emphasis>.Configuration.AudioEncoder.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Options list =: <emphasis role="italic">optionsList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">requiredAudioEncoding</emphasis> = AAC:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          If <emphasis role="italic">optionsList</emphasis> list contains item with Encoding = "MP4A-LATM" or "MPEG4-GENERIC":
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profile1</emphasis>.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">aecOptions</emphasis> := item with Encoding = "MP4A-LATM" from <emphasis role="italic">optionsList</emphasis> list if exists, otherwise item with Encoding = "MPEG4-GENERIC".
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Skip other steps in procedure.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">requiredAudioEncoding</emphasis> = !AAC:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          If <emphasis role="italic">optionsList</emphasis> list contains item with Encoding = <emphasis role="italic">requiredAudioEncoding</emphasis>:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profile1</emphasis>.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">aecOptions</emphasis> := item with Encoding = <emphasis role="italic">requiredAudioEncoding</emphasis> from <emphasis role="italic">optionsList</emphasis> list.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Skip other steps in procedure.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each Media Profile <emphasis role="italic">profile1</emphasis> in <emphasis role="italic">profileList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurations</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configurations list =: <emphasis role="italic">audioSourceConfList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    For each Audio Source Configuration <emphasis role="italic">audioSourceConfiguration1</emphasis> in <emphasis role="italic">audioSourceConfList</emphasis> repeat the following steps:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Name skipped
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Type := AudioSource
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Token := <emphasis role="italic">audioSourceConfiguration1</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurations</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ConfigurationToken skipped
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          The DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationsResponse</emphasis> with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configurations list =: <emphasis role="italic">audioEncoderConfList</emphasis>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          For each Audio Encoder Configuration <emphasis role="italic">audioEncoderConfiguration1</emphasis> in <emphasis role="italic">audioEncoderConfList</emphasis> repeat the following steps:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurationOptions</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      ConfigurationToken := <emphasis role="italic">audioEncoderConfiguration1</emphasis>.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      Options list =: <emphasis role="italic">optionsList</emphasis>
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                If <emphasis role="italic">requiredAudioEncoding</emphasis> = AAC:
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      If <emphasis role="italic">optionsList</emphasis> list contains item with Encoding = "MP4A-LATM" or "MPEG4-GENERIC":
                                      <orderedlist numeration="arabic" inheritnum="inherit">
                                        <?dbfo label-width="5.5em"?>
                                        <listitem>
                                          <para>
                                            ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                                            <itemizedlist>
                                              <listitem>
                                                <para>
                                                  ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                                                </para>
                                              </listitem>
                                              <listitem>
                                                <para>
                                                  Name skipped
                                                </para>
                                              </listitem>
                                              <listitem>
                                                <para>
                                                  Configuration[0].Type := AudioEncoder
                                                </para>
                                              </listitem>
                                              <listitem>
                                                <para>
                                                  Configuration[0].Token := <emphasis role="italic">audioEncoderConfiguration1</emphasis>.@token
                                                </para>
                                              </listitem>
                                            </itemizedlist>
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profile1</emphasis>.
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Set <emphasis role="italic">aecOptions</emphasis> := item with Encoding = "MP4A-LATM" from optionsList list if exists, otherwise item with Encoding = "MPEG4-GENERIC".
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Skip other steps in procedure.
                                          </para>
                                        </listitem>
                                      </orderedlist>
                                    </para>
                                  </listitem>
                                </orderedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                If <emphasis role="italic">requiredAudioEncoding</emphasis> = !AAC:
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      If <emphasis role="italic">optionsList</emphasis> list contains item with Encoding = <emphasis role="italic">requiredAudioEncoding</emphasis>:
                                      <orderedlist numeration="arabic" inheritnum="inherit">
                                        <?dbfo label-width="5.5em"?>
                                        <listitem>
                                          <para>
                                            ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                                            <itemizedlist>
                                              <listitem>
                                                <para>
                                                  ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                                                </para>
                                              </listitem>
                                              <listitem>
                                                <para>
                                                  Name skipped
                                                </para>
                                              </listitem>
                                              <listitem>
                                                <para>
                                                  Configuration[0].Type := AudioEncoder
                                                </para>
                                              </listitem>
                                              <listitem>
                                                <para>
                                                  Configuration[0].Token := <emphasis role="italic">audioEncoderConfiguration1</emphasis>.@token
                                                </para>
                                              </listitem>
                                            </itemizedlist>
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profile1</emphasis>.
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Set <emphasis role="italic">aecOptions</emphasis> := item with Encoding = <emphasis role="italic">requiredAudioEncoding</emphasis> from <emphasis role="italic">optionsList</emphasis> list.
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Skip other steps in procedure.
                                          </para>
                                        </listitem>
                                      </orderedlist>
                                    </para>
                                  </listitem>
                                </orderedlist>
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              FAIL the test and skip other steps.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioEncoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.8-->
    <section xml:id="Annex_HelperRemoveVideoEncoderConfigAndMetadataConfigFromMediaProfile" xreflabel="Annex A.8">
      <title>Removing Video Encoder Configuration and Metadata Configuration from Media Profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperRemoveVideoEncoderConfigAndMetadataConfigFromMediaProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper Procedure to guarantee that Media Profile does not contain Video Encoder Configuration and Metadata Configuration.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := VideoEncoder
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[1] := Metadata
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>

          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.VideoEncoder or Configuration.Metadata:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.VideoEncoder:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[0].Type := VideoEncoder
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.Metadata:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[1].Type := Metadata
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[1].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.9-->
    <section xml:id="Annex_HelperRemoveAudioEncoderConfigAndMetadataConfigFromMediaProfile" xreflabel="Annex A.9">
      <title>Removing Audio Encoder Configuration and Metadata Configuration from Media Profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperRemoveAudioEncoderConfigAndMetadataConfigFromMediaProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper Procedure to guarantee that Media Profile does not contain Audio Encoder Configuration and Metadata Configuration.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := AudioEncoder
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[1] := Metadata
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.AudioEncoder or Configuration.Metadata:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.AudioEncoder:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[0].Type := AudioEncoder
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.Metadata:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[1].Type := Metadata
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[1].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.10-->
    <section xml:id="Annex_HelperStreamingRTPUnicastUDP" xreflabel="Annex A.10">
      <title>Media Streaming over RTP-Unicast/UDP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperStreamingRTPUnicastUDP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify media streaming over RTP-Unicast/UDP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>). Media type (<emphasis role="italic">mediaType</emphasis>). Expected media stream encoding (<emphasis role="italic">encoding</emphasis>).
        Media type2 (<emphasis role="italic">mediaType2</emphasis>) (optional parameter). Expected media stream encoding for Media type2 (<emphasis role="italic">encoding2</emphasis>) (optional parameter).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.A10.3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = <emphasis role="italic">mediaType</emphasis> with rtpmap value corresponding to <emphasis role="italic">encoding</emphasis> and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem xml:id="tc.A10.4">
            <para>
              If <emphasis role="italic">mediaType2</emphasis> is specified and <emphasis role="italic">sdp</emphasis> does not contain Media Type = <emphasis role="italic">mediaType2</emphasis> with rtpmap value corresponding to <emphasis role="italic">encoding2</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>

          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">mediaType2</emphasis> is specified:
              <itemizedlist>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to <emphasis role="italic">mediaType2</emphasis> media type (see [RFC2326] for details), with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Transport := RTP/AVP;unicast;client_port=<emphasis role="italic">port3</emphasis>-<emphasis role="italic">port4</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Transport
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Session =: <emphasis role="italic">session</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send <emphasis role="italic">encoding</emphasis> RTP media stream to ONVIF Client over UDP, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">mediaType2</emphasis> is specified and DUT does not send <emphasis role="italic">encoding2</emphasis> RTP media stream to ONVIF Client over UDP, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A10.3"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding2</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A10.4"/>.
      </para>
    </section>
    <!--A.11-->
    <section xml:id="Annex_HelperStreamingRTPUnicastRTSPHTTPTCP" xreflabel="Annex A.11">
      <title>Media Streaming over RTP-Unicast/RTSP/HTTP/TCP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperStreamingRTPUnicastRTSPHTTPTCP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify media streaming over RTP-Unicast/RTSP/HTTP/TCP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>). Media type (<emphasis role="italic">mediaType</emphasis>). Expected media stream encoding (<emphasis role="italic">encoding</emphasis>).
        Media type2 (<emphasis role="italic">mediaType2</emphasis>) (optional parameter). Expected media stream encoding for Media type2 (<emphasis role="italic">encoding2</emphasis>) (optional parameter).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTP GET</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish DUT to ONVIF Client connection for RTP data transfer (<emphasis role="italic">connection1</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTP POST</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish ONVIF Client to DUT connection for RTSP control requests (<emphasis role="italic">connection2</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address converted to rtsp address on <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters on <emphasis role="italic">connection1</emphasis>
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.A11.3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = <emphasis role="italic">mediaType</emphasis> with rtpmap value corresponding to <emphasis role="italic">encoding</emphasis> and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem xml:id="tc.A11.4">
            <para>
              If <emphasis role="italic">mediaType2</emphasis> is specified and <emphasis role="italic">sdp</emphasis> does not contain Media Type = <emphasis role="italic">mediaType2</emphasis> with rtpmap value corresponding to <emphasis role="italic">encoding2</emphasis> and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP/TCP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">mediaType2</emphasis> is specified:
              <itemizedlist>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to <emphasis role="italic">mediaType2</emphasis> media type (see [RFC2326] for details), with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Transport := RTP/AVP/TCP;unicast;client_port=<emphasis role="italic">port3</emphasis>-<emphasis role="italic">port4</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Transport
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Session =: <emphasis role="italic">session</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send <emphasis role="italic">encoding</emphasis> RTP media stream to ONVIF Client over <emphasis role="italic">connection1</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">mediaType2</emphasis> is specified and DUT does not send <emphasis role="italic">encoding2</emphasis> RTP media stream to ONVIF Client over <emphasis role="italic">connection1</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client closes <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">HTTP 200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> and closes <emphasis role="italic">connection1</emphasis>.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis> and <emphasis role="bold">RTSP PLAY</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A11.3"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding2</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A11.4"/>.
      </para>
    </section>
    <!--A.12-->
    <section xml:id="Annex_HelperStreamingRTPRTSPTCP" xreflabel="Annex A.12">
      <title>Media Streaming over RTP/RTSP/TCP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperStreamingRTPRTSPTCP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify media streaming over RTP/RTSP/TCP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>). Media type (<emphasis role="italic">mediaType</emphasis>). Expected media stream encoding (<emphasis role="italic">encoding</emphasis>).
        Media type2 (<emphasis role="italic">mediaType2</emphasis>) (optional parameter). Expected media stream encoding for Media type2 (<emphasis role="italic">encoding2</emphasis>) (optional parameter).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.A12.3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = <emphasis role="italic">mediaType</emphasis> with rtpmap value corresponding to <emphasis role="italic">encoding</emphasis> and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem xml:id="tc.A12.4">
            <para>
              If <emphasis role="italic">mediaType2</emphasis> is specified and <emphasis role="italic">sdp</emphasis> does not contain Media Type = <emphasis role="italic">mediaType2</emphasis> with rtpmap value corresponding to <emphasis role="italic">encoding2</emphasis> and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP/TCP;unicast;interleaved=0-1
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">mediaType2</emphasis> is specified:
              <itemizedlist>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to <emphasis role="italic">mediaType2</emphasis> media type (see [RFC2326] for details), with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Transport := RTP/AVP/TCP;unicast;interleaved=0-1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Transport
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Session =: <emphasis role="italic">session</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send <emphasis role="italic">encoding</emphasis> RTP media stream to ONVIF Client over RTSP control connection, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">mediaType2</emphasis> is specified and DUT does not send <emphasis role="italic">encoding2</emphasis> RTP media stream to ONVIF Client over RTSP control connection, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A12.3"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding2</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A12.4"/>.
      </para>
    </section>
    <!--A.13-->
    <section xml:id="Annex_HelperStreamingRTPMulticast" xreflabel="Annex A.13">
      <title>Media Streaming over RTP-Multicast</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperStreamingRTPMulticast
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify media streaming over RTP-Multicast.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>). Media type (<emphasis role="italic">mediaType</emphasis>). Expected media stream encoding (<emphasis role="italic">encoding</emphasis>).
        Media type2 (<emphasis role="italic">mediaType2</emphasis>) (optional parameter). Expected media stream encoding for Media type2 (<emphasis role="italic">encoding2</emphasis>) (optional parameter).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.A13.3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = <emphasis role="italic">mediaType</emphasis> with rtpmap value corresponding to <emphasis role="italic">encoding</emphasis> and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem xml:id="tc.A13.4">
            <para>
              If <emphasis role="italic">mediaType2</emphasis> is specified and <emphasis role="italic">sdp</emphasis> does not contain Media Type = <emphasis role="italic">mediaType2</emphasis> with rtpmap value corresponding to <emphasis role="italic">encoding2</emphasis> and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP;multicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">mediaType2</emphasis> is specified:
              <itemizedlist>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to <emphasis role="italic">mediaType2</emphasis> media type (see [RFC2326] for details), with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Transport := RTP/AVP;multicast;client_port=<emphasis role="italic">port3</emphasis>-<emphasis role="italic">port4</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Transport
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Session =: <emphasis role="italic">session</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send <emphasis role="italic">encoding</emphasis> RTP <emphasis role="italic">ipVersion</emphasis> multicast media stream to ONVIF Client over UDP, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">mediaType2</emphasis> is specified and DUT does not send <emphasis role="italic">encoding2</emphasis> RTP <emphasis role="italic">ipVersion</emphasis> multicast media stream to ONVIF Client over UDP, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A13.3"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding2</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A13.4"/>.
      </para>
    </section>
    <!--A.14-->
    <section xml:id="Annex_HelperStreamingRTPUnicastRTSPHTTPSTCP" xreflabel="Annex A.14">
      <title>Media Streaming over RTP-Unicast/RTSP/HTTPS/TCP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperStreamingRTPUnicastRTSPHTTPSTCP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify media streaming over RTP-Unicast/RTSP/HTTPS/TCP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>). Media type (<emphasis role="italic">mediaType</emphasis>). Expected media stream encoding (<emphasis role="italic">encoding</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTPS GET</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish DUT to ONVIF Client secured connection for RTP data transfer (<emphasis role="italic">connection1</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTPS POST</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish ONVIF Client to DUT secured connection for RTSP control requests (<emphasis role="italic">connection2</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address converted to rtsp address on <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters on <emphasis role="italic">connection1</emphasis>
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.A14.3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = <emphasis role="italic">mediaType</emphasis> with rtpmap value corresponding to <emphasis role="italic">encoding</emphasis> and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP/TCP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send <emphasis role="italic">encoding</emphasis> RTP media stream to ONVIF Client over <emphasis role="italic">connection1</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client closes <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">HTTP 200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> and closes <emphasis role="italic">connection1</emphasis>.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis> and <emphasis role="bold">RTSP PLAY</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>

      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A14.3"/>.
      </para>
    </section>
    <!--A.15-->
    <section xml:id="Annex_HelperConfigureHTTPS" xreflabel="Annex A.15">
      <title>Configuring HTTPS using Security Configuration Service</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperConfigureHTTPS
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper Procedure to configure HTTPS using Security Configuration Service.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Security Configuration Service is received from the DUT. TLS Server is supported by the DUT.
        The DUT shall have enough free storage capacity for one additional RSA key pair.
        The DUT shall have enough free storage capacity for one additional certificate.
        The DUT shall have enough free storage capacity for one additional certification path.
        The DUT shall have enough free storage capacity for one additional server certificate assignment.
        Current time of the DUT shall be at least Jan 01, 1970.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAssignedServerCertificates</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with a <emphasis role="bold">GetAssignedServerCertificatesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertificationPathID list =: <emphasis role="italic">initialCertificationPathList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If number of items in <emphasis role="italic">initialCertificationPathList</emphasis> >= 1, go to the step <xref linkend="Annex_HelperConfigureHTTPS.3"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              If Create self-signed certificate is supported by the DUT:
              <orderedlist  numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client adds server certification assignment and creates related certification path, the self-signed certificate and the RSA key pair by following the procedure mentioned in <xref linkend="Annex_HelperAddServerCertAssign_SSCertificate"/>.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Go to the step <xref linkend="Annex_HelperConfigureHTTPS.3"/>.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client creates a certification path based on CA-signed certificate and related RSA key pair and a corresponding CA certificate and related RSA key pair by following the procedure mentioned in <xref linkend="Annex_HelperAddServerCertAssign_CACertificate"/>.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperConfigureHTTPS.3">
            <para>
              ONVIF Client invokes <emphasis role="bold">SetNetworkProtocols</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    NetworkProtocols[0].Name := HTTPS
                  </para>
                </listitem>
                <listitem>
                  <para>
                    NetworkProtocols[0].Enabled := true
                  </para>
                </listitem>
                <listitem>
                  <para>
                    NetworkProtocols[0].Port := 443
                  </para>
                </listitem>
                <listitem>
                  <para>
                    NetworkProtocols[0].Extension skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">SetNetworkProtocolsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client waits until <emphasis role="italic">operationDelay</emphasis> timeout expires.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks that HTTPS protocol Port 443 is open. If HTTPS protocol port 443 is not open, FAIL the test and skip other steps.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetNetworkProtocolsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.16-->
    <section xml:id="Annex_HelperAddServerCertAssign_SSCertificate" xreflabel="Annex A.16">
      <title>Add server certificate assignment with corresponding certification path, self-signed certificate and RSA key pair</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperAddServerCertAssign_SSCertificate
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper Procedure to configure HTTPS using Security Configuration Service.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Security Configuration Service is received from the DUT. TLS Server is supported by the DUT.
        Create self-signed certificate is supported by the DUT. RSA key pair generation is supported by the DUT.
        The DUT shall have enough free storage capacity for one additional RSA key pair.
        The DUT shall have enough free storage capacity for one additional certificate.
        The DUT shall have enough free storage capacity for one additional certification path.
        The DUT shall have enough free storage capacity for one additional server certificate assignment.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The identifiers of the new certification path (<emphasis role="italic">certPathID</emphasis>), certificate (<emphasis role="italic">certID</emphasis>) and RSA key pair (<emphasis role="italic">keyID</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client creates an RSA key pair by following the procedure mentioned in <xref linkend="Annex_HelperCreateRSAKeyPair"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">keyID</emphasis> - RSA key pair
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreateSelfSignedCertificate</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    X509Version skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    KeyID := <emphasis role="italic">keyID</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Subject := subject (see <xref linkend="Annex_HelperSubjectForServerCertificate"/>)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Alias skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    notValidBefore skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    notValidAfter skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SignatureAlgorithm.algorithm := 1.2.840.113549.1.1.5 (OID of SHA-1 with RSA Encryption algorithm)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SignatureAlgorithm.parameters skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SignatureAlgorithm.anyParameters skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Extension skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with a <emphasis role="bold">CreateSelfSignedCertificateResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertificateID =: <emphasis role="italic">certID</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreateCertificationPath</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertficateIDs.CertificateID[0] := <emphasis role="italic">certID</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Alias := "ONVIF_Test"
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with a <emphasis role="bold">CreateCertificationPathResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertificationPathID =: <emphasis role="italic">certPathID</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">AddServerCertificateAssignment</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertificationPathID := <emphasis role="italic">certPathID</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with an <emphasis role="bold">AddServerCertificateAssignmentResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client waits for time <emphasis role="italic">operationDelay</emphasis>.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreateSelfSignedCertificateResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreateCertificationPathResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddServerCertificateAssignmentResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.17-->
    <section xml:id="Annex_HelperAddServerCertAssign_CACertificate" xreflabel="Annex A.17">
      <title>Add server certificate assignment with corresponding certification path, CA certificate and RSA key pair</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperAddServerCertAssign_CACertificate
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper Procedure to configure HTTPS using Security Configuration Service.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Security Configuration Service is received from the DUT. TLS Server is supported by the DUT.
        Create PCKS#10 supported by the DUT. RSA key pair generation is supported by the DUT.
        The DUT shall have enough free storage capacity for one additional RSA key pair.
        The DUT shall have enough free storage capacity for one additional certificate.
        The DUT shall have enough free storage capacity for one additional certification path.
        The DUT shall have enough free storage capacity for one additional server certificate assignment.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The identifiers of the new certification path (<emphasis role="italic">certPathID</emphasis>), certificate (<emphasis role="italic">certID</emphasis>) and RSA key pair (<emphasis role="italic">keyID</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client creates an RSA key pair by following the procedure mentioned in <xref linkend="Annex_HelperCreateRSAKeyPair"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">keyID</emphasis> - RSA key pair
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreatePKCS10CSR</emphasis> with parameter
              <itemizedlist>
                <listitem>
                  <para>
                    Subject := subject (see <xref linkend="Annex_HelperSubjectForServerCertificate"/>)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    KeyID := <emphasis role="italic">keyID</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    CSRAttribute skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SignatureAlgorithm.algorithm := 1.2.840.113549.1.1.5 (OID of SHA-1 with RSA Encryption algorithm)
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreatePKCS10CSRResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    PKCS10CSR =: <emphasis role="italic">pkcs10</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client creates an CA certificate by following the procedure mentioned in <xref linkend="Annex_HelperCreateCACertificate"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">CAcert</emphasis> - CA certificate
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">privateKey</emphasis> - private key for the CA certificate
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">publicKey</emphasis> - public key for the CA certificate
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Create an [RFC5280] compliant X.509 certificate (<emphasis role="italic">cert</emphasis>) from the PKCS#10 request (<emphasis role="italic">pkcs10</emphasis>) with the following properties:
              <itemizedlist>
                <listitem>
                  <para>
                    version:= v3
                  </para>
                </listitem>
                <listitem>
                  <para>
                    signature := sha1-WithRSAEncryption
                  </para>
                </listitem>
                <listitem>
                  <para>
                    subject := subject from the PKCS#10 request (<emphasis role="italic">pkcs10</emphasis>)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    subject public key := subject public key in the PKCS#10 request (<emphasis role="italic">pkcs10</emphasis>)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    validity := not before 19700101000000Z and not after 99991231235959Z
                  </para>
                </listitem>
                <listitem>
                  <para>
                    certificate signature is generated with the private key (<emphasis role="italic">privateKey</emphasis>) in the CA certificate (<emphasis role="italic">CAcert</emphasis>)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    certificate extensions := the X.509v3 extensions from the PKCS#10 request (<emphasis role="italic">pkcs10</emphasis>)
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">UploadCertificate</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Certificate := <emphasis role="italic">cert</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Alias := "ONVIF_Test1"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    PrivateKeyRequired := true
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with a <emphasis role="bold">UploadCertificateResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertificateID =: <emphasis role="italic">certID</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    KeyID =: <emphasis role="italic">keyID</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreateCertificationPath</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertficateIDs.CertificateID[0] := <emphasis role="italic">certID</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Alias := "ONVIF_Test2"
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with a <emphasis role="bold">CreateCertificationPathResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertificationPathID =: <emphasis role="italic">certPathID</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">AddServerCertificateAssignment</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertificationPathID := <emphasis role="italic">certPathID</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with an <emphasis role="bold">AddServerCertificateAssignmentResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client waits for time <emphasis role="italic">operationDelay</emphasis>.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreatePKCS10CSRResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">UploadCertificateResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreateCertificationPathResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddServerCertificateAssignmentResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.18-->
    <section xml:id="Annex_HelperCreateRSAKeyPair" xreflabel="Annex A.18">
      <title>Create an RSA key pair</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreateRSAKeyPair
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create an RSA key pair.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Security Configuration Service is received from the DUT. RSA key pair generation is supported by the DUT.
        The DUT shall have enough free storage capacity for one additional RSA key pair.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The identifier of the new and RSA key pair (<emphasis role="italic">keyID</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis> request.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Capabilities =: <emphasis role="italic">cap</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">keyLength</emphasis> := the smallest supported key length at <emphasis role="italic">cap</emphasis>.RSAKeyLengths.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreateRSAKeyPair</emphasis> with parameter
              <itemizedlist>
                <listitem>
                  <para>
                    KeyLength := <emphasis role="italic">length</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreateRSAKeyPairResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    KeyID =: <emphasis role="italic">keyID</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    EstimatedCreationTime =: <emphasis role="italic">duration</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperCreateRSAKeyPair.6">
            <para>
              Until <emphasis role="italic">duration</emphasis> + <emphasis role="italic">operationDelay</emphasis> expires repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for 5 seconds.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetKeyStatus</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          KeyID := <emphasis role="italic">keyID</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetKeyStatusResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          KeyStatus =: <emphasis role="italic">keyStatus</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">keyStatus</emphasis> is equal to "ok", skip other steps of the procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">keyStatus</emphasis> is equal to "corrupt", FAIL the test and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">duration</emphasis> + <emphasis role="italic">operationDelay</emphasis> expires for step <xref linkend="Annex_HelperCreateRSAKeyPair.6"/> and the last <emphasis role="italic">keyStatus</emphasis> is other than "ok", FAIL the test and skip other steps.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetKeyStatusResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreateRSAKeyPairResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.19-->
    <section xml:id="Annex_HelperSubjectForServerCertificate" xreflabel="Annex A.19">
      <title>Subject for a server certificate</title>
      <para>
        Use the following subject for test cases:
        <itemizedlist>
          <listitem>
            <para>
              Subject.Country := "US"
            </para>
          </listitem>
          <listitem>
            <para>
              Subject.CommonName := DUT IP-address
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.20-->
    <section xml:id="Annex_HelperConfigureMediaProfileForBackchannelStreaming" xreflabel="Annex A.20">
      <title>Media2 Service – Media Profile Configuration for Audio Backchannel Streaming</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperConfigureMediaProfileForBackchannelStreaming
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media Profile to contain Audio Output Configuration and Audio Decoder Configuration which supports a required audio decoding and send primacy with not only www.onvif.org/ver20/HalfDuplex/Server value and retrieves stream uri.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Audio Backchannel is supported by DUT. Real-time streaming is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Required audio decoding (<emphasis role="italic">requiredAudioDecoding</emphasis>). Transport protocol (<emphasis role="italic">transportProtocol</emphasis>). IP type <emphasis role="italic">ipType</emphasis>.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>) containing Audio Output Configuration and Audio Decoder Configuration with the required audio decoding. Uri for media streaming (<emphasis role="italic">streamUri</emphasis>). Audio decoding set in profile (<emphasis role="italic">requiredAudioDecoding</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := AudioOutput
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[1] := AudioDecoder
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.Annex_HelperConfigureMediaProfileForBackchannelStreaming.3">
            <para>
              For each Media Profile <emphasis role="italic">profile1</emphasis> in <emphasis role="italic">profileList</emphasis> with both Configuration.AudioOutput and Configuration.AudioDecoder repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurationOptions</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken := <emphasis role="italic">profile1</emphasis>.Configuration.AudioOutput.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    DUT responds with <emphasis role="bold">GetAudioOutputConfigurationOptionsResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Options =: <emphasis role="italic">aocOptions</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">aocOptions</emphasis>.SendPrimacyOptions list is not skipped and contains only one item which is equal to www.onvif.org/ver20/HalfDuplex/Server go to the next item at step <xref linkend="tc.Annex_HelperConfigureMediaProfileForBackchannelStreaming.3"/>.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set <emphasis role="italic">audioOutputConfiguration</emphasis> := <emphasis role="italic">profile1</emphasis>.Configuration.AudioOutput.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurationOptions</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken := <emphasis role="italic">profile1</emphasis>.Configuration.AudioDecoder.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationOptionsResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Options list =: <emphasis role="italic">adcOptionsList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">requiredAudioDecoding</emphasis> = AAC:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          If <emphasis role="italic">adcOptionsList</emphasis> list contains item with Encoding = "MP4A-LATM" or "MPEG4-GENERIC":
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="3.5em"?>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profile1</emphasis>.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">requiredAudioDecoding</emphasis> := "MP4A-LATM" if <emphasis role="italic">adcOptionsList</emphasis> contains item with Encoding = "MP4A-LATM", otherwise "MPEG4-GENERIC".
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Go to step <xref linkend="tc.Annex_HelperConfigureMediaProfileForBackchannelStreaming.6"/>.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">requiredAudioDecoding</emphasis> != AAC:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          If <emphasis role="italic">adcOptionsList</emphasis> list contains item with Encoding = <emphasis role="italic">requiredAudioDecoding</emphasis>:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="3.5em"?>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profile1</emphasis>.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Go to step <xref linkend="tc.Annex_HelperConfigureMediaProfileForBackchannelStreaming.6"/>.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each Media Profile <emphasis role="italic">profile1</emphasis> in <emphasis role="italic">profileList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurations</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configurations list =: <emphasis role="italic">audioOutputConfList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem xml:id="tc.Annex_HelperConfigureMediaProfileForBackchannelStreaming.4.3" xreflabel="4.3">
                  <para>
                    For each Audio Output Configuration <emphasis role="italic">audioOutputConfiguration1</emphasis> in <emphasis role="italic">audioOutputConfList</emphasis> repeat the following steps:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurationOptions</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ConfigurationToken := <emphasis role="italic">audioOutputConfiguration1</emphasis>.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          DUT responds with <emphasis role="bold">GetAudioOutputConfigurationOptionsResponse</emphasis> message with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Options =: <emphasis role="italic">aocOptions</emphasis>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">aocOptions</emphasis>.SendPrimacyOptions list is not skipped and contains only one item which is equal to www.onvif.org/ver20/HalfDuplex/Server go to the next item at step <xref linkend="tc.Annex_HelperConfigureMediaProfileForBackchannelStreaming.4.3"/>.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">audioOutputConfiguration</emphasis> := <emphasis role="italic">audioOutputConfiguration1</emphasis>.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Name skipped
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Type := AudioOutput
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Token := <emphasis role="italic">audioOutputConfiguration1</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurations</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ConfigurationToken skipped
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          The DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configurations list =: <emphasis role="italic">audioDecoderConfList</emphasis>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          For each Audio Decoder Configuration <emphasis role="italic">audioDecoderConfiguration1</emphasis> in <emphasis role="italic">audioDecoderConfList</emphasis> repeat the following steps:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurationOptions</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      ConfigurationToken := <emphasis role="italic">audioDecoderConfiguration1</emphasis>.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationOptionsResponse</emphasis> message with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      Options list =: <emphasis role="italic">adcOptionsList</emphasis>
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                If <emphasis role="italic">requiredAudioDecoding</emphasis> = AAC:
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      If <emphasis role="italic">adcOptionsList</emphasis> list contains item with Encoding = "MP4A-LATM" or "MPEG4-GENERIC":
                                      <orderedlist numeration="arabic" inheritnum="inherit">
                                        <?dbfo label-width="5.5em"?>
                                        <listitem>
                                          <para>
                                            ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                                            <itemizedlist>
                                              <listitem>
                                                <para>
                                                  ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                                                </para>
                                              </listitem>
                                              <listitem>
                                                <para>
                                                  Name skipped
                                                </para>
                                              </listitem>
                                              <listitem>
                                                <para>
                                                  Configuration[0].Type := AudioDecoder
                                                </para>
                                              </listitem>
                                              <listitem>
                                                <para>
                                                  Configuration[0].Token := <emphasis role="italic">audioDecoderConfiguration1</emphasis>.@token
                                                </para>
                                              </listitem>
                                            </itemizedlist>
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profile1</emphasis>.
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Set <emphasis role="italic">requiredAudioDecoding</emphasis> := "MP4A-LATM" if <emphasis role="italic">adcOptionsList</emphasis> contains item with Encoding = "MP4A-LATM", otherwise "MPEG4-GENERIC".
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Go to step <xref linkend="tc.Annex_HelperConfigureMediaProfileForBackchannelStreaming.6"/>.
                                          </para>
                                        </listitem>
                                      </orderedlist>
                                    </para>
                                  </listitem>
                                </orderedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                If <emphasis role="italic">requiredAudioDecoding</emphasis> = !AAC:
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      If <emphasis role="italic">adcOptionsList</emphasis> list contains item with Encoding = <emphasis role="italic">requiredAudioDecoding</emphasis>:
                                      <orderedlist numeration="arabic" inheritnum="inherit">
                                        <?dbfo label-width="5.5em"?>
                                        <listitem>
                                          <para>
                                            ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                                            <itemizedlist>
                                              <listitem>
                                                <para>
                                                  ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                                                </para>
                                              </listitem>
                                              <listitem>
                                                <para>
                                                  Name skipped
                                                </para>
                                              </listitem>
                                              <listitem>
                                                <para>
                                                  Configuration[0].Type := AudioDecoder
                                                </para>
                                              </listitem>
                                              <listitem>
                                                <para>
                                                  Configuration[0].Token := <emphasis role="italic">audioDecoderConfiguration1</emphasis>.@token
                                                </para>
                                              </listitem>
                                            </itemizedlist>
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profile1</emphasis>.
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Go to step <xref linkend="tc.Annex_HelperConfigureMediaProfileForBackchannelStreaming.6"/>.
                                          </para>
                                        </listitem>
                                      </orderedlist>
                                    </para>
                                  </listitem>
                                </orderedlist>
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem xml:id="tc.Annex_HelperConfigureMediaProfileForBackchannelStreaming.6">
            <para>
              If <emphasis role="italic">audioOutputConfiguration</emphasis>.SendPrimacy = www.onvif.org/ver20/HalfDuplex/Server:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem >
                  <para>
                    ONVIF Client invokes <emphasis role="bold">SetAudioOutputConfiguration</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.@token := <emphasis role="italic">audioOutputConfiguration</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Name := <emphasis role="italic">audioOutputConfiguration</emphasis>.Name
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.UseCount := <emphasis role="italic">audioOutputConfiguration</emphasis>.UseCount
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.OutputToken := <emphasis role="italic">audioOutputConfiguration</emphasis>.OutputToken
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.SendPrimacy := the highest value from aocOptions.SendPrimacyOptions list according to the following order - www.onvif.org/ver20/HalfDuplex/Client, www.onvif.org/ver20/HalfDuplex/Auto
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.OutputLevel := <emphasis role="italic">audioOutputConfiguration</emphasis>.OutputLevel
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    DUT responds with <emphasis role="bold">SetAudioOutputConfigurationResponse</emphasis> message.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client retrieves a stream uri for Media Profile for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperGetStreamUri"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">transportProtocol</emphasis> - Transport protocol
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">ipType</emphasis> - IP Type
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">profile</emphasis>.@token - Media profile token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">streamUri</emphasis> - Stream URI
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioOutputConfigurationOptionsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioDecoderConfigurationOptionsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetAudioOutputConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.21-->
    <section xml:id="Annex_HelperBackchannelStreamingRTPUnicastUDP" xreflabel="Annex A.21">
      <title>Audio Backchannel streaming over RTP-Unicast/UDP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperBackchannelStreamingRTPUnicastUDP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify audio backchannel streaming over RTP-Unicast/UDP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Audio Backchannel is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for audio backchannel streaming (<emphasis role="italic">streamUri</emphasis>). Expected audio stream encoding (<emphasis role="italic">encoding</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to <emphasis role="italic">streamUri</emphasis> address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.A21.3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = audio and with a=sendonly and with rtpmap value corresponding to <emphasis role="italic">encoding</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to audio backchannel media type (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client sends RTP Unicast audio stream with <emphasis role="italic">encoding</emphasis> to DUT over UDP.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A21.3"/>.
      </para>
    </section>
    <!--A.22-->
    <!--<section xml:id="Annex_HelperBackchannelStreamingRTPUnicastRTSPHTTPTCP" xreflabel="Annex A.22" status="Depricated">
      <title>Audio Backchannel over RTP-Unicast/RTSP/HTTP/TCP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperBackchannelStreamingRTPUnicastRTSPHTTPTCP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify audio backchannel streaming over RTP-Unicast/RTSP/HTTP/TCP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Audio Backchannel is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>). Expected audio stream encoding (<emphasis role="italic">encoding</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTP GET</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish DUT to ONVIF Client connection for RTP data transfer (<emphasis role="italic">connection1</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTP POST</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish ONVIF Client to DUT connection for RTSP control requests (<emphasis role="italic">connection2</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to <emphasis role="italic">streamUri</emphasis> address converted to rtsp address on <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters on <emphasis role="italic">connection1</emphasis>
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.A22.3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = audio and with a=sendonly and with rtpmap value corresponding to <emphasis role="italic">encoding</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP/TCP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client sends audio stream with <emphasis role="italic">encoding</emphasis> to DUT over <emphasis role="italic">connection1</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client closes <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">HTTP 200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> and closes <emphasis role="italic">connection1</emphasis>.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis> and <emphasis role="bold">RTSP PLAY</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A22.3"/>.
      </para>
    </section>-->
    <!--A.23-->
    <section xml:id="Annex_HelperBackchannelStreamingRTPRTSPTCP" xreflabel="Annex A.22">
      <title>Audio Backchannel Streaming over RTP/RTSP/TCP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperBackchannelStreamingRTPRTSPTCP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify audio backchannel streaming over RTP/RTSP/TCP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Audio Backchannel is supported by DUT. RTP/RTSP/TCP is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>). Expected media stream encoding (<emphasis role="italic">encoding</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to <emphasis role="italic">streamUri</emphasis> address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.A23.3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = audio and with a=sendonly and with rtpmap value corresponding to <emphasis role="italic">encoding</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP/TCP;unicast;interleaved=0-1
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client sends RTP Unicast audio stream with <emphasis role="italic">encoding</emphasis> to DUT over RTSP control connection.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A23.3"/>.
      </para>
    </section>
    <!--A.24-->
    <section xml:id="Annex_HelperBackchannelStreamingRTPMulticast" xreflabel="Annex A.23">
      <title>Audio Backchannel Streaming over RTP-Multicast</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperBackchannelStreamingRTPMulticast
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify audio backchannel streaming over RTP-Multicast.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Audio Backchannel is supported by DUT. RTP-Multicast is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>). Expected media stream encoding (<emphasis role="italic">encoding</emphasis>). IP version (<emphasis role="italic">ipVersion</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to <emphasis role="italic">streamUri</emphasis> address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.A24.3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = audio and with a=sendonly and with rtpmap value corresponding to <emphasis role="italic">encoding</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP;multicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client sends RTP <emphasis role="italic">ipVersion</emphasis> Multicast audio stream with <emphasis role="italic">encoding</emphasis> to DUT over UDP.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A24.3"/>.
      </para>
    </section>
    <!--A.25-->
    <section xml:id="Annex_HelperRemoveAudioEncoderConfigAndMetadataConfigAndVideoConfigFromMediaProfile" xreflabel="Annex A.24">
      <title>Removing Video Encoder Configuration, Audio Encoder Configuration and Metadata Configuration from Media Profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperRemoveAudioEncoderConfigAndMetadataConfigAndVideoConfigFromMediaProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper Procedure to guarantee that Media Profile does not contain Video Encoder Configuration, Audio Encoder Configuration and Metadata Configuration.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := AudioEncoder
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[1] := Metadata
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[2] := VideoEncoder
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.VideoEncoder or Configuration.AudioEncoder or Configuration.Metadata:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.AudioEncoder:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[0].Type := AudioEncoder
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.Metadata:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[1].Type := Metadata
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[1].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.VideoEncoder:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[2].Type := VideoEncoder
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[2].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.26-->
    <section xml:id="Annex_HelperGetServiceCapabilities" xreflabel="Annex A.25">
      <title>Get Media2 Service Capabilities</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetServiceCapabilities
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get Media2 Service Capabilities from the DUT.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The service capabilities (<emphasis role="italic">cap</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis> request.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Capabilities =: <emphasis role="italic">cap</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>


        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.27-->
    <section xml:id="Annex_HelperWebSocketHandshake" xreflabel="Annex A.26">
      <title>Web Socket Handshake</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperWebSocketHandshake
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to establish a WebSocket Connection.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> WebSocket is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Web Socket Uri (<emphasis role="italic">uri</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client generates a Sec-WebSocket-Key value by following the procedure mentioned in <xref linkend="Annex_HelperGenerateSecWebSocketKey"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">webSocketKey</emphasis> - Sec-WebSocket-Key value.
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If scheme component of <emphasis role="italic">uri</emphasis> is equal to <emphasis role="bold">ws</emphasis>:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">HTTP GET</emphasis> request to <emphasis role="italic">uri</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Upgrade =: "websocket"
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Connection =: "Upgrade"
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Sec-WebSocket-Key =: <emphasis role="italic">webSocketKey</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Sec-WebSocket-Protocol =: "rtsp.onvif.org"
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Sec-WebSocket-Version =: "13"
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">HTTP 101 Switching Protocols</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Upgrade =: <emphasis role="italic">upgrade</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Connection =: <emphasis role="italic">connection</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Sec-WebSocket-Accept =: <emphasis role="italic">accept</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Sec-WebSocket-Protocol  =: <emphasis role="italic">protocol</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If scheme component of <emphasis role="italic">uri</emphasis> is equal to <emphasis role="bold">wss</emphasis>:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If the DUT does not support TLS Server, FAIL the test and skip other steps.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetNetworkProtocols</emphasis> request.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetNetworkProtocolsResponse</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          NetworkProtocols list =: <emphasis role="italic">networkProtocolsList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">networkProtocolsList</emphasis> contains item with Name = HTTPS and Enabled = true, go to step <xref linkend="Annex_HelperWebSocketHandshake.3.6"/>.
                  </para>
                </listitem>

                <listitem>
                  <para>
                    ONVIF Client configures HTTPS by following the procedure mentioned in <xref linkend="Annex_HelperConfigureHTTPS"/>.
                  </para>
                </listitem>
                <listitem  xml:id="Annex_HelperWebSocketHandshake.3.6" xreflabel="3.6">
                  <para>
                    ONVIF Client performs a TLS handshake by following the procedure mentioned in <xref linkend="Annex_HelperBasicTLSHandshake"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">HTTPS GET</emphasis> request to <emphasis role="italic">uri</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Upgrade =: "websocket"
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Connection =: "Upgrade"
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Sec-WebSocket-Key =: <emphasis role="italic">webSocketKey</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Sec-WebSocket-Protocol =: "rtsp.onvif.org"
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Sec-WebSocket-Version =: "13"
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">HTTPS 101 Switching Protocols</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Upgrade =: <emphasis role="italic">upgrade</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Connection =: <emphasis role="italic">connection</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Sec-WebSocket-Accept =: <emphasis role="italic">accept</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Sec-WebSocket-Protocol  =: <emphasis role="italic">protocol</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">upgrade</emphasis> is not equal to "websocket", FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">connection</emphasis> is not equal to "Upgrade", FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">accept</emphasis> other than the base64-encoded SHA-1 of the concatenation of the <emphasis role="italic">webSocketKey</emphasis> (see RFC[6455] 4.1. Client Requirements),
              FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">protocol</emphasis> is not equal to "rtsp.onvif.org", FAIL the test and skip other steps.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">HTTP 101</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetNetworkProtocolsResponse</emphasis>.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.28-->
    <section xml:id="Annex_HelperGenerateSecWebSocketKey" xreflabel="Annex A.27">
      <title>Sec-WebSocket-Key value generation</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGenerateSecWebSocketKey
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to generate a Sec-WebSocket-Key value that is compliant to [RFC6455] and [RFC4648].
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Sec-WebSocket-Key value (<emphasis role="italic">webSocketKey</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client generates a  nonce consisting of a randomly selected 16-byte Sec-WebSocket-Key value that has
              been base64-encoded (see Section 4 of [RFC4648] and section 4.1 of [RFC6455]).
            </para>
          </listitem>

        </orderedlist>
      </para>



    </section>
    <!--A.29-->
    <section xml:id="Annex_HelperBasicTLSHandshake" xreflabel="Annex A.28">
      <title>Basic TLS handshake</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperBasicTLSHandshake
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to execute basic TLS handshake.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> TLS is supported  by the DUT as  indicated  by  the TLSServerSupported capability.
        TLS is configured. HTTPS protocol is enabled.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">ClientHello</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ClientVersion := 3,1
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Random number := <emphasis role="italic">ClientRandom[32]</emphasis>, that is 4-byte number that consists of the client’s date and time plus a 28-byte randomly generated number
                  </para>
                </listitem>
                <listitem>
                  <para>
                    CipherSuites := list of common CipherSuites used by TLS 1.0, SSL 2.0 and 3.0
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Compression methods list := NONE
                  </para>
                </listitem>

                <listitem>
                  <para>
                    SessionID skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Extension: server_name  := Server Name List
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT TLS server responds with a  <emphasis role="bold">ServerHello</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Version =: the highest version number supported by both sides
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Random number =: <emphasis role="italic">ServerRandom[32]</emphasis>, that is 4-byte number that consists of the client’s date and time plus a 28-byte randomly generated number
                  </para>
                </listitem>
                <listitem>
                  <para>
                    CipherSuite =: the strongest cipher that both the client and server support
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Compression method =: NONE
                  </para>
                </listitem>


                <listitem>
                  <para>
                    Session ID =: <emphasis role="italic">SessionID</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT TLS server responds with <emphasis role="bold">Certificate</emphasis> message with parameters
              <itemizedlist>

                <listitem>
                  <para>
                    Certificate.CertificateID =:  <emphasis role="italic">CertificateID</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Certificate.KeyID =: <emphasis role="italic">KeyID</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT TLS server responds with a <emphasis role="bold">ServerHelloDone</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">ClientKeyExchange</emphasis> message with parameters
              <itemizedlist>

                <listitem>
                  <para>
                    Premaster Secret := <emphasis role="italic">PreMasterSecret</emphasis> encrypted with <emphasis role="italic">KeyID</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client computes <emphasis role="italic">MasterSecret</emphasis> using ClientRandom[32], ServerRandom[32] and PreMasterSecret.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT TLS server computes <emphasis role="italic">MasterSecret</emphasis> using <emphasis role="italic">ClientRandom[32]</emphasis>, <emphasis role="italic">ServerRandom[32]</emphasis> and <emphasis role="italic">PreMasterSecret</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">ChangeCipherSpec</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes encrypted <emphasis role="bold">Finished</emphasis> message, containing a hash := <emphasis role="italic">hash1</emphasis> and MAC := <emphasis role="italic">MAC1</emphasis> over the previous handshake messages.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT TLS server decrypts the client's <emphasis role="bold">Finished</emphasis> message and verify the hash and MAC.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT TLS server responds its encrypted <emphasis role="bold">Finished</emphasis> message, containing a hash =: <emphasis role="italic">hash2</emphasis> and MAC =: <emphasis role="italic">MAC2</emphasis> over the previous handshake messages.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">hash1</emphasis> is not equal to <emphasis role="italic">hash2</emphasis>, FAIL the test.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">MAC1</emphasis> is not equal to <emphasis role="italic">MAС2</emphasis>, FAIL the test.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT TLS server did not send <emphasis role="bold">ServerHello</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT TLS server did not send <emphasis role="bold">Certificate</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT TLS server did not send <emphasis role="bold">ServerHelloDone</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT TLS server did not send <emphasis role="bold">ChangeCipherSpec</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT TLS server did not send <emphasis role="bold">Finished</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT TLS server sends Alert Message.
            </para>
          </listitem>
        </itemizedlist>
      </para>


    </section>
    <!--A.30-->
    <section xml:id="Annex_HelperStreamingOverWebSocket" xreflabel="Annex A.29">
      <title>Media Streaming over WebSocket</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperStreamingOverWebSocket
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify media streaming over WebSocket.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> WebSocket is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>). Media type (<emphasis role="italic">mediaType</emphasis>). Expected media stream encoding (<emphasis role="italic">encoding</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client gets Web Socket Uri by following the procedure mentioned in <xref linkend="Annex_HelperGetWebSocketURI"/> with the following output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">uri</emphasis> - Web Socket Uri
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>



          <listitem>
            <para>
              ONVIF Client establishes a WebSocket Connection by following the procedure mentioned in <xref linkend="Annex_HelperWebSocketHandshake"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">uri</emphasis> - Web Socket Uri
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address over WebSocket.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message over WebSocket with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.A30.3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = <emphasis role="italic">mediaType</emphasis> with rtpmap value corresponding to <emphasis role="italic">encoding</emphasis> and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request over WebSocket to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP/TCP;unicast;interleaved=0-1
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message over WebSocket with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request over WebSocket to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message over WebSocket with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send <emphasis role="italic">encoding</emphasis> RTP media stream to ONVIF Client over RTSP control connection, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request over WebSocket to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message over WebSocket with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response over WebSocket for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A30.3"/>.
      </para>
    </section>
    <!--A.31-->
    <section xml:id="Annex_HelperConfigureMediaProfileForMetadataStreaming" xreflabel="Annex A.30">
      <title>Media2 Service – Media Profile Configuration for Metadata Streaming</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperConfigureMediaProfileForMetadataStreaming
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media Profile to contain Video Source Configuration and Metadata Configuration.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Transport protocol (<emphasis role="italic">transportProtocol</emphasis>), IP type (<emphasis role="italic">ipType</emphasis>) (optional parameter, IPv4 by default).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>) containing Video Source Configuration, Metadata Configuration, PTZ Configuration (if found), and Analytics Configuration (if found).
        Uri for media streaming (<emphasis role="italic">streamUri</emphasis>), Metadata Configuration (<emphasis role="italic">metadataConfiguration</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type := All
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis> with both Configuration.VideoSource and Configuration.Metadata repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetMetadataConfigurationOptions</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken := <emphasis role="italic">profile</emphasis>.Configuration.Metadata.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    DUT responds with <emphasis role="bold">GetMetadataConfigurationOptionsResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Options =: <emphasis role="italic">metadataOptions</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">metadataOptions</emphasis> does not contain Extension element or <emphasis role="italic">metadataOptions</emphasis>.Extension contains CompressionType with value equals to None,
                    go to step <xref linkend="HelperConfigureMediaProfileForMetadataStreaming.6"/>.

                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configurations list =: <emphasis role="italic">videoSourceConfList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    For each Video Source Configuration <emphasis role="italic">videoSourceConfiguration</emphasis> in <emphasis role="italic">videoSourceConfList</emphasis> repeat the following steps:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Name skipped
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Type := VideoSource
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Token := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">GetMetadataConfigurations</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ConfigurationToken skipped
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          The DUT responds with <emphasis role="bold">GetMetadataConfigurationsResponse</emphasis> with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configurations list =: <emphasis role="italic">metadataConfList</emphasis>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          For each Metadata Configuration <emphasis role="italic">metadataConf</emphasis> in <emphasis role="italic">metadataConfList</emphasis> repeat the following steps:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                ONVIF Client invokes <emphasis role="bold">GetMetadataConfigurationOptions</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      ConfigurationToken := <emphasis role="italic">metadataConf</emphasis>.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                DUT responds with <emphasis role="bold">GetMetadataConfigurationOptionsResponse</emphasis> message with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      Options =: <emphasis role="italic">metadataOptions</emphasis>
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                If <emphasis role="italic">metadataOptions</emphasis> does not contain Extension element or <emphasis role="italic">metadataOptions</emphasis>.Extension contains CompressionType with value equals to None:
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                                      <itemizedlist>
                                        <listitem>
                                          <para>
                                            ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Name skipped
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Configuration[0].Type := Metadata
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Configuration[0].Token := <emphasis role="italic">metadataConf</emphasis>.@token
                                          </para>
                                        </listitem>
                                      </itemizedlist>
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Go to step <xref linkend="HelperConfigureMediaProfileForMetadataStreaming.6"/>.
                                    </para>
                                  </listitem>

                                </orderedlist>
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If cycle for step 4 ends without <emphasis role="italic">metadataOptions</emphasis> that does not contain Extension element
              or that contains <emphasis role="italic">metadataOptions</emphasis>.Extension with CompressionType with value equals to None, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem xml:id="HelperConfigureMediaProfileForMetadataStreaming.6">
            <para>
              If the DUT supports  PTZ Service and if <emphasis role="italic">metadataOptions</emphasis>.PTZStatusFilterOptions.PanTiltStatusSupported is equal to true
              or <emphasis role="italic">metadataOptions</emphasis>.PTZStatusFilterOptions.ZoomStatusSupported is equal to true
              or <emphasis role="italic">metadataOptions</emphasis>.PTZStatusFilterOptions.PanTiltPositionSupported is equal to true
              or <emphasis role="italic">metadataOptions</emphasis>.PTZStatusFilterOptions.ZoomPositionSupported is equal to true,
              ONVIF Client adds PTZ Configuration to a Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperAddPTZConfiguration"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">profile</emphasis> - Media Profile
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If The DUT supports Analytics, ONVIF Client adds Analytics Configuration to a Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperAddAnalyticsConfiguration"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">profile</emphasis> - Media Profile
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client sets the following:
              <itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="italic">metadataConfiguration</emphasis>.@token := <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="italic">metadataConfiguration</emphasis>.Name := <emphasis role="italic">profile</emphasis>.Configurations.Metadata.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="italic">metadataConfiguration</emphasis>.UseCount := <emphasis role="italic">profile</emphasis>.Configurations.Metadata.UseCount
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">mcOptions</emphasis>.Extention.CompressionType skipped:
                    <itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">metadataConfiguration</emphasis>.@CompressionType skipped
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">mcOptions</emphasis>.Extention.CompressionType is not skipped:
                    <itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">metadataConfiguration</emphasis>.@CompressionType := None
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">mcOptions</emphasis>.PTZStatusFilterOptions.PanTiltStatusSupported is equal to false and <emphasis role="italic">mcOptions</emphasis>.PTZStatusFilterOptions.ZoomStatusSupported is equal to false and <emphasis role="italic">mcOptions</emphasis>.PTZStatusFilterOptions.PanTiltPositionSupported is equal to false and <emphasis role="italic">mcOptions</emphasis>.PTZStatusFilterOptions.ZoomPositionSupported is equal to false:
                    <itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus skipped
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If at least on element value within <emphasis role="italic">mcOptions</emphasis>.PTZStatusFilterOptions is equal to true:
                    <itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Status := true if <emphasis role="italic">mcOptions</emphasis>.PTZStatusFilterOptions.PanTiltStatusSupported or <emphasis role="italic">mcOptions</emphasis>.PTZStatusFilterOptions.ZoomStatusSupported is equal to true.
                          Otherwice <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Status := false
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Position := true if <emphasis role="italic">mcOptions</emphasis>.PTZStatusFilterOptions.PanTiltPositionSupported or <emphasis role="italic">mcOptions</emphasis>.PTZStatusFilterOptions.ZoomPositionSupported is equal to true.
                          Otherwice <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Position := false
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="italic">metadataConfiguration</emphasis>.Events
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="italic">metadataConfiguration</emphasis>.Events.Filter skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="italic">metadataConfiguration</emphasis>.Events.SubscriptionPolicy skipped
                  </para>
                </listitem>

                <listitem>
                  <para>
                    If <emphasis role="italic">profile</emphasis>.Configurations contains Analytics:
                    <itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">metadataConfiguration</emphasis>.Analytics := true
                        </para>
                      </listitem>

                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">profile</emphasis>.Configurations does not contain Analytics:
                    <itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">metadataConfiguration</emphasis>.Analytics skipped
                        </para>
                      </listitem>

                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">transportProtocol</emphasis> is not equal to RtspMulticast:
                    <itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">metadataConfiguration</emphasis>.Multicast := <emphasis role="italic">profile</emphasis>.Configurations.Metadata.Multicast
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">transportProtocol</emphasis> is equal to RtspMulticast:
                    <itemizedlist>
                      <listitem>
                        <para>
                          If <emphasis role="italic">ipType</emphasis> is equal to IPv4:
                          <itemizedlist>
                            <listitem>
                              <para>
                                <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.Type := IPv4
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv4Address := multicast IPv4 address
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv6Address skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">ipType</emphasis> is equal to IPv6:
                          <itemizedlist>
                            <listitem>
                              <para>
                                <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.Type := IPv6
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv4Address skipped
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv6Address :=  multicast IPv6 address
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Port := port for multicast streaming
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.TTL := 1
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.AutoStart := false
                        </para>
                      </listitem>


                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="italic">metadataConfiguration</emphasis>.SessionTimeout := <emphasis role="italic">profile</emphasis>.Configurations.Metadata.SessionTimeout
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">SetMetadataConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration := <emphasis role="italic">metadataConfiguration</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.SessionTimeout := <emphasis role="italic">profile</emphasis>.Configurations.Metadata.SessionTimeout
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">SetMetadataConfigurationResponse</emphasis> message.
            </para>
          </listitem>

          <listitem>
            <para>
              if <emphasis role="italic">protocol</emphasis> = RtspMulticast:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>

                <listitem>
                  <para>
                    Set <emphasis role="italic">confTypeList</emphasis> := (VideoEncoder, AudioEncoder)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client removes Video Encoder Configuration and Audio Encoder from the Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperRemoveConfigurationsFromMediaProfile"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          in <emphasis role="italic">confTypeList</emphasis> - list of configuration type to remove from Media Profile
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          in <emphasis role="italic">profile</emphasis> - Media Profile to update
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client retrieves a stream uri for Media Profile for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperGetStreamUri"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">transportProtocol</emphasis> - Transport protocol
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">ipType</emphasis> - IP type
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">profile</emphasis>.@token - Media profile token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">streamUri</emphasis> - Stream URI
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetMetadataConfigurationOptionsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetMetadataConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetMetadataConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.32-->
    <section xml:id="Annex_HelperAddPTZConfiguration" xreflabel="Annex A.31">
      <title>Media2 Service – Add PTZ Configuration to Media Profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperAddPTZConfiguration
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media Profile to contain PTZ Configuration.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. PTZ Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              If <emphasis role="italic">profile</emphasis>.Configurations does not contain PTZ:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetCompatibleConfigurations</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetCompatibleConfigurationsResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          PTZConfiguration list =: <emphasis role="italic">ptzConfigurationList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">ptzConfigurationList</emphasis> is empty, skip other steps.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Name skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Type := PTZ
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Token := <emphasis role="italic">ptzConfigurationList[0]</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetCompatibleConfigurationsResponse</emphasis> message.
            </para>
          </listitem>

          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.33-->
    <section xml:id="Annex_HelperAddAnalyticsConfiguration" xreflabel="Annex A.32">
      <title>Media2 Service – Add Analytics Configuration to Media Profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperAddAnalyticsConfiguration
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media Profile to contain Analytics Configuration.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Analytics is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              If <emphasis role="italic">profile</emphasis>.Configurations does not contain Analytics:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetAnalyticsConfigurations</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetAnalyticsConfigurationsResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configurations list =: <emphasis role="italic">acList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">acList</emphasis> is not empty:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Name skipped
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Type := Analytics
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Token := <emphasis role="italic">acList[0]</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                        </para>
                      </listitem>


                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAnalyticsConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.34-->
    <section xml:id="Annex_HelperMetadataStreamingRTPUnicastUDP" xreflabel="Annex A.33">
      <title>Metadata Streaming over RTP-Unicast/UDP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperMetadataStreamingRTPUnicastUDP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify metadata streaming over RTP-Unicast/UDP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>), Metadata Configuration (<emphasis role="italic">metadataConfiguration</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = application and with 'vnd.onvif.metadata' encoding name in a=rtpmap and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to 'application' media type with 'vnd.onvif.metadata' encoding name in a=rtpmap (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">SetMetadataConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration.@token := <emphasis role="italic">metadataConfiguration</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Name := <emphasis role="italic">metadataConfiguration</emphasis>.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.UseCount := <emphasis role="italic">metadataConfiguration</emphasis>.UseCount
                  </para>
                </listitem>
                <!--<listitem>
                  <para>
                    if <emphasis role="italic">mcOptions</emphasis>.Extention.CompressionType skipped:
                    <itemizedlist>-->
                <listitem>
                  <para>
                    Configuration.@CompressionType := <emphasis role="italic">metadataConfiguration</emphasis>.CompressionType
                  </para>
                </listitem>
                <!--</itemizedlist>
                  </para>
                </listitem>-->

                <listitem>
                  <para>
                    Configuration.PTZStatus := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.PTZStatus.Status := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Status
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.PTZStatus.Position := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Position
                  </para>
                </listitem>

                <listitem>
                  <para>
                    Configuration.Events.Filter.TopicExpression.Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.Filter.TopicExpression := "tns1:Media/ConfigurationChanged"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.Filter.MessageContent skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.SubscriptionPolicy skipped
                  </para>
                </listitem>

                <listitem>
                  <para>
                    Configuration.Analytics := <emphasis role="italic">metadataConfiguration</emphasis>.Analytics
                  </para>
                </listitem>


                <listitem>
                  <para>
                    Configuration.Multicast.Address.Type := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.Type
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.Address.IPv4Address := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv4Address
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.Address.IPv6Address := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv6Address
                  </para>
                </listitem>




                <listitem>
                  <para>
                    Configuration.Multicast.Port := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Port
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.TTL := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.TTL
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.AutoStart := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.AutoStart
                  </para>
                </listitem>


                <!--</itemizedlist>
                  </para>
                </listitem>-->
                <listitem>
                  <para>
                    Configuration.SessionTimeout := <emphasis role="italic">metadataConfiguration</emphasis>.SessionTimeout
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">SetMetadataConfigurationResponse</emphasis> message.
            </para>
          </listitem>



          <listitem>
            <para>
              If DUT does not send Metadata RTP media stream to ONVIF Client over UDP, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
    </section>
    <!--A.35-->
    <section xml:id="Annex_HelperMetadataStreamingRTPUnicastRTSPHTTPTCP" xreflabel="Annex A.34">
      <title>Metadata Streaming over RTP-Unicast/RTSP/HTTP/TCP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperMetadataStreamingRTPUnicastRTSPHTTPTCP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify metadata streaming over RTP-Unicast/RTSP/HTTP/TCP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>), Metadata Configuration (<emphasis role="italic">metadataConfiguration</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTP GET</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish DUT to ONVIF Client connection for RTP data transfer (<emphasis role="italic">connection1</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTP POST</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish ONVIF Client to DUT connection for RTSP control requests (<emphasis role="italic">connection2</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address converted to rtsp address on <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters on <emphasis role="italic">connection1</emphasis>
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = application and with 'vnd.onvif.metadata' encoding name in a=rtpmap and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to 'application' media type with 'vnd.onvif.metadata' encoding name in a=rtpmap (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP/TCP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">SetMetadataConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration.@token := <emphasis role="italic">metadataConfiguration</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Name := <emphasis role="italic">metadataConfiguration</emphasis>.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.UseCount := <emphasis role="italic">metadataConfiguration</emphasis>.UseCount
                  </para>
                </listitem>
                <!--<listitem>
                  <para>
                    if <emphasis role="italic">mcOptions</emphasis>.Extention.CompressionType skipped:
                    <itemizedlist>-->
                <listitem>
                  <para>
                    Configuration.@CompressionType := <emphasis role="italic">metadataConfiguration</emphasis>.CompressionType
                  </para>
                </listitem>
                <!--</itemizedlist>
                  </para>
                </listitem>-->

                <listitem>
                  <para>
                    Configuration.PTZStatus := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.PTZStatus.Status := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Status
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.PTZStatus.Position := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Position
                  </para>
                </listitem>

                <listitem>
                  <para>
                    Configuration.Events.Filter.TopicExpression.Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.Filter.TopicExpression := "tns1:Media/ConfigurationChanged"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.Filter.MessageContent skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.SubscriptionPolicy skipped
                  </para>
                </listitem>

                <listitem>
                  <para>
                    Configuration.Analytics := <emphasis role="italic">metadataConfiguration</emphasis>.Analytics
                  </para>
                </listitem>


                <listitem>
                  <para>
                    Configuration.Multicast.Address.Type := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.Type
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.Address.IPv4Address := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv4Address
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.Address.IPv6Address := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv6Address
                  </para>
                </listitem>




                <listitem>
                  <para>
                    Configuration.Multicast.Port := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Port
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.TTL := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.TTL
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.AutoStart := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.AutoStart
                  </para>
                </listitem>


                <!--</itemizedlist>
                  </para>
                </listitem>-->
                <listitem>
                  <para>
                    Configuration.SessionTimeout := <emphasis role="italic">metadataConfiguration</emphasis>.SessionTimeout
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">SetMetadataConfigurationResponse</emphasis> message.
            </para>
          </listitem>

          <listitem>
            <para>
              If DUT does not send Metadata RTP media stream to ONVIF Client over <emphasis role="italic">connection1</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client closes <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">HTTP 200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> and closes <emphasis role="italic">connection1</emphasis>.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis> and <emphasis role="bold">RTSP PLAY</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
    </section>
    <!--A.36-->
    <section xml:id="Annex_HelperMetadataStreamingRTPRTSPTCP" xreflabel="Annex A.35">
      <title>Metadata Streaming over RTP/RTSP/TCP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperMetadataStreamingRTPRTSPTCP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify metadata streaming over RTP/RTSP/TCP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>), Metadata Configuration (<emphasis role="italic">metadataConfiguration</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = application and with 'vnd.onvif.metadata' encoding name in a=rtpmap and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to 'application' media type with 'vnd.onvif.metadata' encoding name in a=rtpmap (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP/TCP;unicast;interleaved=0-1
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">SetMetadataConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration.@token := <emphasis role="italic">metadataConfiguration</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Name := <emphasis role="italic">metadataConfiguration</emphasis>.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.UseCount := <emphasis role="italic">metadataConfiguration</emphasis>.UseCount
                  </para>
                </listitem>
                <!--<listitem>
                  <para>
                    if <emphasis role="italic">mcOptions</emphasis>.Extention.CompressionType skipped:
                    <itemizedlist>-->
                <listitem>
                  <para>
                    Configuration.@CompressionType := <emphasis role="italic">metadataConfiguration</emphasis>.CompressionType
                  </para>
                </listitem>
                <!--</itemizedlist>
                  </para>
                </listitem>-->

                <listitem>
                  <para>
                    Configuration.PTZStatus := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.PTZStatus.Status := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Status
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.PTZStatus.Position := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Position
                  </para>
                </listitem>

                <listitem>
                  <para>
                    Configuration.Events.Filter.TopicExpression.Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.Filter.TopicExpression := "tns1:Media/ConfigurationChanged"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.Filter.MessageContent skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.SubscriptionPolicy skipped
                  </para>
                </listitem>

                <listitem>
                  <para>
                    Configuration.Analytics := <emphasis role="italic">metadataConfiguration</emphasis>.Analytics
                  </para>
                </listitem>


                <listitem>
                  <para>
                    Configuration.Multicast.Address.Type := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.Type
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.Address.IPv4Address := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv4Address
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.Address.IPv6Address := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv6Address
                  </para>
                </listitem>




                <listitem>
                  <para>
                    Configuration.Multicast.Port := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Port
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.TTL := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.TTL
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.AutoStart := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.AutoStart
                  </para>
                </listitem>


                <!--</itemizedlist>
                  </para>
                </listitem>-->
                <listitem>
                  <para>
                    Configuration.SessionTimeout := <emphasis role="italic">metadataConfiguration</emphasis>.SessionTimeout
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">SetMetadataConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send Metadata RTP media stream to ONVIF Client over RTSP control connection, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
    </section>
    <!--A.37-->
    <section xml:id="Annex_HelperMetadataStreamingRTPMulticastUDP" xreflabel="Annex A.36">
      <title>Metadata Streaming over RTP-Unicast/UDP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperMetadataStreamingRTPMulticastUDP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify metadata streaming over RTP-Multicast/UDP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>), Expected media stream encoding (<emphasis role="italic">encoding</emphasis>), IP version (<emphasis role="italic">ipVersion</emphasis>), Metadata Configuration (<emphasis role="italic">metadataConfiguration</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = application and with 'vnd.onvif.metadata' encoding name in a=rtpmap and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to 'application' media type with 'vnd.onvif.metadata' encoding name in a=rtpmap (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP;multicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">SetMetadataConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration.@token := <emphasis role="italic">metadataConfiguration</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Name := <emphasis role="italic">metadataConfiguration</emphasis>.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.UseCount := <emphasis role="italic">metadataConfiguration</emphasis>.UseCount
                  </para>
                </listitem>
                <!--<listitem>
                  <para>
                    if <emphasis role="italic">mcOptions</emphasis>.Extention.CompressionType skipped:
                    <itemizedlist>-->
                <listitem>
                  <para>
                    Configuration.@CompressionType := <emphasis role="italic">metadataConfiguration</emphasis>.CompressionType
                  </para>
                </listitem>
                <!--</itemizedlist>
                  </para>
                </listitem>-->

                <listitem>
                  <para>
                    Configuration.PTZStatus := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.PTZStatus.Status := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Status
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.PTZStatus.Position := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Position
                  </para>
                </listitem>

                <listitem>
                  <para>
                    Configuration.Events.Filter.TopicExpression.Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.Filter.TopicExpression := "tns1:Media/ConfigurationChanged"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.Filter.MessageContent skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.SubscriptionPolicy skipped
                  </para>
                </listitem>

                <listitem>
                  <para>
                    Configuration.Analytics := <emphasis role="italic">metadataConfiguration</emphasis>.Analytics
                  </para>
                </listitem>


                <listitem>
                  <para>
                    Configuration.Multicast.Address.Type := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.Type
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.Address.IPv4Address := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv4Address
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.Address.IPv6Address := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv6Address
                  </para>
                </listitem>




                <listitem>
                  <para>
                    Configuration.Multicast.Port := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Port
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.TTL := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.TTL
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.AutoStart := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.AutoStart
                  </para>
                </listitem>


                <!--</itemizedlist>
                  </para>
                </listitem>-->
                <listitem>
                  <para>
                    Configuration.SessionTimeout := <emphasis role="italic">metadataConfiguration</emphasis>.SessionTimeout
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">SetMetadataConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send Metadata RTP <emphasis role="italic">ipVersion</emphasis> multicast media stream to ONVIF Client over UDP, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
    </section>
    <!--A.38-->
    <section xml:id="Annex_HelperCreateCACertificate" xreflabel="Annex A.37">
      <title>Provide CA certificate</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreateCACertificate
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create an X.509 CA certificate.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> The subject (<emphasis role="italic">subject</emphasis>) of certificate(optional input parameter, could be skipped).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> An X.509 CA certificate (<emphasis role="italic">CAcert</emphasis>) that is compliant to [RFC5280] and a corresponding private key (<emphasis role="italic">privateKey</emphasis>) and public key (<emphasis role="italic">publicKey</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client determines the length of the key to generate (out <emphasis role="italic">length</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDetermineRSAKeyLength"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">subject</emphasis> is skipped set:
              <itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="italic">subject</emphasis> := "CN=ONVIF TT,C=US"

                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client creates an X.509 self-signed CA certificate that is compliant to [RFC5280] and has the following properties:
              <itemizedlist>
                <listitem>
                  <para>
                    version := v3
                  </para>
                </listitem>
                <listitem>
                  <para>
                    signature := sha1-WithRSAEncryption
                  </para>
                </listitem>
                <listitem>
                  <para>
                    validity := not before 19700101000000Z and not after 99991231235959Z
                  </para>
                </listitem>
                <listitem>
                  <para>
                    subject := <emphasis role="italic">subject</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    length of the key to be used := <emphasis role="italic">length</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client may return the same CA certificate in subsequent invocations of this procedure for the same subject.
      </para>
    </section>
    <!--A.39-->
    <section xml:id="Annex_HelperGetStreamUri" xreflabel="Annex A.38">
      <title>Get Stream Uri</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetStreamUri
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get stream URI from the DUT.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Protocol (<emphasis role="italic">protocol</emphasis>). Media Profile token (<emphasis role="italic">token</emphasis>). IP type (<emphasis role="italic">ipType</emphasis>) (optional parameter, IPv4 by default).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Stream Uri (<emphasis role="italic">streamUri</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetStreamUri</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Protocol := <emphasis role="italic">protocol</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">token</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetStreamUriResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Uri =: <emphasis role="italic">streamUri</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">streamUri</emphasis> is longer than 128 octets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">ipType</emphasis> skipped, set <emphasis role="italic">ipType</emphasis> := IPv4.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">streamUri</emphasis> ip type is not equal to <emphasis role="italic">ipType</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">protocol</emphasis> = RtspOverHttp:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If <emphasis role="italic">streamUri</emphasis> doesn't have the same port with the web service, FAIL the test and skip other steps.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">streamUri</emphasis> doesn't have the same scheme with the web service ('http' or 'https'), FAIL the test and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">protocol</emphasis> != RtspOverHttp:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If <emphasis role="italic">streamUri</emphasis> doesn't have scheme equal to 'rtsp', FAIL the test and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetStreamUriResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.40-->
    <section xml:id="Annex_HelperDeviceConfigurationForVideoStreaming" xreflabel="Annex A.39">
      <title>Device Configuration for Video Streaming</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeviceConfigurationForVideoStreaming
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media profile, Video Encoder Configuration, and get stream URI from the DUT for video streaming.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Required video encoding (<emphasis role="italic">requiredVideoEncoding</emphasis>), Transport protocol (<emphasis role="italic">protocol</emphasis>), IP version (<emphasis role="italic">ipVersion</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Stream Uri (<emphasis role="italic">streamUri</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>

              ONVIF Client selects a Media Profile with required video encoding support by following the procedure mentioned in <xref linkend="Annex_HelperFindMediaProfileForVideoStreaming"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">requiredVideoEncoding</emphasis> - required video encoding
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">profile</emphasis> - Media Profile with Video Source Configuration and Video Encoder Configuration with the required video encoding
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">vecOptions</emphasis> - Video Encoder Configuration Options for the Media Profile
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              if <emphasis role="italic">protocol</emphasis> = RtspMulticast:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client removes Audio Encoder Configuration and Metadata Configuration from media profile by following the procedure mentioned in <xref linkend="Annex_HelperRemoveAudioEncoderConfigAndMetadataConfigFromMediaProfile"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          in <emphasis role="italic">profile</emphasis> - Media Profile
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">SetVideoEncoderConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration.@token := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Name := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.UseCount := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.UseCount
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.@GovLength := minimum item from <emphasis role="italic">vecOptions</emphasis>.@GovLengthRange list (or skipped if <emphasis role="italic">vecOptions</emphasis>.@GovLengthRange skipped)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.@Profile := highest value from <emphasis role="italic">vecOptions</emphasis>.@ProfilesSupported list as the order is High/Extended/Main/Baseline (or skipped if <emphasis role="italic">vecOptions</emphasis>.@ProfilesSupported skipped)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Encoding := <emphasis role="italic">requiredVideoEncoding</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Resolution :=  resolution closest to 640x480 from <emphasis role="italic">vecOptions</emphasis>.ResolutionsAvailable list
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">vecOptions</emphasis>.@FrameRatesSupported skipped and <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.RateControl skipped:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.RateControl skipped
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">vecOptions</emphasis>.@FrameRatesSupported or <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.RateControl is not skipped:

                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.RateControl.@ConstantBitRate := <emphasis role="italic">vecOptions</emphasis>.@ConstantBitRateSupported
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.RateControl.FrameRateLimit := value closest to 25 but greater than 1 from <emphasis role="italic">vecOptions</emphasis>.@FrameRatesSupported list
                          (or <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.RateControl.FrameRateLimit if <emphasis role="italic">vecOptions</emphasis>.@FrameRatesSupported skipped)
                        </para>
                      </listitem>


                      <listitem>
                        <para>
                          Configuration.RateControl.BitrateLimit := min {max {<emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.RateControl.BitrateLimit, <emphasis role="italic">vecOptions</emphasis>.BitrateRange.Min}, <emphasis role="italic">vecOptions</emphasis>.BitrateRange.Max}
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>

                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> is not equal to RtspMulticast:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Multicast
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> = RtspMulticast and <emphasis role="italic">ipVersion</emphasis> = IPv4:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.Type := IPv4
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv4Address := multicast IPv4 address
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv6Address skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Port := port for multicast streaming
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.TTL := 1
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.AutoStart := false
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> = RtspMulticast and <emphasis role="italic">ipVersion</emphasis> = IPv6:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.Type := IPv6
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv4Address skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv6Address := multicast IPv6 address
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Port := port for multicast streaming
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.TTL := 1
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.AutoStart := false
                        </para>
                      </listitem>

                    </itemizedlist>
                  </para>
                </listitem>

                <listitem>
                  <para>
                    Configuration.Quality := <emphasis role="italic">vecOptions</emphasis>.QualityRange.Min
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>

              ONVIF Client retrieves a stream uri for Media Profile for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperGetStreamUri"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">protocol</emphasis> - Transport protocol
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">ipVersion</emphasis> - IP Type
                  </para>
                </listitem>

                <listitem>
                  <para>
                    in <emphasis role="italic">profile</emphasis>.@token - Media profile token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">uri</emphasis> - Stream URI
                  </para>
                </listitem>

              </itemizedlist>
            </para>
          </listitem>


        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
      </para>
    </section>
    <!--A.41-->
    <section xml:id="Annex_HelperDeviceConfigurationForAudioStreaming" xreflabel="Annex A.40">
      <title>Device Configuration for Audio Streaming</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeviceConfigurationForAudioStreaming
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media profile, Audio Encoder Configuration, and get stream URI from the DUT for audio streaming.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT, Audio is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Required audio encoding (<emphasis role="italic">requiredAudioEncoding</emphasis>), Transport protocol (<emphasis role="italic">protocol</emphasis>), IP version (<emphasis role="italic">ipVersion</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Stream Uri (<emphasis role="italic">streamUri</emphasis>), Audio encoding set in profile (<emphasis role="italic">requiredAudioEncoding</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>

              ONVIF Client selects a Media Profile with required audio encoding support by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForAudioStreaming"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">requiredAudioEncoding</emphasis> - required audio encoding
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Source Configuration and Audio Encoder Configuration with the required audio encoding
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">aecOptions</emphasis> - Audio Encoder Configuration Options for the Media Profile
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              if <emphasis role="italic">protocol</emphasis> = RtspMulticast:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client removes Video Encoder Configuration and Metadata Configuration from media profile by following the procedure mentioned in <xref linkend="Annex_HelperRemoveVideoEncoderConfigAndMetadataConfigFromMediaProfile"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          in <emphasis role="italic">profile</emphasis> - Media Profile
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>

          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">SetAudioEncoderConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration.@token := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Name := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.UseCount := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.UseCount
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Encoding := <emphasis role="italic">aecOptions</emphasis>.Encoding
                  </para>
                </listitem>

                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> is not equal to RtspMulticast:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Multicast
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> = RtspMulticast and <emphasis role="italic">ipVersion</emphasis> = IPv4:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.Type := IPv4
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv4Address := multicast IPv4 address
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv6Address skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Port := port for multicast streaming
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.TTL := 1
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.AutoStart := false
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> = RtspMulticast and <emphasis role="italic">ipVersion</emphasis> = IPv6:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.Type := IPv6
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv4Address skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv6Address := multicast IPv6 address
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Port := port for multicast streaming
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.TTL := 1
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.AutoStart := false
                        </para>
                      </listitem>

                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Bitrate := the nearest value to <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Bitrate from <emphasis role="italic">aecOptions</emphasis>BitrateList.Items list
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.SampleRate := the nearest value to <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.SampleRate from <emphasis role="italic">aecOptions</emphasis>SampleRateList.Items list
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">SetAudioEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>

          <listitem>
            <para>

              ONVIF Client retrieves a stream uri for Media Profile for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperGetStreamUri"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">protocol</emphasis> - Transport protocol
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">ipVersion</emphasis> - IP Type
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">profile</emphasis>.@token - Media profile token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">uri</emphasis> - Stream URI
                  </para>
                </listitem>

              </itemizedlist>
            </para>
          </listitem>


        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetAudioEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
      </para>
    </section>
    <!--A.42-->
    <section xml:id="Annex_HelperBackchannelStreamingOverWebSocket" xreflabel="Annex A.41">
      <title>Backchannel Streaming over WebSocket</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperBackchannelStreamingOverWebSocket
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify audio backchannel streaming over WebSocket.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> WebSocket is supported by the DUT. Audio Backchannel is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for audio backchannel streaming (<emphasis role="italic">streamUri</emphasis>). Expected media stream encoding (<emphasis role="italic">encoding</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client retrieves Media2 Service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">cap</emphasis> - Media2 Service capabilities
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">uri</emphasis> := <emphasis role="italic">cap</emphasis>.StreamingCapabilities.RTSPWebSocketUri
            </para>
          </listitem>
          <listitem>
            <para>
              If scheme component of <emphasis role="italic">uri</emphasis> is not equal to <emphasis role="bold">ws</emphasis> or <emphasis role="bold">wss</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client establishes a WebSocket Connection by following the procedure mentioned in <xref linkend="Annex_HelperWebSocketHandshake"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">uri</emphasis> - Web Socket Uri
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to <emphasis role="italic">streamUri</emphasis> address over WebSocket.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message over WebSocket with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.A42.3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = audio and with a=sendonly and with rtpmap value corresponding to <emphasis role="italic">encoding</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag over WebSocket to uri address, which corresponds to audio backchannel media type (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP/TCP;unicast;interleaved=0-1
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message over WebSocket with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag over WebSocket to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message over WebSocket with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>

          <listitem>
            <para>
              ONVIF Client sends RTP Unicast audio stream with <emphasis role="italic">encoding</emphasis> to DUT over UDP.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag over WebSocket to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message over WebSocket with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response over WebSocket for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A42.3"/>.
      </para>
    </section>
    <!--A.43-->
    <section xml:id="Annex_HelperCheckAndConfigureHTTPS" xreflabel="Annex A.42">
      <title>Configuring HTTPS if Required</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCheckAndConfigureHTTPS
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper Procedure to check and configure HTTPS using Security Configuration Service if required.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> RTP/RTSP/HTTPS feature is supported by DUT. HTTPS is configured on the DUT, if TLS Server is not supported by DUT. Security Configuration Service is received from the DUT, if TLS Server is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetNetworkProtocols</emphasis> request.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetNetworkProtocolsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    NetworkProtocols list =: <emphasis role="italic">networkProtocolsList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">networkProtocolsList</emphasis> contains item with Name = HTTPS and Enabled = true, return to the test and skip other procedure steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If the DUT does not support TLS Server, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client configures HTTPS by following the procedure mentioned in <xref linkend="Annex_HelperConfigureHTTPS"/>.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetNetworkProtocolsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.44-->
    <section xml:id="Annex_HelperRemoveConfigurationsFromMediaProfile" xreflabel="Annex A.43">
      <title>Removing Configurations from Media Profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperRemoveConfigurationsFromMediaProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper Procedure to remove configuartions from Media Profile.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>). List of configuration type to remove from profile (<emphasis role="italic">confTypeList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := All
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>

          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis>[0] contains at least one Configuration with type equals to configuration type from <emphasis role="italic">confTypeList</emphasis>:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.VideoSource and <emphasis role="italic">confTypeList</emphasis> contains VideoSource:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[0].Type := VideoSource
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.VideoEncoder and <emphasis role="italic">confTypeList</emphasis> contains VideoEncoder:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[1].Type := VideoEncoder
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[1].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.AudioSource and <emphasis role="italic">confTypeList</emphasis> contains AudioSource:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[2].Type := AudioSource
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[2].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.AudioEncoder and <emphasis role="italic">confTypeList</emphasis> contains AudioEncoder:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[3].Type := AudioEncoder
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[3].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.AudioOutput and <emphasis role="italic">confTypeList</emphasis> contains AudioOutput:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[4].Type := AudioOutput
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[4].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.AudioDecoder and <emphasis role="italic">confTypeList</emphasis> contains AudioDecoder:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[5].Type := AudioDecoder
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[5].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.Metadata and <emphasis role="italic">confTypeList</emphasis> contains Metadata:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[6].Type := Metadata
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[6].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.Analytics and <emphasis role="italic">confTypeList</emphasis> contains Analytics:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[7].Type := Analytics
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[7].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">profileList</emphasis>[0] contains Configuration.PTZ and <emphasis role="italic">confTypeList</emphasis> contains PTZ:
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration[8].Type := PTZ
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[8].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.45-->
    <section xml:id="Annex_HelperDeviceConfigurationForAudioStreamingUsingOnlyAudioInProfile" xreflabel="Annex A.44">
      <title>Device Configuration for Audio Streaming using Media Profile that contains only Audio Configurations</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeviceConfigurationForAudioStreamingUsingOnlyAudioInProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media profile that contains only Audio Source and Audio Encoder configurations, to configure Audio Encoder Configuration, and get stream URI from the DUT for audio streaming.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT, Audio is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Required audio encoding (<emphasis role="italic">requiredAudioEncoding</emphasis>), Transport protocol (<emphasis role="italic">protocol</emphasis>), IP version (<emphasis role="italic">ipVersion</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Stream Uri (<emphasis role="italic">streamUri</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>

              ONVIF Client selects a Media Profile with required audio encoding support by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileForAudioStreaming"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">requiredAudioEncoding</emphasis> - required audio encoding
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Source Configuration and Audio Encoder Configuration with the required audio encoding
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">aecOptions</emphasis> - Audio Encoder Configuration Options for the Media Profile
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>

          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">SetAudioEncoderConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration.@token := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Name := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.UseCount := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.UseCount
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Encoding := <emphasis role="italic">requiredAudioEncoding</emphasis>
                  </para>
                </listitem>

                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> is not equal to RtspMulticast:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Multicast
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> = RtspMulticast and <emphasis role="italic">ipVersion</emphasis> = IPv4:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.Type := IPv4
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv4Address := multicast IPv4 address
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv6Address skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Port := port for multicast streaming
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.TTL := 1
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.AutoStart := false
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> = RtspMulticast and <emphasis role="italic">ipVersion</emphasis> = IPv6:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.Type := IPv6
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv4Address skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv6Address := multicast IPv6 address
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Port := port for multicast streaming
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.TTL := 1
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.AutoStart := false
                        </para>
                      </listitem>

                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Bitrate := the nearest value to <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Bitrate from <emphasis role="italic">aecOptions</emphasis>BitrateList.Items list
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.SampleRate := the nearest value to <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.SampleRate from <emphasis role="italic">aecOptions</emphasis>SampleRateList.Items list
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">SetAudioEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">confTypeList</emphasis> := (VideoSource, VideoEncoder, AudioOutput, AudioDecoder, Metadata, Analytics, PTZ)
            </para>
          </listitem>
          <listitem>
            <para>

              ONVIF Client removes all configurations except AudioSource and AudioEncoder from the Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperRemoveConfigurationsFromMediaProfile"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">confTypeList</emphasis> - list of configuration type to remove from Media Profile
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">profile</emphasis> - Media Profile to update
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>

              ONVIF Client retrieves a stream uri for Media Profile for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperGetStreamUri"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">protocol</emphasis> - Transport protocol
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">ipVersion</emphasis> - IP Type
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">profile</emphasis>.@token - Media profile token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">uri</emphasis> - Stream URI
                  </para>
                </listitem>

              </itemizedlist>
            </para>
          </listitem>


        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetAudioEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
      </para>
    </section>
    <!--A.46-->
    <section xml:id="Annex_HelperDeviceConfigurationForVideoAndAudioStreaming" xreflabel="Annex A.45">
      <title>Device Configuration for Video and Audio Streaming</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeviceConfigurationForVideoAndAudioStreaming
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media profile, Video Encoder Configuration, Audio Encoder Configuration, and get stream URI from the DUT for video and audio streaming.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Required audio encoding (<emphasis role="italic">requiredAudioEncoding</emphasis>), Transport protocol (<emphasis role="italic">protocol</emphasis>), IP version (<emphasis role="italic">ipVersion</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Stream Uri (<emphasis role="italic">streamUri</emphasis>). Media profile with required configurations (<emphasis role="italic">profile</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := All
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis> with not empty Configuration.VideoSource, Configuration.VideoEncoder, Configuration.AudioSource, and Configuration.AudioEncoder repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If <emphasis role="italic">profile</emphasis>.Configuration.VideoEncoder = H264 or H265
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurationOptions</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ConfigurationToken := <emphasis role="italic">profile</emphasis>.Configuration.AudioEncoder.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Options list =: <emphasis role="italic">optionsList</emphasis>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">requiredAudioEncoding</emphasis> = AAC:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="5.5em"?>
                            <listitem>
                              <para>
                                If <emphasis role="italic">optionsList</emphasis> list contains item with Encoding = "MP4A-LATM" or "MPEG4-GENERIC":
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      Set <emphasis role="italic">aecOptions</emphasis> := item with Encoding = "MP4A-LATM" from <emphasis role="italic">optionsList</emphasis> list if exists, otherwise item with Encoding = "MPEG4-GENERIC".
                                    </para>
                                  </listitem>

                                </orderedlist>
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">requiredAudioEncoding</emphasis> != AAC:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="5.5em"?>
                            <listitem>
                              <para>
                                If <emphasis role="italic">optionsList</emphasis> list contains item with Encoding = <emphasis role="italic">requiredAudioEncoding</emphasis>:
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      Set <emphasis role="italic">aecOptions</emphasis> := item with Encoding = <emphasis role="italic">requiredAudioEncoding</emphasis> from <emphasis role="italic">optionsList</emphasis> list.
                                    </para>
                                  </listitem>
                                </orderedlist>
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">aecOptions</emphasis> != NULL
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="3.5em"?>
                            <listitem>
                              <para>
                                ONVIF Client sets audio encoder configuration by following the procedure mentioned in <xref linkend="Annex_HelperSetAEC"/> with the following input and output parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">profile</emphasis> - Media profile
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">aecOptions</emphasis> - audio encoder configuration options
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">protocol</emphasis> - Transport protocol
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">ipVersion</emphasis> - IP Type
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      ConfigurationToken := <emphasis role="italic">profile</emphasis>.Configuration.VideoEncoder.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      Options list =: <emphasis role="italic">optionsList</emphasis>
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">vecOptions</emphasis> := item with Encoding = <emphasis role="italic">profile</emphasis>.Configuration.VideoEncoder.Encoding from <emphasis role="italic">optionsList</emphasis> list.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client sets video encoder configuration by following the procedure mentioned in <xref linkend="Annex_HelperSetVEC"/> with the following input and output parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">profile</emphasis> - Media profile
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">vecOptions</emphasis> - video encoder configuration options
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">protocol</emphasis> - Transport protocol
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">ipVersion</emphasis> - IP Type
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Go to step <xref linkend="A.46_RemoveMetadata"/>.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>

          <listitem>
            <para>
              Set <emphasis role="italic">profile</emphasis> = <emphasis role="italic">profileList</emphasis>[0].
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">confTypeList</emphasis> := (configurations that are contained in profile <emphasis role="italic">profile</emphasis>)
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client removes all configurations from the Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperRemoveConfigurationsFromMediaProfile"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">confTypeList</emphasis> - list of configuration type to remove from Media Profile
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">profile</emphasis> - Media Profile to update
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">videoSourceConfList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="A.46_ConfigureProfileWithVideoAndAudio" xreflabel="9">
            <para>
              For each Video Source Configuration <emphasis role="italic">videoSourceConfiguration</emphasis> in <emphasis role="italic">videoSourceConfList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="3.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Name skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Type := VideoSource
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Token := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configurations list =: <emphasis role="italic">videoEncoderConfList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    For each Video Encoder Configuration <emphasis role="italic">videoEncoderConfiguration</emphasis> in <emphasis role="italic">videoEncoderConfList</emphasis> repeat the following steps:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="4.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ConfigurationToken := <emphasis role="italic">videoEncoderConfiguration</emphasis>.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Options list =: <emphasis role="italic">optionsList</emphasis>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">optionsList</emphasis> list contains item with Encoding = H264 or H265:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="5.5em"?>
                            <listitem>
                              <para>
                                ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Name skipped
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration[0].Type := VideoEncoder
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration[0].Token := <emphasis role="italic">videoEncoderConfiguration</emphasis>.@token
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">vecOptions</emphasis> := item with Encoding = H264 from <emphasis role="italic">optionsList</emphasis> list if present, otherwivce item with Encoding = H265.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client sets video encoder configuration by following the procedure mentioned in <xref linkend="Annex_HelperSetVEC"/> with the following input and output parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">profile</emphasis> - Media profile
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">vecOptions</emphasis> - video encoder configuration options
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">protocol</emphasis> - Transport protocol
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">ipVersion</emphasis> - IP Type
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client tries to add AudioSource Configuration and AudioEncoder Configuration with required audio encoding support to the Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperAddAudioConfigurationsWithSpecificEncoderToMediaProfile"/> with the following input and output parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">requiredAudioEncoding</emphasis> - required audio encoding
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">profile</emphasis> - Media profile
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      out (optional) <emphasis role="italic">aecOptions</emphasis> - Audio Encoder Configuration Options for the Media Profile
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                If <emphasis role="italic">aecOptions</emphasis> != NULL
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="3.5em"?>
                                  <listitem>
                                    <para>
                                      ONVIF Client sets audio encoder configuration by following the procedure mentioned in <xref linkend="Annex_HelperSetAEC"/> with the following input and output parameters
                                      <itemizedlist>
                                        <listitem>
                                          <para>
                                            in <emphasis role="italic">profile</emphasis> - Media profile
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            in <emphasis role="italic">aecOptions</emphasis> - audio encoder configuration options
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            in <emphasis role="italic">protocol</emphasis> - Transport protocol
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            in <emphasis role="italic">ipVersion</emphasis> - IP Type
                                          </para>
                                        </listitem>
                                      </itemizedlist>
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Go to step <xref linkend="A.46_RemoveMetadata"/>.
                                    </para>
                                  </listitem>
                                </orderedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      ProfileToken = <emphasis role="italic">profile</emphasis>.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration[0].Type = VideoEncoder
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration[0].Token skipped
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If step <xref linkend="A.46_ConfigureProfileWithVideoAndAudio"/> ends with <emphasis role="italic">aecOptions</emphasis> = NULL, fail the test, restore DUT settings, and skip other steps.
            </para>
          </listitem>
          <listitem xml:id="A.46_RemoveMetadata" xreflabel="10">
            <para>
              if <emphasis role="italic">protocol</emphasis> = RtspMulticast:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    Set <emphasis role="italic">confTypeList</emphasis> := (Metadata)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client removes Metadata Configuration from the Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperRemoveConfigurationsFromMediaProfile"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          in <emphasis role="italic">confTypeList</emphasis> - list of configuration type to remove from Media Profile
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          in <emphasis role="italic">profile</emphasis> - Media Profile to update
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem xml:id="A.46_GetStreamURI" xreflabel="11">
            <para>
              ONVIF Client retrieves a stream uri for Media Profile for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperGetStreamUri"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">protocol</emphasis> - Transport protocol
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">ipVersion</emphasis> - IP Type
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">profile</emphasis>.@token - Media profile token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">uri</emphasis> - Stream URI
                  </para>
                </listitem>

              </itemizedlist>
            </para>
          </listitem>


        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetAudioEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
      </para>
    </section>
    <!--A.47-->
    <section xml:id="Annex_HelperAddAudioConfigurationsWithSpecificEncoderToMediaProfile" xreflabel="Annex A.46">
      <title>Media2 Service – Adding AudioSource and AudioEncoder with Specified Audio Encoder Value to Media Profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperAddAudioConfigurationsWithSpecificEncoderToMediaProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to add AudioSource Configuration and AudioEncoder Configuration with required audio encoding to the Media Profile if corresponding AudioEncoder Configuration found.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Audio is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Required audio encoding (<emphasis role="italic">requiredAudioEncoding</emphasis>). Media Profile (<emphasis role="italic">profile</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Audio Encoder Configuration Options for the Media Profile (<emphasis role="italic">aecOptions</emphasis>) (optional, returned in case profile was configured with audio).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">audioSourceConfList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each Audio Source Configuration <emphasis role="italic">audioSourceConfiguration</emphasis> in <emphasis role="italic">audioSourceConfList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="3.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Name skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Type := AudioSource
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Token := <emphasis role="italic">audioSourceConfiguration</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurations</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationsResponse</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configurations list =: <emphasis role="italic">audioEncoderConfList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    For each Audio Encoder Configuration <emphasis role="italic">audioEncoderConfiguration</emphasis> in <emphasis role="italic">audioEncoderConfList</emphasis> repeat the following steps:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="4.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurationOptions</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ConfigurationToken := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Options list =: <emphasis role="italic">optionsList</emphasis>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">requiredAudioEncoding</emphasis> = AAC:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="5.5em"?>
                            <listitem>
                              <para>
                                If <emphasis role="italic">optionsList</emphasis> list contains item with Encoding = "MP4A-LATM" or "MPEG4-GENERIC":
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                                      <itemizedlist>
                                        <listitem>
                                          <para>
                                            ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Name skipped
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Configuration[0].Type := AudioEncoder
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Configuration[0].Token := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                                          </para>
                                        </listitem>
                                      </itemizedlist>
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Set <emphasis role="italic">aecOptions</emphasis> := item with Encoding = "MP4A-LATM" from <emphasis role="italic">optionsList</emphasis> list if exists, otherwise item with Encoding = "MPEG4-GENERIC".
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Skip other steps in procedure.
                                    </para>
                                  </listitem>
                                </orderedlist>
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">requiredAudioEncoding</emphasis> != AAC:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="5.5em"?>
                            <listitem>
                              <para>
                                If <emphasis role="italic">optionsList</emphasis> list contains item with Encoding = <emphasis role="italic">requiredAudioEncoding</emphasis>:
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                                      <itemizedlist>
                                        <listitem>
                                          <para>
                                            ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Name skipped
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Configuration[0].Type := AudioEncoder
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Configuration[0].Token := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                                          </para>
                                        </listitem>
                                      </itemizedlist>
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Set <emphasis role="italic">aecOptions</emphasis> := item with Encoding = <emphasis role="italic">requiredAudioEncoding</emphasis> from <emphasis role="italic">optionsList</emphasis> list.
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Skip other steps in procedure.
                                    </para>
                                  </listitem>
                                </orderedlist>
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>

                    </orderedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ProfileToken = <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Type = AudioSource
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Token skipped
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>

          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioEncoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.48-->
    <section xml:id="Annex_HelperRTSPAuthentication" xreflabel="Annex A.47">
      <title>RTSP Authentication Check</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperRTSPAuthenticationCheck
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to check that DUT uses Digest authentication type for RTSP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Real-time Streaming is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              If Device supports Profile T according to feature definition results:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If DUT does not send RTSP 401 Unauthorized message to any RTSP anonymous request, FAIL the test and skip other steps.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If RTSP 401 Unauthorized message does not have <emphasis role="bold">WWW-Authenticate: Digest</emphasis> header, FAIL the test and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>

          <listitem>
            <para>
              DUT did not send response message to RTSP request.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.49-->
    <!--<section xml:id="Annex_HelperBackchannelStreamingRTPUnicastRTSPHTTPSTCP" xreflabel="Annex A.49">
      <title>Audio Backchannel over RTP-Unicast/RTSP/HTTPS/TCP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperBackchannelStreamingRTPUnicastRTSPHTTPSTCP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify audio backchannel streaming over RTP-Unicast/RTSP/HTTPS/TCP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Audio Backchannel is supported by DUT. HTTPS is configured on the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>). Expected audio stream encoding (<emphasis role="italic">encoding</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTP GET</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish DUT to ONVIF Client secured connection for RTP data transfer (<emphasis role="italic">connection1</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTP POST</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish ONVIF Client to DUT secured connection for RTSP control requests (<emphasis role="italic">connection2</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to <emphasis role="italic">streamUri</emphasis> address converted to rtsp address on <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters on <emphasis role="italic">connection1</emphasis>
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.A49.3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = audio and with a=sendonly and with rtpmap value corresponding to <emphasis role="italic">encoding</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP/TCP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client sends audio stream with <emphasis role="italic">encoding</emphasis> to DUT over <emphasis role="italic">connection1</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client closes <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">HTTP 200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> and closes <emphasis role="italic">connection1</emphasis>.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis> and <emphasis role="bold">RTSP PLAY</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A49.3"/>.
      </para>
    </section>-->
    <!--A.50-->
    <section xml:id="Annex_HelperMetadataStreamingRTPUnicastRTSPHTTPSTCP" xreflabel="Annex A.48">
      <title>Metadata Streaming over RTP-Unicast/RTSP/HTTPS/TCP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperMetadataStreamingRTPUnicastRTSPHTTPSTCP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify metadata streaming over RTP-Unicast/RTSP/HTTP/TCP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> HTTPS is configured on the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>), Metadata Configuration (<emphasis role="italic">metadataConfiguration</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTP GET</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish DUT to ONVIF Client secured connection for RTP data transfer (<emphasis role="italic">connection1</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTP POST</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish ONVIF Client to DUT secured connection for RTSP control requests (<emphasis role="italic">connection2</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address converted to rtsp address on <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters on <emphasis role="italic">connection1</emphasis>
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = application and with 'vnd.onvif.metadata' encoding name in a=rtpmap and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to 'application' media type with 'vnd.onvif.metadata' encoding name in a=rtpmap (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP/TCP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">SetMetadataConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration.@token := <emphasis role="italic">metadataConfiguration</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Name := <emphasis role="italic">metadataConfiguration</emphasis>.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.UseCount := <emphasis role="italic">metadataConfiguration</emphasis>.UseCount
                  </para>
                </listitem>
                <!--<listitem>
                  <para>
                    if <emphasis role="italic">mcOptions</emphasis>.Extention.CompressionType skipped:
                    <itemizedlist>-->
                <listitem>
                  <para>
                    Configuration.@CompressionType := <emphasis role="italic">metadataConfiguration</emphasis>.CompressionType
                  </para>
                </listitem>
                <!--</itemizedlist>
                  </para>
                </listitem>-->

                <listitem>
                  <para>
                    Configuration.PTZStatus := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.PTZStatus.Status := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Status
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.PTZStatus.Position := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Position
                  </para>
                </listitem>

                <listitem>
                  <para>
                    Configuration.Events.Filter.TopicExpression.Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.Filter.TopicExpression := "tns1:Media/ConfigurationChanged"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.Filter.MessageContent skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.SubscriptionPolicy skipped
                  </para>
                </listitem>

                <listitem>
                  <para>
                    Configuration.Analytics := <emphasis role="italic">metadataConfiguration</emphasis>.Analytics
                  </para>
                </listitem>


                <listitem>
                  <para>
                    Configuration.Multicast.Address.Type := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.Type
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.Address.IPv4Address := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv4Address
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.Address.IPv6Address := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv6Address
                  </para>
                </listitem>




                <listitem>
                  <para>
                    Configuration.Multicast.Port := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Port
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.TTL := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.TTL
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.AutoStart := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.AutoStart
                  </para>
                </listitem>


                <!--</itemizedlist>
                  </para>
                </listitem>-->
                <listitem>
                  <para>
                    Configuration.SessionTimeout := <emphasis role="italic">metadataConfiguration</emphasis>.SessionTimeout
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">SetMetadataConfigurationResponse</emphasis> message.
            </para>
          </listitem>

          <listitem>
            <para>
              If DUT does not send Metadata RTP media stream to ONVIF Client over <emphasis role="italic">connection1</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client closes <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">HTTP 200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> and closes <emphasis role="italic">connection1</emphasis>.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis> and <emphasis role="bold">RTSP PLAY</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
    </section>
    <!--A.51-->
    <section xml:id="Annex_HelperMetadataStreamingWebSocket" xreflabel="Annex A.49">
      <title>Metadata Streaming over WebSocket</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperMetadataStreamingWebSocket
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify metadata streaming over WebSocket.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> WebSocket is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>), Metadata Configuration (<emphasis role="italic">metadataConfiguration</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client retrieves Media2 Service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">cap</emphasis> - Media2 Service capabilities
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">uri</emphasis> := <emphasis role="italic">cap</emphasis>.StreamingCapabilities.RTSPWebSocketUri
            </para>
          </listitem>
          <listitem>
            <para>
              If scheme component of <emphasis role="italic">uri</emphasis> is not equal to <emphasis role="bold">ws</emphasis> or <emphasis role="bold">wss</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client establishes a WebSocket Connection by following the procedure mentioned in <xref linkend="Annex_HelperWebSocketHandshake"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">uri</emphasis> - Web Socket Uri
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri</emphasis> address over WebSocket.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message over WebSocket with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = application and with 'vnd.onvif.metadata' encoding name in a=rtpmap and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request over WebSocket to uri address, which corresponds to 'application' media type with 'vnd.onvif.metadata' encoding name in a=rtpmap (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message over WebSocket with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request over WebSocket to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message over WebSocket with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">SetMetadataConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration.@token := <emphasis role="italic">metadataConfiguration</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Name := <emphasis role="italic">metadataConfiguration</emphasis>.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.UseCount := <emphasis role="italic">metadataConfiguration</emphasis>.UseCount
                  </para>
                </listitem>
                <!--<listitem>
                  <para>
                    if <emphasis role="italic">mcOptions</emphasis>.Extention.CompressionType skipped:
                    <itemizedlist>-->
                <listitem>
                  <para>
                    Configuration.@CompressionType := <emphasis role="italic">metadataConfiguration</emphasis>.CompressionType
                  </para>
                </listitem>
                <!--</itemizedlist>
                  </para>
                </listitem>-->

                <listitem>
                  <para>
                    Configuration.PTZStatus := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.PTZStatus.Status := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Status
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.PTZStatus.Position := <emphasis role="italic">metadataConfiguration</emphasis>.PTZStatus.Position
                  </para>
                </listitem>

                <listitem>
                  <para>
                    Configuration.Events.Filter.TopicExpression.Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.Filter.TopicExpression := "tns1:Media/ConfigurationChanged"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.Filter.MessageContent skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Events.SubscriptionPolicy skipped
                  </para>
                </listitem>

                <listitem>
                  <para>
                    Configuration.Analytics := <emphasis role="italic">metadataConfiguration</emphasis>.Analytics
                  </para>
                </listitem>


                <listitem>
                  <para>
                    Configuration.Multicast.Address.Type := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.Type
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.Address.IPv4Address := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv4Address
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.Address.IPv6Address := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Address.IPv6Address
                  </para>
                </listitem>




                <listitem>
                  <para>
                    Configuration.Multicast.Port := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.Port
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.TTL := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.TTL
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast.AutoStart := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast.AutoStart
                  </para>
                </listitem>


                <!--</itemizedlist>
                  </para>
                </listitem>-->
                <listitem>
                  <para>
                    Configuration.SessionTimeout := <emphasis role="italic">metadataConfiguration</emphasis>.SessionTimeout
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">SetMetadataConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send Metadata RTP media stream to ONVIF Client over UDP, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request over WebSocket to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message over WebSocket with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
    </section>
    <!--A.52-->
    <section xml:id="Annex_HelperMediaProfilesCleanUp" xreflabel="Annex A.50">
      <title>Remove all non-fixed Media Profiles and remove all configurations from fixed Media Profiles</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperMediaProfilesCleanUp
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure, which removes all non-fixed Media Profiles and removes all configurations from fixed Media Profiles.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Media Profiles List (<emphasis role="italic">profileList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              For each Media Profile <emphasis role="italic">profile1</emphasis> in <emphasis role="italic">profileList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If <emphasis role="italic">profile1</emphasis>.@fixed = true:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Type := All
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">profile1</emphasis>.@fixed = false or skipped:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">DeleteProfile</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Token := <emphasis role="italic">profile1</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          The DUT responds with <emphasis role="bold">DeleteProfileResponse</emphasis> message.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">DeleteProfileResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.53-->
    <section xml:id="Annex_HelperGetVideoSourceConfigurationsList" xreflabel="Annex A.51">
      <title>Get Video Source Configurations List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetVideoSourceConfigurationsList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve Video Source Configurations List.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Video Source Configurations list (<emphasis role="italic">videoSourceConfList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">videoSourceConfList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">videoSourceConfList</emphasis> is empty, FAIL the test.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.54-->
    <section xml:id="Annex_HelperFindGuaranteedProfiles4" xreflabel="Annex A.52">
      <title>Create New Media Profiles to Get Guaranteed Number of Media Profiles for Video Source Configuration</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperFindGuaranteedProfiles4
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure, which tries to create new Media Profiles to reach number of guaranteed encoder instances without changing already configured profiles.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is supported by the DUT. Profile T is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Information about guaranteed encoder instances (<emphasis role="italic">info</emphasis>).
        Video Source Configuration (<emphasis role="italic">videoSourceConfig</emphasis>).
        List of configured media profiles (<emphasis role="italic">configuredProfilesList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> List of configured Media Profiles (<emphasis role="italic">configuredProfilesList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Set <emphasis role="italic">configuredProfilesListForVSC1</emphasis> := empty.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperFindGuaranteedProfiles4.2">
            <para>
              If number of items in <emphasis role="italic">configuredProfilesListForVSC1</emphasis> is equal to <emphasis role="italic">info</emphasis>.Total, skip other steps of procedure.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperFindGuaranteedProfiles4.3">
            <para>
              ONVIF Client invokes <emphasis role="bold">CreateProfile</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Name := "testMedia"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration list - skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              DUT responds with <emphasis role="bold">CreateProfileResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">clearProfileToken1</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperFindGuaranteedProfiles4.6">
            <para>
              ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">clearProfileToken1</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">videoSourceConfigurationList1</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">videoSourceConfigurationList1</emphasis> does not contain item with @token = <emphasis role="italic">videoSourceConfig</emphasis>.@token, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">clearProfileToken1</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Name skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Type := VideoSource
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Token := <emphasis role="italic">videoSourceConfig</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">clearProfileToken1</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with compatible video encoder configurations in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">videoEncoderConfList1</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">videoEncoderConfList1</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">videoEncoderConfList1</emphasis> contains only items that were used in Media Profiles from <emphasis role="italic">configuredProfilesList</emphasis> list, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperFindGuaranteedProfiles4.14">
            <para>
              For each Video Encoder Configuration <emphasis role="italic">videoEncoderConf1</emphasis> from <emphasis role="italic">videoEncoderConfList1</emphasis>, which was not used in Media Profiles from <emphasis role="italic">configuredProfilesList</emphasis> list repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken := <emphasis role="italic">videoEncoderConf1</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">clearProfileToken1</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Options list =: <emphasis role="italic">optionsList1</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    For each Video Encoder Options <emphasis role="italic">vecOptions1</emphasis> in <emphasis role="italic">optionsList1</emphasis> repeat the following steps:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          If <emphasis role="italic">info</emphasis>.Codec list contains no items with Encoding = <emphasis role="italic">vecOptions1</emphasis>.Encoding or
                          if <emphasis role="italic">info</emphasis>.Codec list contains an item with Encoding = <emphasis role="italic">vecOptions1</emphasis>.Encoding and
                          number of Media Profiles with Configurations.VideoEncoder.Encoding = <emphasis role="italic">vecOptions1</emphasis>.Encoding in <emphasis role="italic">configuredProfilesListForVSC1</emphasis> is less
                          then <emphasis role="italic">info</emphasis>.Codec.Number for this <emphasis role="italic">vecOptions1</emphasis>.Encoding:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">options1</emphasis> := <emphasis role="italic">vecOptions1</emphasis>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">videoEncoderConfToAdd1</emphasis> := <emphasis role="italic">videoEncoderConf1</emphasis>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Go to step <xref linkend="Annex_HelperFindGuaranteedProfiles4.16"/>.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Go to the next Video Encoder Configuration for the step <xref linkend="Annex_HelperFindGuaranteedProfiles4.14"/>.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperFindGuaranteedProfiles4.16">
            <para>
              ONVIF Client invokes <emphasis role="bold">SetVideoEncoderConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration.@token := <emphasis role="italic">videoEncoderConfToAdd1</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Name := <emphasis role="italic">videoEncoderConfToAdd1</emphasis>.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.@GovLength skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.@Profile skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Encoding := <emphasis role="italic">options1</emphasis>.Encoding
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Resolution := <emphasis role="italic">options1</emphasis>.ResolutionsAvailable[0]
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.RateControl skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast := <emphasis role="italic">videoEncoderConfToAdd1</emphasis>.Multicast
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Quality := <emphasis role="italic">options1</emphasis>.QualityRange.Min
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              DUT responds with <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">clearProfileToken1</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Name skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Type := VideoEncoder
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Token := <emphasis role="italic">videoEncoderConfToAdd</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              Add Media Profile with @token = <emphasis role="italic">clearProfileToken1</emphasis> to <emphasis role="italic">configuredProfilesListForVSC</emphasis> list.
            </para>
          </listitem>
          <listitem>
            <para>
              Add Media Profile with @token = <emphasis role="italic">clearProfileToken1</emphasis> to <emphasis role="italic">configuredProfilesList</emphasis> list.
            </para>
          </listitem>
          <listitem>
            <para>
              Go to step <xref linkend="Annex_HelperFindGuaranteedProfiles4.2"/>.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreateProfileResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.55-->
    <section xml:id="Annex_HelperStreamingRTPUnicastUDPInstances" xreflabel="Annex A.53">
      <title>Concurrent Video Streaming over RTP-Unicast/UDP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperStreamingRTPUnicastUDPInstances
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify concurent video streaming over RTP-Unicast/UDP for provided list of media profiles.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> List of media profiles (<emphasis role="italic">configuredProfilesList</emphasis>). Expected media stream encoding (<emphasis role="italic">encoding</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperStreamingRTPUnicastUDPInstances.1">
            <para>
              For each Media Profile <emphasis role="italic">profile1</emphasis> from <emphasis role="italic">configuredProfilesList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client retrieves a stream uri for Media Profile for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperGetStreamUri"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          in RtspUnicast - Transport protocol
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          in <emphasis role="italic">profile1</emphasis>.@token - Media profile token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          out <emphasis role="italic">streamUri1</emphasis> - Stream URI
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request to <emphasis role="italic">streamUri1</emphasis> address.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Response header =: <emphasis role="italic">responseHeader</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          SDP information =: <emphasis role="italic">sdp</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          in <emphasis role="italic">sdp</emphasis> - SDP information
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details), with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Transport := RTP/AVP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Transport
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Session =: <emphasis role="italic">session</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Session := <emphasis role="italic">session</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Session
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          RTP-Info
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If DUT does not send <emphasis role="italic">profile1</emphasis>.Configurations.VideoEncoder.Encoding RTP media stream to ONVIF Client over UDP, FAIL the test and skip other steps.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each media stream <emphasis role="italic">mediaStream</emphasis> which was invoked at step <xref linkend="Annex_HelperStreamingRTPUnicastUDPInstances.1"/> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request to uri address, which corresponds to aggregate control of <emphasis role="italic">mediaStream</emphasis>, with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Session := session which corresponds to <emphasis role="italic">mediaStream</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Session
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
    </section>
    <!--A.56-->
    <section xml:id="Annex_HelperNumberOfInstansesForEncoding" xreflabel="Annex A.54">
      <title>Concurrent Video Streaming over RTP-Unicast/UDP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperNumberOfInstansesForEncoding
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to culculate number of instances for specified encoding.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Media stream encoding (<emphasis role="italic">encoding</emphasis>). Information about number of instances for Video Source Configuration (<emphasis role="italic">info</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Number of instances specified encoding (<emphasis role="italic">encodingInstances</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              If <emphasis role="italic">info</emphasis> contains Codec.Encoding = <emphasis role="italic">encoding</emphasis>:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    Set <emphasis role="italic">encodingInstances</emphasis> := <emphasis role="italic">info</emphasis>.Codec[Encoding = <emphasis role="italic">encoding</emphasis>].Number.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Skip other steps in procedure.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">encodingInstances</emphasis> := <emphasis role="italic">info</emphasis>.Total.
            </para>
          </listitem>
        </orderedlist>
      </para>
    </section>
    <!--A.57-->
    <section xml:id="Annex_HelperFindGuaranteedProfiles1" xreflabel="Annex A.55">
      <title>Create New Media Profiles to Get Guaranteed Number of Media Profiles for Video Source Configuration for Specified Encoding</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperFindGuaranteedProfiles1
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure, which tries to create new Media Profiles to reach number of guaranteed encoder instances without changing already configured profiles for specified encoding.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is supported by the DUT. Profile T is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Information about guaranteed encoder instances (<emphasis role="italic">info</emphasis>).
        Video Source Configuration (<emphasis role="italic">videoSourceConfig</emphasis>).
        List of configured media profiles (<emphasis role="italic">configuredProfilesList</emphasis>). Encoding (<emphasis role="italic">encoding</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> List of configured Media Profiles (<emphasis role="italic">configuredProfilesList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Set <emphasis role="italic">configuredProfilesListForVSC1</emphasis> := empty.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperFindGuaranteedProfiles1.2">
            <para>
              If number of items in <emphasis role="italic">configuredProfilesListForVSC1</emphasis> is equal to limitation for H.264 encoding from <emphasis role="italic">info</emphasis> which calculates by following the procedure mentioned in <xref linkend="Annex_HelperNumberOfInstansesForEncoding"/>, skip other steps of procedure.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperFindGuaranteedProfiles1.3">
            <para>
              ONVIF Client invokes <emphasis role="bold">CreateProfile</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Name := "testMedia"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration list - skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              DUT responds with <emphasis role="bold">CreateProfileResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">clearProfileToken1</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperFindGuaranteedProfiles1.6">
            <para>
              ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">clearProfileToken1</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">videoSourceConfigurationList1</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">videoSourceConfigurationList1</emphasis> does not contain item with @token = <emphasis role="italic">videoSourceConfig</emphasis>.@token, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">clearProfileToken1</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Name skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Type := VideoSource
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Token := <emphasis role="italic">videoSourceConfig</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">clearProfileToken1</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with compatible video encoder configurations in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">videoEncoderConfList1</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">videoEncoderConfList1</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">videoEncoderConfList1</emphasis> contains only items that were used in Media Profiles from <emphasis role="italic">configuredProfilesList</emphasis> list, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperFindGuaranteedProfiles1.14">
            <para>
              For each Video Encoder Configuration <emphasis role="italic">videoEncoderConf1</emphasis> from <emphasis role="italic">videoEncoderConfList1</emphasis>, which was not used in Media Profiles from <emphasis role="italic">configuredProfilesList</emphasis> list repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken := <emphasis role="italic">videoEncoderConf1</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">clearProfileToken1</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Options list =: <emphasis role="italic">optionsList1</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    For each Video Encoder Options <emphasis role="italic">vecOptions1</emphasis> in <emphasis role="italic">optionsList1</emphasis> repeat the following steps:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          If <emphasis role="italic">vecOptions1</emphasis>.Encoding = <emphasis role="italic">encoding</emphasis>:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">options1</emphasis> := <emphasis role="italic">vecOptions1</emphasis>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">videoEncoderConfToAdd1</emphasis> := <emphasis role="italic">videoEncoderConf1</emphasis>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Go to step <xref linkend="Annex_HelperFindGuaranteedProfiles1.16"/>.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Go to the next Video Encoder Configuration for the step <xref linkend="Annex_HelperFindGuaranteedProfiles1.14"/>.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperFindGuaranteedProfiles1.16">
            <para>
              ONVIF Client invokes <emphasis role="bold">SetVideoEncoderConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration.@token := <emphasis role="italic">videoEncoderConfToAdd1</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Name := <emphasis role="italic">videoEncoderConfToAdd1</emphasis>.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.@GovLength skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.@Profile skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Encoding := <emphasis role="italic">options1</emphasis>.Encoding
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Resolution := <emphasis role="italic">options1</emphasis>.ResolutionsAvailable[0]
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.RateControl skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Multicast := <emphasis role="italic">videoEncoderConfToAdd1</emphasis>.Multicast
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Quality := <emphasis role="italic">options1</emphasis>.QualityRange.Min
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              DUT responds with <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">clearProfileToken1</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Name skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Type := VideoEncoder
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Token := <emphasis role="italic">videoEncoderConfToAdd</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              Add Media Profile with @token = <emphasis role="italic">clearProfileToken1</emphasis> to <emphasis role="italic">configuredProfilesListForVSC</emphasis> list.
            </para>
          </listitem>
          <listitem>
            <para>
              Add Media Profile with @token = <emphasis role="italic">clearProfileToken1</emphasis> to <emphasis role="italic">configuredProfilesList</emphasis> list.
            </para>
          </listitem>
          <listitem>
            <para>
              Go to step <xref linkend="Annex_HelperFindGuaranteedProfiles1.2"/>.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreateProfileResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.58-->
    <section xml:id="Annex_HelperDetermineRSAKeyLength" xreflabel="Annex A.56">
      <title>Determine RSA key length</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDetermineRSAKeyLength
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to determine the RSA key length to use during testing.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Security Configuration Service is received from the DUT. On-board RSA key pair generation is supported by the DUT as indicated by the RSAKeyPairGeneration capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The smallest supported RSA key length (<emphasis role="italic">keyLength</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by the following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client loops through the supported Key length list (<emphasis role="italic">cap</emphasis>.RSAKeyLengths) and selects the smallest supported key length (<emphasis role="italic">keyLength</emphasis>).
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              No supported key length was found at step 2.
            </para>
          </listitem>

        </itemizedlist>
      </para>
    </section>
    <!--A.59-->
    <section xml:id="Annex_HelperGetWebSocketURI" xreflabel="Annex A.57">
      <title>Get WebSocket URI</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetWebSocketURI
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get WebSocket URI.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> WebSocket is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> WebSocket URI <emphasis role="italic">uri</emphasis>.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client retrieves Media2 Service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">cap</emphasis> - Media2 Service capabilities
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">uri</emphasis> := <emphasis role="italic">cap</emphasis>.StreamingCapabilities.RTSPWebSocketUri
            </para>
          </listitem>
          <listitem>
            <para>
              If hierarchical component (hier_part in [rfc2396]) of <emphasis role="italic">uri</emphasis> is absolute path construction (abs_path in [rfc2396]):
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="1.5em"?>
                <listitem>
                  <para>
                    ONVIF Client confugures WebSocket URI (<emphasis role="italic">uri</emphasis>) with host and port based on <emphasis role="italic">uri</emphasis>, URI of the DUT, and HTTP/HTTPS port of the DUT.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>


        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <!--A.60-->
    <section xml:id="Annex_HelperBackchannelStreamingByPOSTRTPUnicastRTSPHTTPTCP" xreflabel="Annex A.58">
      <title>Audio Backchannel by POST over RTP-Unicast/RTSP/HTTP/TCP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperBackchannelStreamingRTPUnicastRTSPHTTPTCP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify audio backchannel streaming over RTP-Unicast/RTSP/HTTP/TCP when streaming is sent by POST connection.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Audio Backchannel is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>). Expected audio stream encoding (<emphasis role="italic">encoding</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTP GET</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish DUT to ONVIF Client connection for RTP data transfer (<emphasis role="italic">connection1</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTP POST</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish ONVIF Client to DUT connection for RTSP control requests (<emphasis role="italic">connection2</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to <emphasis role="italic">streamUri</emphasis> address converted to rtsp address on <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters on <emphasis role="italic">connection1</emphasis>
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.A60.3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = audio and with a=sendonly and with rtpmap value corresponding to <emphasis role="italic">encoding</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP/TCP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client sends audio stream with <emphasis role="italic">encoding</emphasis> to DUT over <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client closes <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">HTTP 200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> and closes <emphasis role="italic">connection1</emphasis>.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis> and <emphasis role="bold">RTSP PLAY</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A60.3"/>.
      </para>
    </section>
    <!--A.61-->
    <section xml:id="Annex_HelperBackchannelStreamingByPOSTRTPUnicastRTSPHTTPSTCP" xreflabel="Annex A.59">
      <title>Audio Backchannel by POST over RTP-Unicast/RTSP/HTTPS/TCP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperBackchannelStreamingRTPUnicastRTSPHTTPSTCP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify audio backchannel streaming over RTP-Unicast/RTSP/HTTPS/TCP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Audio Backchannel is supported by DUT. HTTPS is configured on the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>). Expected audio stream encoding (<emphasis role="italic">encoding</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTP GET</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish DUT to ONVIF Client secured connection for RTP data transfer (<emphasis role="italic">connection1</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">HTTP POST</emphasis> request to <emphasis role="italic">streamUri</emphasis> address to establish ONVIF Client to DUT secured connection for RTSP control requests (<emphasis role="italic">connection2</emphasis>).
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to <emphasis role="italic">streamUri</emphasis> address converted to rtsp address on <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters on <emphasis role="italic">connection1</emphasis>
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.A61.3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = audio and with a=sendonly and with rtpmap value corresponding to <emphasis role="italic">encoding</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to <emphasis role="italic">mediaType</emphasis> media type (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP/TCP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client sends audio stream with <emphasis role="italic">encoding</emphasis> to DUT over <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details) on <emphasis role="italic">connection2</emphasis>, with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client closes <emphasis role="italic">connection2</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">HTTP 200 OK</emphasis> message on <emphasis role="italic">connection1</emphasis> and closes <emphasis role="italic">connection1</emphasis>.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis> and <emphasis role="bold">RTSP PLAY</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">encoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.A61.3"/>.
      </para>
    </section>
    <!--A.62-->
    <section xml:id="Annex_HelperIPAddressTypeInRTSP" xreflabel="Annex A.60">
      <title>Check of IP address type in response to RTSP DESCRIBE</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperIPAddressTypeInRTSP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to check IP addresses types returned by DUT in response to RTSP DESCRIBE.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Header of response to DESCRIBE (<emphasis role="italic">responseHeader</emphasis>). SDP (<emphasis role="italic">sdp</emphasis>). Stream Uri (<emphasis role="italic">streamUri</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>

          <listitem>
            <para>
              Set <emphasis role="italic">ipType</emphasis> := <emphasis role="italic">streamUri</emphasis> IP type.
            </para>
          </listitem>
          <listitem>
            <para>
              For each <emphasis role="bold">Content-Base</emphasis> field in <emphasis role="italic">responseHeader</emphasis> (<emphasis role="italic">contentBase</emphasis>) that has absolute IP value:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If <emphasis role="italic">contentBase</emphasis> IP value does not correspond to <emphasis role="italic">ipType</emphasis>, FAIL the test and skip other steps (see [RFC2326] for details).
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each <emphasis role="bold">Content-Location</emphasis> field in <emphasis role="italic">responseHeader</emphasis> (<emphasis role="italic">contentLocation</emphasis>) that has absolute IP value:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If <emphasis role="italic">contentLocation</emphasis> IP value does not correspond to <emphasis role="italic">ipType</emphasis>, FAIL the test and skip other steps (see [RFC2326] for details).
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each <emphasis role="bold">"a=control"</emphasis> attribute in <emphasis role="italic">sdp</emphasis> (<emphasis role="italic">aControl</emphasis>) that has absolute IP value:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If <emphasis role="italic">aControl</emphasis> IP value does not correspond to <emphasis role="italic">ipType</emphasis>, FAIL the test and skip other steps (see [RFC2326] for details).
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">ipType</emphasis> = IPv4:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If <emphasis role="italic">sdp</emphasis> contains at least one origin field ("o=") with <emphasis role="bold">addrtype</emphasis> != "IP4", FAIL the test and skip other steps (see [RFC4566] for details).
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">sdp</emphasis> contains at least one origin field ("o=") with IP type of <emphasis role="bold">unicast-address</emphasis> sub-field != IPv4 type, FAIL the test and skip other steps (see [RFC4566] for details).
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">sdp</emphasis> contains at least one connection data field ("c=") with <emphasis role="bold">addrtype</emphasis> != "IP4", FAIL the test and skip other steps (see [RFC4566] for details).
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">sdp</emphasis> contains at least one connection data field ("c=")  with IP type of <emphasis role="bold">connection address</emphasis> sub-field != IPv4 type, FAIL the test and skip other steps (see [RFC4566] for details).
                  </para>
                </listitem>


              </orderedlist>
            </para>

          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">ipType</emphasis> = IPv6:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If <emphasis role="italic">sdp</emphasis> contains at least one origin field ("o=") with <emphasis role="bold">addrtype</emphasis> != "IP6", FAIL the test and skip other steps (see [RFC4566] for details).
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">sdp</emphasis> contains at least one origin field ("o=") with IP type of <emphasis role="bold">unicast-address</emphasis> sub-field != IPv6 type, FAIL the test and skip other steps (see [RFC4566] for details).
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">sdp</emphasis> contains at least one connection data field ("c=") with <emphasis role="bold">addrtype</emphasis> != "IP6", FAIL the test and skip other steps (see [RFC4566] for details).
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">sdp</emphasis> contains at least one connection data field ("c=")  with IP type of <emphasis role="bold">connection address</emphasis> sub-field != IPv6 type, FAIL the test and skip other steps (see [RFC4566] for details).
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.63-->
    <section xml:id="Annex_HelperSetVEC" xreflabel="Annex A.61">
      <title>Set Video Encoder Configuration for Streaming</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperSetVEC
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure video encoder configuration for streaming.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Media profile with video encoder configuration (<emphasis role="italic">profile</emphasis>), video encoder configuration options (<emphasis role="italic">vecOptions</emphasis>),
        Transport protocol (<emphasis role="italic">protocol</emphasis>), IP version (<emphasis role="italic">ipVersion</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">SetVideoEncoderConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration.@token := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Name := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.UseCount := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.UseCount
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.@GovLength := minimum item from <emphasis role="italic">vecOptions</emphasis>.@GovLengthRange list (or skipped if <emphasis role="italic">vecOptions</emphasis>.@GovLengthRange skipped)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.@Profile := highest value from <emphasis role="italic">vecOptions</emphasis>.@ProfilesSupported list as the order is High/Extended/Main/Baseline (or skipped if <emphasis role="italic">vecOptions</emphasis>.@ProfilesSupported skipped)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Encoding := <emphasis role="italic">vecOptions</emphasis>.Encoding
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Resolution := resolution closest to 640x480 from <emphasis role="italic">vecOptions</emphasis>.ResolutionsAvailable list
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">vecOptions</emphasis>.@FrameRatesSupported skipped and <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.RateControl skipped:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.RateControl skipped
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">vecOptions</emphasis>.@FrameRatesSupported or <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.RateControl is not skipped:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.RateControl.@ConstantBitRate := <emphasis role="italic">vecOptions</emphasis>.@ConstantBitRateSupported
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.RateControl.FrameRateLimit := value closest to 25 but greater than 1 from <emphasis role="italic">vecOptions</emphasis>.@FrameRatesSupported list
                          (or <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.RateControl.FrameRateLimit if <emphasis role="italic">vecOptions</emphasis>.@FrameRatesSupported skipped)
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.RateControl.BitrateLimit := min {max {<emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.RateControl.BitrateLimit, <emphasis role="italic">vecOptions</emphasis>.BitrateRange.Min}, <emphasis role="italic">vecOptions</emphasis>.BitrateRange.Max}
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>

                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> is not equal to RtspMulticast:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Multicast
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> = RtspMulticast and <emphasis role="italic">ipVersion</emphasis> = IPv4:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.Type := IPv4
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv4Address := multicast IPv4 address
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv6Address skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Port := port for multicast streaming
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.TTL := 1
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.AutoStart := false
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> = RtspMulticast and <emphasis role="italic">ipVersion</emphasis> = IPv6:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.Type := IPv6
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv4Address skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv6Address := multicast IPv6 address
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Port := port for multicast streaming
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.TTL := 1
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.AutoStart := false
                        </para>
                      </listitem>

                    </itemizedlist>
                  </para>
                </listitem>

                <listitem>
                  <para>
                    Configuration.Quality := <emphasis role="italic">vecOptions</emphasis>.QualityRange.Min
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <!--A.64-->
    <section xml:id="Annex_HelperSetAEC" xreflabel="Annex A.62">
      <title>Set Audio Encoder Configuration for Streaming</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperSetAEC
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure audio encoder configuration for streaming.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 is supported by the DUT. Media2 Audio is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Media profile with audio encoder configuration (<emphasis role="italic">profile</emphasis>), audio encoder configuration options (<emphasis role="italic">aecOptions</emphasis>),
        Transport protocol (<emphasis role="italic">protocol</emphasis>), IP version (<emphasis role="italic">ipVersion</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">SetAudioEncoderConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration.@token := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Name := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.UseCount := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.UseCount
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Encoding := <emphasis role="italic">aecOptions</emphasis>.Encoding
                  </para>
                </listitem>

                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> is not equal to RtspMulticast:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast := <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Multicast
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> = RtspMulticast and <emphasis role="italic">ipVersion</emphasis> = IPv4:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.Type := IPv4
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv4Address := multicast IPv4 address
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv6Address skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Port := port for multicast streaming
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.TTL := 1
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.AutoStart := false
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    if <emphasis role="italic">protocol</emphasis> = RtspMulticast and <emphasis role="italic">ipVersion</emphasis> = IPv6:
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.Type := IPv6
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv4Address skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Address.IPv6Address := multicast IPv6 address
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.Port := port for multicast streaming
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.TTL := 1
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration.Multicast.AutoStart := false
                        </para>
                      </listitem>

                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Bitrate := the nearest value to <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.Bitrate from <emphasis role="italic">aecOptions</emphasis>BitrateList.Items list
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.SampleRate := the nearest value to <emphasis role="italic">profile</emphasis>.Configurations.AudioEncoder.SampleRate from <emphasis role="italic">aecOptions</emphasis>SampleRateList.Items list
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>

          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">SetAudioEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetAudioEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <!--A.65-->
    <section xml:id="Annex_HelperDeviceConfigurationForBackchannelAndVideoAndAudioStreaming" xreflabel="Annex A.63">
      <title>Device Configuration for Audio Backchannel and Video and Audio Streaming</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeviceConfigurationForBackchannelAndVideoAndAudioStreaming
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media profile, Video Encoder Configuration, Audio Encoder Configuration, Audio Decoder Configuration, and get stream URI from the DUT for audio backchannel and video and audio streaming.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Video is supported by the DUT. Audio is supported by the DUT. Audio outputs is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Required audio decoder (<emphasis role="italic">requiredAudioDecoder</emphasis>), Transport protocol (<emphasis role="italic">protocol</emphasis>), IP version (<emphasis role="italic">ipVersion</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Stream Uri (<emphasis role="italic">streamUri</emphasis>). Media profile with required configurations (<emphasis role="italic">profile</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := All
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">profile</emphasis> = <emphasis role="italic">profileList</emphasis>[0].
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">confTypeList</emphasis> := (configurations that are contained in profile <emphasis role="italic">profile</emphasis>)
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client removes all configurations from the Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperRemoveConfigurationsFromMediaProfile"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">confTypeList</emphasis> - list of configuration type to remove from Media Profile
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">profile</emphasis> - Media Profile to update
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">audioOutputConfList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.Annex_HelperDeviceConfigurationForBackchannelAndVideoAndAudioStreaming.AddBackchanelConfigs" xreflabel="4.3">
            <para>
              For each Audio Output Configuration <emphasis role="italic">audioOutputConfiguration</emphasis> in <emphasis role="italic">audioOutputConfList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Name skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Type := AudioOutput
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Token := <emphasis role="italic">audioOutputConfiguration</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurations</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configurations list =: <emphasis role="italic">audioDecoderConfList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    For each Audio Decoder Configuration <emphasis role="italic">audioDecoderConfiguration</emphasis> in <emphasis role="italic">audioDecoderConfList</emphasis> repeat the following steps:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurationOptions</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ConfigurationToken := <emphasis role="italic">audioDecoderConfiguration</emphasis>.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationOptionsResponse</emphasis> message with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Options list =: <emphasis role="italic">adcOptionsList</emphasis>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem xml:id="A.65_AddAACAudioDecoder" xreflabel="8.5.3">
                        <para>
                          If <emphasis role="italic">requiredAudioDecoder</emphasis> = AAC:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                If <emphasis role="italic">adcOptionsList</emphasis> list contains item with Encoding = "MP4A-LATM" or "MPEG4-GENERIC":
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                                      <itemizedlist>
                                        <listitem>
                                          <para>
                                            ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Name skipped
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Configuration[0].Type := AudioDecoder
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Configuration[0].Token := <emphasis role="italic">audioDecoderConfiguration</emphasis>.@token
                                          </para>
                                        </listitem>
                                      </itemizedlist>
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Set <emphasis role="italic">requiredAudioDecoder</emphasis> := "MP4A-LATM" if <emphasis role="italic">adcOptionsList</emphasis> contains item with Encoding = "MP4A-LATM", otherwise "MPEG4-GENERIC".
                                    </para>
                                  </listitem>
                                </orderedlist>
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                      <listitem xml:id="A.65_AddG711AudioDecoder" xreflabel="8.5.4">
                        <para>
                          If <emphasis role="italic">requiredAudioDecoder</emphasis> = !AAC:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                If <emphasis role="italic">adcOptionsList</emphasis> list contains item with Encoding = <emphasis role="italic">requiredAudioDecoding</emphasis>:
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                                      <itemizedlist>
                                        <listitem>
                                          <para>
                                            ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Name skipped
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Configuration[0].Type := AudioDecoder
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Configuration[0].Token := <emphasis role="italic">audioDecoderConfiguration</emphasis>.@token
                                          </para>
                                        </listitem>
                                      </itemizedlist>
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                                    </para>
                                  </listitem>
                                </orderedlist>
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If Audio Decoder was added at step <xref linkend="A.65_AddAACAudioDecoder"/> or at step <xref linkend="A.65_AddG711AudioDecoder"/>:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem xml:id="A.65_ConfigureProfileWithVideoAndAudio" xreflabel="8.5.5.1">
                              <para>
                                ONVIF Client tries to add VideoSource Configuration, VideoEncoder Configuration, AudioSource Configuration and AudioEncoder Configuration to the Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperAddVideoAndAudioConfigurationsToMediaProfile"/> with the following input and output parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">profile</emphasis> - Media profile
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      out (optional) <emphasis role="italic">vecOptions</emphasis> - Video Encoder Configuration Options for the Media Profile
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      out (optional) <emphasis role="italic">aecOptions</emphasis> - Audio Encoder Configuration Options for the Media Profile
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                If  <emphasis role="italic">profile</emphasis> was configured with Video and Audio configurations by step <xref linkend="A.65_ConfigureProfileWithVideoAndAudio"/>, go to step <xref linkend="A.65_SetAOC"/>.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      ProfileToken = <emphasis role="italic">profile</emphasis>.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration[0].Type = AudioDecoder
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration[0].Token skipped
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                              </para>
                            </listitem>

                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profile</emphasis> was not configured with AudioOutput, AudioDecoder, VideoSource, VideoEncoder, AudioSource, and AudioEncoder  at step <xref linkend="tc.Annex_HelperDeviceConfigurationForBackchannelAndVideoAndAudioStreaming.AddBackchanelConfigs"/>, FAIL the test, restore DUT settings, and skip other steps.
            </para>
          </listitem>
          <listitem xml:id="A.65_SetAOC" xreflabel="10">
            <para>
              ONVIF Client invokes <emphasis role="bold">SetAudioOutputConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configuration.@token := <emphasis role="italic">profile</emphasis>.Configurations.AudioOutput.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.Name := <emphasis role="italic">profile</emphasis>.Configurations.AudioOutput.Name
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.UseCount := <emphasis role="italic">profile</emphasis>.Configurations.AudioOutput.UseCount
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.OutputToken := <emphasis role="italic">profile</emphasis>.Configurations.AudioOutput.OutputToken
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.SendPrimacy skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration.OutputLevel := <emphasis role="italic">profile</emphasis>.Configurations.AudioOutput.OutputLevel
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              DUT responds with <emphasis role="bold">SetAudioOutputConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem xml:id="A.65_GetStreamURI" xreflabel="11">
            <para>
              ONVIF Client retrieves a stream uri for Media Profile for required transport protocol by following the procedure mentioned in <xref linkend="Annex_HelperGetStreamUri"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">protocol</emphasis> - Transport protocol
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">ipVersion</emphasis> - IP Type
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">profile</emphasis>.@token - Media profile token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">uri</emphasis> - Stream URI
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetAudioOutputConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioEncoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetAudioEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
      </para>
    </section>
    <!--A.66-->
    <section xml:id="Annex_HelperAddVideoAndAudioConfigurationsToMediaProfile" xreflabel="Annex A.64">
      <title>Media2 Service – Adding VideoSource, VideoEncoder, AudioSource and AudioEncoder configurations to Media Profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperAddVideoAndAudioConfigurationsToMediaProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to add VideoSource Configuration, VideoEncoder Configuration, AudioSource Configuration and AudioEncoder Configuration to the Media Profile.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Video is supported by DUT. Audio is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Video Encoder Configuration Options for the Media Profile (<emphasis role="italic">vecOptions</emphasis>) (optional, returned in case profile was configured with video and audio). Audio Encoder Configuration Options for the Media Profile (<emphasis role="italic">aecOptions</emphasis>) (optional, returned in case profile was configured with video and audio).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">videoSourceConfList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each Video Source Configuration <emphasis role="italic">videoSourceConfiguration</emphasis> in <emphasis role="italic">videoSourceConfList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Name skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Type := VideoSource
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Token := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ConfigurationToken skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Configurations list =: <emphasis role="italic">videoEncoderConfList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    For each Video Encoder Configuration <emphasis role="italic">videoEncoderConfiguration</emphasis> in <emphasis role="italic">videoEncoderConfList</emphasis> repeat the following steps:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ConfigurationToken := <emphasis role="italic">videoEncoderConfiguration</emphasis>.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Options list =: <emphasis role="italic">optionsList</emphasis>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">optionsList</emphasis> list contains item with Encoding = H264 or H265:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Name skipped
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration[0].Type := VideoEncoder
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration[0].Token := <emphasis role="italic">videoEncoderConfiguration</emphasis>.@token
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">vecOptions</emphasis> := item with Encoding = H264 from <emphasis role="italic">optionsList</emphasis> list if present, otherwivce item with Encoding = H265.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client sets video encoder configuration by following the procedure mentioned in <xref linkend="Annex_HelperSetVEC"/> with the following input and output parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">profile</emphasis> - Media profile
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">vecOptions</emphasis> - video encoder configuration options
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">protocol</emphasis> - Transport protocol
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">ipVersion</emphasis> - IP Type
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>

                            <listitem>
                              <para>
                                ONVIF Client tries to add AudioSource Configuration and AudioEncoder Configuration to the Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperAddAudioConfigurationsToMediaProfile"/> with the following input and output parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">profile</emphasis> - Media profile
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      out (optional) <emphasis role="italic">aecOptions</emphasis> - Audio Encoder Configuration Options for the Media Profile
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                If <emphasis role="italic">aecOptions</emphasis> != NULL
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      ONVIF Client sets audio encoder configuration by following the procedure mentioned in <xref linkend="Annex_HelperSetAEC"/> with the following input and output parameters
                                      <itemizedlist>
                                        <listitem>
                                          <para>
                                            in <emphasis role="italic">profile</emphasis> - Media profile
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            in <emphasis role="italic">aecOptions</emphasis> - audio encoder configuration options
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            in <emphasis role="italic">protocol</emphasis> - Transport protocol
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            in <emphasis role="italic">ipVersion</emphasis> - IP Type
                                          </para>
                                        </listitem>
                                      </itemizedlist>
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Skip other steps.
                                    </para>
                                  </listitem>
                                </orderedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      ProfileToken = <emphasis role="italic">profile</emphasis>.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration[0].Type = VideoEncoder
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration[0].Token skipped
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          ProfileToken = <emphasis role="italic">profile</emphasis>.@token
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Type = VideoSource
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Configuration[0].Token skipped
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>

      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>

          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioEncoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.67-->
    <section xml:id="Annex_HelperAddAudioConfigurationsToMediaProfile" xreflabel="Annex A.65">
      <title>Media2 Service – Adding AudioSource and AudioEncoder to Media Profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperAddAudioConfigurationsToMediaProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to add AudioSource Configuration and AudioEncoder Configuration to the Media Profile.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Audio is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Video Encoder Configuration Options for the Media Profile (<emphasis role="italic">vecOptions</emphasis>) (optional, returned in case profile was configured with audio).
        Audio Encoder Configuration Options for the Media Profile (<emphasis role="italic">aecOptions</emphasis>) (optional, returned in case profile was configured with audio).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client tries to add AudioSource Configuration and AudioEncoder Configuration with required audio encoding support to the Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperAddAudioConfigurationsWithSpecificEncoderToMediaProfile"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in PCMU - required audio encoding
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">profile</emphasis> - Media profile
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out (optional) <emphasis role="italic">aecOptions</emphasis> - Audio Encoder Configuration Options for the Media Profile
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">aecOptions</emphasis> != NULL, skip other steps in procedure..
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client tries to add AudioSource Configuration and AudioEncoder Configuration with required audio encoding support to the Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperAddAudioConfigurationsWithSpecificEncoderToMediaProfile"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in AAC - required audio encoding
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">profile</emphasis> - Media profile
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out (optional) <emphasis role="italic">aecOptions</emphasis> - Audio Encoder Configuration Options for the Media Profile
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.68-->
    <section xml:id="Annex_HelperBackchannelAndMediaStreamingRTPUnicastUDP" xreflabel="Annex A.66">
      <title>Audio Backchannel and Media Streaming over RTP-Unicast/UDP</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperBackchannelAndMediaStreamingRTPUnicastUDP
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to verify audio backchannel, video, and audio streaming over RTP-Unicast/UDP.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Audio Backchannel is supported by DUT. Audio is supported by DUT. Video is supported by DUT. Real-time streaming is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Uri for media streaming (<emphasis role="italic">streamUri</emphasis>). Audio backchannel stream encoding (<emphasis role="italic">audioBackchannelEncoding</emphasis>). Expected video stream encoding (<emphasis role="italic">videoEncoding</emphasis>).
        Expected audio stream encoding (<emphasis role="italic">audioEncoding</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP DESCRIBE</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to <emphasis role="italic">streamUri</emphasis> address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Response header =: <emphasis role="italic">responseHeader</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SDP information =: <emphasis role="italic">sdp</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="tc.Annex_HelperBackchannelAndMediaStreamingRTPUnicastUDP.CheckSDPBackchannel" xreflabel="3">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = audio and with a=sendonly and with rtpmap value corresponding to <emphasis role="italic">audioBackchannelEncoding</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = video with rtpmap value corresponding to <emphasis role="italic">videoEncoding</emphasis> and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem xml:id="tc.Annex_HelperBackchannelAndMediaStreamingRTPUnicastUDP.CheckSDPAudio" xreflabel="5">
            <para>
              If <emphasis role="italic">sdp</emphasis> does not contain Media Type = audio with rtpmap value corresponding to <emphasis role="italic">audioEncoding</emphasis> and without session attribute "sendonly" (a=sendonly), FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client checks types of IP addresses returned in response to DESCRIBE by following the procedure mentioned in <xref linkend="Annex_HelperIPAddressTypeInRTSP"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">responseHeader</emphasis> - header of response to DESCRIBE
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">sdp</emphasis> - SDP information
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">streamUri</emphasis> - Uri for media streaming
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to audio backchannel media type (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP;unicast;client_port=<emphasis role="italic">port1</emphasis>-<emphasis role="italic">port2</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to video media type (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP;unicast;client_port=<emphasis role="italic">port3</emphasis>-<emphasis role="italic">port4</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Session =: <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP SETUP</emphasis> request to uri address, which corresponds to audio media type (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Transport := RTP/AVP;unicast;client_port=<emphasis role="italic">port5</emphasis>-<emphasis role="italic">port6</emphasis>
                  </para>
                </listitem>


                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Transport
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Session =: <emphasis role="italic">session</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP PLAY</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RTP-Info
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client sends RTP Unicast audio stream with <emphasis role="italic">audioBackchannelEncoding</emphasis> to DUT over UDP.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send <emphasis role="italic">videoEncoding</emphasis> RTP media stream to ONVIF Client over UDP, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send <emphasis role="italic">audioEncoding</emphasis> RTP media stream to ONVIF Client over UDP, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If DUT does not send valid RTCP packets, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">RTSP TEARDOWN</emphasis> request with <emphasis role="bold">"Require: www.onvif.org/ver20/backchannel"</emphasis> tag to uri address, which corresponds to aggregate control (see [RFC2326] for details), with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session := <emphasis role="italic">session</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">200 OK</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Session
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RTSP 200 OK</emphasis> response for <emphasis role="bold">RTSP DESCRIBE</emphasis>, <emphasis role="bold">RTSP SETUP</emphasis>, <emphasis role="bold">RTSP PLAY</emphasis> and <emphasis role="bold">RTSP TEARDOWN</emphasis> requests.
            </para>
          </listitem>
          <listitem>
            <para>
              RTSP Session is terminated by DUT during media streaming.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_HelperInvalidRTPHeader"/> for invalid RTP header definition.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client checks authentication type for all RTSP requests by following the procedure mentioned in <xref linkend="Annex_HelperRTSPAuthentication"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">audioBackchannelEncoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.Annex_HelperBackchannelAndMediaStreamingRTPUnicastUDP.CheckSDPBackchannel"/>.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">audioEncoding</emphasis> = MP4A-LATM, then rtpmap value may be equal either MP4A-LATM or MPEG4-GENERIC at step <xref linkend="tc.Annex_HelperBackchannelAndMediaStreamingRTPUnicastUDP.CheckSDPAudio"/>.
      </para>

    </section>
  </appendix>
</book>