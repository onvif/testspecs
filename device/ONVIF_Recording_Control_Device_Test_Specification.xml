<?xml version="1.0" encoding="UTF-8"?>
<!--For PDF version (standard)-->
<!-- <?xml-stylesheet href="docbook/xsl/fo/docbook.xsl" type="text/xsl" ?>-->
<!--For PDF version-->
<!-- <?xml-stylesheet href="ONVIF-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<!--For online version-->
<?xml-stylesheet href="docbook-css/docbook.xsl" type="text/xsl" ?>
<!--For PDF version - New ONVIF-->
<!--<?xml-stylesheet href="../ONVIFNew-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<book xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xhtml="http://www.w3.org/1999/xhtml"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:xml="http://www.w3.org/XML/1998/namespace"
      xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
      version="0.1"
      xml:id="ONVIF_Recording_Control_Device_TS">
  <info>
    <orgname>
      <phrase>
        <trademark class="registered">ONVIF</trademark>
      </phrase>
    </orgname>
    <title>Recording Control Device Test Specification</title>
    <subtitle>Version 21.06</subtitle>
    <date>June 2021</date>
    <copyright>
      <year>2021</year>
      <holder>ONVIF, Inc. All rights reserved.</holder>
    </copyright>
    <address>
      <uri>www.onvif.org</uri>
    </address>
    <legalnotice role="notices">
      <para>
        Recipients of this document may copy, distribute, publish, or display this
        document so long as this copyright notice, license and disclaimer are retained with
        all copies of the document. No license is granted to modify this document.
      </para>
      <para>
        THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR
        AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
        NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
        NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY
        PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS,
        COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
      </para>
      <para>
        IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR
        ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES,
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR
        NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE
        POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT. THE
        FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR
        LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE
        AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE
        CORPORATION.
      </para>
    </legalnotice>
    <revhistory>
      <revision>
        <revnumber>12.12</revnumber>
        <date>Dec 20, 2012</date>
        <revdescription>
          <para>
            First issue of Replay Control Test Specification
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>13.06</revnumber>
        <date>Jun, 2013</date>
        <revdescription>
          <para>
            The following test cases were updated or added:
          </para>
          <para>
            RECORDING JOB CONFIGURATION - DIFFERENT PRIORITIES (ON MEDIA PROFILE)
          </para>
          <para>
            RECORDING JOB CONFIGURATION - DIFFERENT PRIORITIES (ON RECEIVER)
          </para>
          <para>
            SET RECORDINGS CONFIGURATION (MAXIMUM LENGTH OF RECORDING SOURCE INFORMATION)
          </para>
          <para>
            DYNAMIC RECORDINGS CONFIGURATION (MAXIMUM LENGTH OF RECORDING SOURCE INFORMATION)
          </para>
          <para>
            RECORDING CONTROL – JOB STATE EVENT
          </para>
          <para>
            RECORDING CONTROL – JOB STATE CHANGE EVENT
          </para>
          <para>
            RECORDING CONTROL – RECORDING CONFIGURATION EVENT
          </para>
          <para>
            RECORDING CONTROL – TRACK CONFIGURATION EVENT
          </para>
          <para>
            RECORDING CONTROL – RECORDING JOB CONFIGURATION EVENT
          </para>
          <para>
            RECORDING CONTROL – CREATE RECORDING EVENT
          </para>
          <para>
            RECORDING CONTROL – DELETE RECORDING EVENT
          </para>
          <para>
            RECORDING CONTROL – CREATE TRACK EVENT
          </para>
          <para>
            RECORDING CONTROL – DELETE TRACK EVENT
          </para>
          <para>
            RECORDING CONTROL – CREATE TRACK EVENT (CREATE RECORDING)
          </para>
          <para>
            RECORDING CONTROL – DELETE TRACK EVENT (DELETE RECORDING)
          </para>
          <para>
            RECORDING CONTROL – CREATE TRACK EVENT (CREATE TRACK)
          </para>
          <para>
            RECORDING CONTROL – DELETE TRACK EVENT (DELETE TRACK)
          </para>
          <para>
            RECORDING CONTROL – DELETE TRACK DATA EVENT
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>13.12</revnumber>
        <date>Dec, 2013</date>
        <revdescription>
          <para>
            The following test cases were updated or added:
          </para>
          <para>
            RECORDING-2-1-1 START RECORDING USING A MEDIA PROFILE was replaced with RECORDING-2-1-10 START RECORDING ON MEDIA PROFILE
          </para>
          <para>
            RECORDING-2-1-2 START RECORDING ON RECEIVER was replaced with RECORDING-2-1-11 START RECORDING ON RECEIVER
          </para>
          <para>
            RECORDING-2-1-3 STOP RECORDING USING A MEDIA PROFILE - PUT JOB IN IDLE STATE was replaced with RECORDING-2-1-12 STOP RECORDING ON MEDIA PROFILE - PUT JOB IN IDLE STATE
          </para>
          <para>
            RECORDING-2-1-4 STOP RECORDING ON RECEIVER - PUT JOB IN IDLE STATE was replaced with RECORDING-2-1-13 STOP RECORDING ON RECEIVER - PUT JOB IN IDLE STATE
          </para>
          <para>
            RECORDING-2-1-5 STOP RECORDING ON RECEIVER - NEVER CONNECTED MODE was replaced with RECORDING-2-1-14 STOP RECORDING ON RECEIVER - NEVER CONNECTED MODE
          </para>
          <para>
            RECORDING-2-1-6 STOP RECORDING USING A MEDIA PROFILE - DELETE JOB was replaced with RECORDING-2-1-15 STOP RECORDING ON MEDIA PROFILE - DELETE JOB
          </para>
          <para>
            RECORDING-2-1-7 STOP RECORDING ON RECEIVER - DELETE JOB was replaced with RECORDING-2-1-16 STOP RECORDING ON RECEIVER - DELETE JOB
          </para>
          <para>
            RECORDING-2-1-8 MODIFY MEDIA ATTRIBUTE WHILE RECORDING - MEDIA PROFILE was replaced with RECORDING-2-1-17 MODIFY MEDIA ATTRIBUTE WHILE RECORDING - MEDIA PROFILE
          </para>
          <para>
            RECORDING-2-1-9 MODIFY MEDIA ATTRIBUTE WHILE RECORDING - RECEIVER was replaced with RECORDING-2-1-18 MODIFY MEDIA ATTRIBUTE WHILE RECORDING - RECEIVER
          </para>
          <para>
            RECORDING-3-1-2 DYNAMIC TRACKS CONFIGURATION was replaced with RECORDING-3-1-7 DYNAMIC TRACKS CONFIGURATION
          </para>
          <para>
            RECORDING-3-1-5 RECORDING JOB CONFIGURATION - DIFFERENT PRIORITIES (ON MEDIA PROFILE) was replaced with RECORDING-3-1-8 RECORDING JOB CONFIGURATION - DIFFERENT PRIORITIES (ON MEDIA PROFILE)
          </para>
          <para>
            RECORDING-3-1-6 RECORDING JOB CONFIGURATION - DIFFERENT PRIORITIES (ON RECEIVER) was replaced with RECORDING-3-1-9 RECORDING JOB CONFIGURATION - DIFFERENT PRIORITIES (ON RECEIVER)
          </para>
          <para>
            RECORDING-4-1-6 GET RECORDING JOB CONFIGURATION WITH INVALID TOKEN was replaced with RECORDING-4-1-13 GET RECORDING JOB CONFIGURATION WITH INVALID TOKEN
          </para>
          <para>
            RECORDING-4-1-8 GET RECORDING JOB STATE WITH INVALID TOKEN was replaced with RECORDING-4-1-14 GET RECORDING JOB STATE WITH INVALID TOKEN
          </para>
          <para>
            RECORDING-5-1-1 RECORDING CONTROL – JOB STATE EVENT was replaced with RECORDING-5-1-18 RECORDING CONTROL – JOB STATE EVENT
          </para>
          <para>
            RECORDING-5-1-2 RECORDING CONTROL – JOB STATE CHANGE EVENT was replaced with RECORDING-5-1-19 RECORDING CONTROL – JOB STATE CHANGE EVENT
          </para>
          <para>
            RECORDING-5-1-5 RECORDING CONTROL – RECORDING JOB CONFIGURATION EVENT was replaced with RECORDING-5-1-20 RECORDING CONTROL – RECORDING JOB CONFIGURATION EVENT
          </para>
          <para>
            RECORDING-5-1-7 RECORDING CONTROL – DELETE RECORDING EVENT was replaced with RECORDING-5-1-17 RECORDING CONTROL – DELETE RECORDING EVENT
          </para>
          <para>
            RECORDING-5-1-12 RECORDING CONTROL – CREATE TRACK EVENT (CREATE TRACK) was replaced with RECORDING-5-1-15 RECORDING CONTROL – CREATE TRACK EVENT (CREATE TRACK)
          </para>
          <para>
            RECORDING-5-1-13 RECORDING CONTROL – DELETE TRACK EVENT (DELETE TRACK) was replaced with RECORDING-5-1-16 RECORDING CONTROL – DELETE TRACK EVENT (DELETE TRACK)
          </para>
          <para>
            The following annexes were updated or added:
          </para>
          <para>
            Annex A.6 was replaced with A.12 Selection or Creation of Recording for recording job creation
          </para>
          <para>
            Annex A.9 was replaced with A.13 Auto Creation of Receiver
          </para>
          <para>
            Annex A.14 Selection of Recording for track creation was added
          </para>
          <para>
            Annex A.15 Selection or Creation of Recording for recording job creation on a Media profile was added
          </para>
          <para>
            Annex A.5 was removed.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>14.06</revnumber>
        <date>Feb, 2014</date>
        <revdescription>
          <para>
            The following tests were updated with increasing of tests IDs:
          </para>
          <para>
            START RECORDING ON MEDIA PROFILE
          </para>
          <para>
            START RECORDING ON RECEIVER
          </para>
          <para>
            STOP RECORDING ON MEDIA PROFILE - PUT JOB IN IDLE STATE
          </para>
          <para>
            STOP RECORDING ON RECEIVER - PUT JOB IN IDLE STATE
          </para>
          <para>
            STOP RECORDING ON RECEIVER - NEVER CONNECTED MODE
          </para>
          <para>
            STOP RECORDING ON MEDIA PROFILE - DELETE JOB
          </para>
          <para>
            STOP RECORDING ON RECEIVER - DELETE JOB
          </para>
          <para>
            MODIFY MEDIA ATTRIBUTE WHILE RECORDING - MEDIA PROFILE
          </para>
          <para>
            MODIFY MEDIA ATTRIBUTE WHILE RECORDING – RECEIVER
          </para>
          <para>
            DYNAMIC RECORDINGS CONFIGURATION
          </para>
          <para>
            RECORDING JOB CONFIGURATION - DIFFERENT PRIORITIES (ON MEDIA PROFILE)
          </para>
          <para>
            RECORDING JOB CONFIGURATION - DIFFERENT PRIORITIES (ON RECEIVER)
          </para>
          <para>
            GET SERVICES AND GET RECORDING CONTROL SERVICE CAPABILITIES CONSISTENCY
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>14.12</revnumber>
        <date>Dec, 2014</date>
        <revdescription>
          <para>
            The following annexes were updated:
          </para>
          <para>
            A.16 <emphasis role="bold">PullMessages</emphasis> algorithm for check Recording Job State initializing
          </para>
          <para>
            The following tests were updated with increasing of tests IDs:
          </para>
          <para>
            START RECORDING ON MEDIA PROFILE
          </para>
          <para>
            STOP RECORDING ON MEDIA PROFILE - PUT JOB IN IDLE STATE
          </para>
          <para>
            STOP RECORDING ON MEDIA PROFILE - DELETE JOB
          </para>
          <para>
            MODIFY MEDIA ATTRIBUTE WHILE RECORDING - MEDIA PROFILE
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Mar, 2018</date>
        <revdescription>
          <para>
            The following test was removed according #1552:
          </para>
          <para>
            RECORDING-2-1-31 MODIFY MEDIA ATTRIBUTE WHILE RECORDING - MEDIA PROFILE
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>June, 2018</date>
        <revdescription>
          <para>
            Reformatting document using new template
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>Dec 18, 2019</date>
        <revdescription>
          <para>
            The following were updated in the scope of #1435:
          </para>
          <para>
            Reformatting document using new template and format.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>May 13, 2020</date>
        <revdescription>
           <para>Pre-Requisite of the following test cases updated with adding of Pull-Point Notification feature according to #1999:</para>
          <para>RECORDING-2-1-20 START RECORDING ON RECEIVER</para>
    <para>RECORDING-2-1-22 STOP RECORDING ON RECEIVER - PUT JOB IN IDLE STATE</para>
    <para>RECORDING-2-1-23 STOP RECORDING ON RECEIVER - NEVER CONNECTED MODE</para>
    <para>RECORDING-2-1-25 STOP RECORDING ON RECEIVER - DELETE JOB</para>
    <para>RECORDING-2-1-27 MODIFY MEDIA ATTRIBUTE WHILE RECORDING - RECEIVER</para>
    <para>RECORDING-2-1-28 START RECORDING ON MEDIA PROFILE</para>
    <para>RECORDING-2-1-29 STOP RECORDING ON MEDIA PROFILE - PUT JOB IN IDLE STATE</para>
    <para>RECORDING-2-1-30 STOP RECORDING ON MEDIA PROFILE - DELETE JOB</para>
    <para>RECORDING-5-1-3 RECORDING CONTROL – RECORDING CONFIGURATION EVENT</para>
    <para>RECORDING-5-1-4 RECORDING CONTROL – TRACK CONFIGURATION EVENT</para>
    <para>RECORDING-5-1-6 RECORDING CONTROL – CREATE RECORDING EVENT</para>   
    <para>RECORDING-5-1-10 RECORDING CONTROL – CREATE TRACK EVENT (CREATE RECORDING)</para>
    <para>RECORDING-5-1-11 RECORDING CONTROL – DELETE TRACK EVENT (DELETE RECORDING)</para>
    <para>RECORDING-5-1-14 RECORDING CONTROL – DELETE TRACK DATA EVENT</para>
    <para>RECORDING-5-1-15 RECORDING CONTROL – CREATE TRACK EVENT (CREATE TRACK)</para>
    <para>RECORDING-5-1-16 RECORDING CONTROL – DELETE TRACK EVENT (DELETE TRACK)</para>
    <para>RECORDING-5-1-17 RECORDING CONTROL – DELETE RECORDING EVENT</para>
    <para>RECORDING-5-1-18 RECORDING CONTROL – JOB STATE EVENT</para>
    <para>RECORDING-5-1-19 RECORDING CONTROL – JOB STATE CHANGE EVENT</para>
    <para>RECORDING-5-1-20 RECORDING CONTROL – RECORDING JOB CONFIGURATION EVENT</para>
        </revdescription>
      </revision>
    <revision>
        <revnumber>20.06</revnumber>
        <date>May 18, 2020</date>
        <revdescription>
           <para>Pre-Requisite of the following test cases updated with adding of Event Service according to #1999:</para>
           <para>RECORDING-5-1-8 RECORDING CONTROL – CREATE TRACK EVENT</para>
    <para>RECORDING-5-1-9 RECORDING CONTROL – DELETE TRACK EVENT</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.06</revnumber>
        <date>Apr 13, 2021</date>
        <revdescription>
           <para>The following test cases were updated according to #2147:</para>
          <para>RECORDING-5-1-18 RECORDING CONTROL – JOB STATE EVENT (step 17, step 26)</para>
           <para>RECORDING-5-1-19 RECORDING CONTROL – JOB STATE CHANGE EVENT (step 23, step 28)</para>          
   
        </revdescription>
      </revision>
    
    
    </revhistory>
  </info>
  <chapter xml:id="s.intro">
    <title>Introduction</title>
    <para>
      The goal of the ONVIF test specification set is to make it possible to realize fully interoperable IP physical security implementation from different vendors. The set of ONVIF test specification describes the test cases need to verify the [ONVIF DeviceIO Service Specs] and [ONVIF Conformance] requirements. It also describes the test framework, test setup, pre-requisites, test policies needed for the execution of the described test cases.
    </para>
    <para>
      This ONVIF Recording Control Test Specification acts as a supplementary document to the [ONVIF Network Interface Specs], illustrating test cases need to be executed and passed. Also, this specification acts as an input document to the development of test tool which will be used to test the ONVIF device implementation conformance towards ONVIF standard. This test tool is referred as ONVIF Client hereafter.
    </para>
    <section xml:id="s.intro.scope">
      <title>Scope</title>
      <para>
        This ONVIF Recording Control Test Specification defines and regulates the conformance testing procedure for the ONVIF conformant devices. Conformance testing is meant to be functional black-box testing. The objective of this specification is to provide the test cases to test individual requirements of ONVIF devices according to ONVIF core services which are defined in [ONVIF Network Interface Specs].
      </para>
      <para>
        The principal intended purposes are:
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>Provide self-assessment tool for implementations.</para>
          </listitem>
          <listitem>
            <para>
              Provide comprehensive test suite coverage for [ONVIF Network Interface Specs].
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        This specification does not address the following:
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Product use cases and non-functional (performance and regression) testing.
            </para>
          </listitem>
          <listitem>
            <para>
              SOAP Implementation Interoperability test i.e. Web Service Interoperability Basic Profile version 2.0 (WS-I BP 2.0).
            </para>
          </listitem>
          <listitem>
            <para>
              Network protocol implementation Conformance test for HTTP, HTTPS, RTP protocol.
            </para>
          </listitem>
          <listitem>
            <para>
              Wi-Fi Conformance test
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        The set of ONVIF Test Specification will not cover the complete set of requirements as defined in [ONVIF Network Interface Specs]; instead it would cover subset of it. The scope of this specification is to derive all the normative requirements of [ONVIF DeviceIO Service Specs] which are related to ONVIF Device IO Service and some of the optional requirements.
      </para>
      <para>
        This ONVIF Recording Control Test Specification covers ONVIF Recording Control service which is a functional block of [ONVIF Network Interface Specs]. The following sections describe the brief overview and scope of each functional block.
      </para>
      <section xml:id="s.intro.scope.capabilities">
        <title>Capabilities</title>
        <para>
          Capabilities test cases are covered for verification to get Recording Control Service capabilities. It means that GetServices and GetServiceCapabilities commands are covered by this test case.
        </para>
      </section>
      <section xml:id="s.intro.scope.recording">
        <title>Recording</title>
        <para>
          Recording covers the test cases needed for the verification of recording process as mentioned in [ONVIF Network Interface Specs]. Recording section defines different recording control tests for starting and stopping recording.
        </para>
      </section>
    </section>
  </chapter>
  <chapter xml:id="s.docbook">
    <title>Normative references</title>
    <itemizedlist>
      <listitem>
        <para>[ONVIF Conformance] ONVIF Conformance Process Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/conformance/">https://www.onvif.org/profiles/conformance/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Profile Policy] ONVIF Profile Policy:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/">https://www.onvif.org/profiles/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Network Interface Specs] ONVIF Network Interface Specification documents:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Core Specs] ONVIF Core Specifications:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Recording Service Specs] ONVIF Recording Control Specifications:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Base Test] ONVIF Base Device Test Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/conformance/device-test/">https://www.onvif.org/profiles/conformance/device-test/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ISO/IEC Directives, Part 2] ISO/IEC Directives, Part 2, Annex H:</para>
        <para>
          <link xlink:href="http://www.iso.org/directives">http://www.iso.org/directives</link>
        </para>
      </listitem>
      <listitem>
        <para>[ISO 16484-5] ISO 16484-5:2014-09 Annex P:</para>
        <para>
          <link xlink:href="https://www.iso.org/obp/ui/#!iso:std:63753:en">https://www.iso.org/obp/ui/#!iso:std:63753:en</link>
        </para>
      </listitem>
      <listitem>
        <para>[SOAP 1.2, Part 1] W3C SOAP 1.2, Part 1, Messaging Framework:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/soap12-part1/">http://www.w3.org/TR/soap12-part1/</link>
        </para>
      </listitem>
      <listitem>
        <para>[XML-Schema, Part 1] W3C XML Schema Part 1: Structures Second Edition:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/xmlschema-1/">http://www.w3.org/TR/xmlschema-1/</link>
        </para>
      </listitem>
      <listitem>
        <para>[XML-Schema, Part 2] W3C XML Schema Part 2: Datatypes Second Edition:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/xmlschema-2/">http://www.w3.org/TR/xmlschema-2/</link>
        </para>
      </listitem>
      <listitem>
        <para>[WS-Security] "Web Services Security: SOAP Message Security 1.1 (WS-Security 2004)", OASIS Standard, February 2006.:</para>
        <para>
          <link xlink:href="http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf">http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf</link>
        </para>
      </listitem>
    </itemizedlist>
  </chapter>
  <chapter xml:id="additions">
    <title>Terms and Definitions</title>
    <section xml:id="additions.conventions">
      <title>Conventions</title>
      <para>
        The key words "shall", "shall not", "should", "should not", "may", "need not",
        "can", "cannot" in this specification are to be interpreted as described in [ISO/IEC
        Directives Part 2].
      </para>
    </section>
    <section xml:id="additions.definitions">
      <title>Definitions</title>
      <para>This section defines terms that are specific to the ONVIF Receiver Service and tests. For the list of applicable general terms and definitions, please see [ONVIF Base Test].</para>
      <variablelist>
        <varlistentry>
          <term>Metadata</term>
          <listitem>
            <para>
              All streaming data except video and audio, including video analytics results, PTZ position data and other metadata (such as textual data from POS applications).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Recording</term>
          <listitem>
            <para>
              A container for a set of audio, video and metadata tracks. A recording can hold one or more tracks. A track is viewed as an infinite timeline that holds data at certain times.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Recording Event</term>
          <listitem>
            <para>
              An event associated with a Recording, represented by a notification message in the APIs
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Recording Job</term>
          <listitem>
            <para>
              A job performs the transfer of data from a data source to a particular recording using a particular configuration
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Track</term>
          <listitem>
            <para>
              An individual data channel consisting of video, audio, or metadata. This definition is consistent with the definition of track in [RFC 2326]
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Video Analytics</term>
          <listitem>
            <para>
              Algorithms or programs used to analyze video data and to generate data describing object location and behavior.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section xml:id="additions.abbreviations">
      <title>Abbreviations</title>
      <para>This section describes abbreviations used in this document.</para>
      <variablelist>
        <varlistentry>
          <term>DUT</term>
          <listitem>
            <para>Device Under Test</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>HTTP</term>
          <listitem>
            <para>Hyper Text Transport Protocol</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>RTCP</term>
          <listitem>
            <para>RTP Control Protocol</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>RTSP</term>
          <listitem>
            <para>Real Time Streaming Protocol</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>RTP</term>
          <listitem>
            <para>Real-time Transport Protocol</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>SDP</term>
          <listitem>
            <para>Session Description Protocol</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TCP</term>
          <listitem>
            <para>Transport Control Protocol</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>UTC</term>
          <listitem>
            <para>Coordinated Universal Time</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>UDP</term>
          <listitem>
            <para>User Datagram Protocol</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>URI</term>
          <listitem>
            <para>Uniform Resource Identifier</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>WSDL</term>
          <listitem>
            <para>Web Services Description Language</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>WS-I BP 2.0</term>
          <listitem>
            <para>Web Services Interoperability Basic Profile version 2.0</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>XML</term>
          <listitem>
            <para>eXtensible Markup Language</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>
  <chapter xml:id="overview">
    <title>Test Overview</title>
    <para>
      This section provides information the test setup procedure and required prerequisites, and the test policies that should be followed for test case execution.
    </para>
    <section xml:id="overview.test_setup">
      <title>Test Setup</title>
      <section xml:id="overview.test_setup.network_configuration">
        <title>Network Configuration for DUT</title>
        <para>
          The generic test configuration for the execution of test cases defined in this document is as shown below (Figure 4.1).
        </para>
        <para>
          Based on the individual test case requirements, some of the entities in the below setup may not be needed for the execution of those corresponding test cases.
        </para>
        <figure>
          <title>Test Configuration for DUT</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="test_network.png"
                         format="PNG"
                         scalefit="0"/>
            </imageobject>
            <textobject>
              <phrase>Test Configuration for DUT</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <para>
          <emphasis role="bold">DUT:</emphasis> ONVIF device to be tested. Hereafter, this is referred to as DUT (Device Under Test).
        </para>
        <para>
          <emphasis role="bold">ONVIF Client (Test Tool):</emphasis> Tests are executed by this system and it controls the behavior of the DUT. It handles both expected and unexpected behavior.
        </para>
        <para>
          <emphasis role="bold">HTTP Proxy:</emphasis> provides facilitation in case of RTP and RTSP tunneling over HTTP.
        </para>
        <para>
          <emphasis role="bold">Wireless Access Point:</emphasis> provides wireless connectivity to the devices that support wireless connection.
        </para>
        <para>
          <emphasis role="bold">DNS Server:</emphasis> provides DNS related information to the connected devices.
        </para>
        <para>
          <emphasis role="bold">DHCP Server:</emphasis> provides IPv4 Address to the connected devices.
        </para>
        <para>
          <emphasis role="bold">NTP Server:</emphasis> provides time synchronization between ONVIF Client and DUT.
        </para>
        <para>
          <emphasis role="bold">Switching Hub:</emphasis> provides network connectivity among all the test equipments in the test environment. All devices should be connected to the Switching Hub.
          When running multiple test instances in parallel on the same network, the Switching Hub should be configured to use filtering in order to avoid multicast traffic being flooded to all ports, because this may affect test stability.
        </para>
        <para>
          <emphasis role="bold">Router:</emphasis> provides router advertisements for IPv6 configuration.
        </para>
      </section>
    </section>
    <section xml:id="overview.prerequisites">
      <title>Prerequisites</title>
      <para>
        The pre-requisites for executing the test cases described in this Test Specification are:
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              The DUT shall be configured with an IPv4 address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be IP reachable [in the test configuration].
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be able to be discovered by the Test Tool.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be configured with the time, i.e. manual configuration of UTC time and if NTP is supported by the DUT then NTP time shall be synchronized with NTP Server.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT time and Test tool time shall be synchronized with each other either manually or by a common NTP server.
            </para>
          </listitem>
        </orderedlist>
      </para>
    </section>
    <section xml:id="overview.test_policy">
      <title>Test Policy</title>
      <para>
        This section describes the test policies specific to the test case execution of each functional block.
      </para>
      <para>
        The DUT shall adhere to the test policies defined in this section.
      </para>
      <section xml:id="overview.test_policy.capabilities">
        <title>Capabilities</title>
        <para>
          The device under test shall demonstrate recording control service capability in GetServices and GetServiceCapabilities responses. A DUT that does not display recording control service capability constitutes failure of test procedure.
        </para>
        <para>
          Please refer to <xref linkend="tc.recording.capabilities"/> for Capabilities Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.recording">
        <title>Recording</title>
        <para>
          The DUT shall give the Recording Control Service entry point by GetServices command.
        </para>
        <para>
          Please refer to <xref linkend="tc.recording.recording"/> for Recording Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.configuration">
        <title>Configuration</title>
        <para>
          The DUT shall give the Recording Control Service entry point by GetServices command.
        </para>
        <para>
          Please refer to <xref linkend="tc.recording.configuration"/> for Configuration Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.general">
        <title>General</title>
        <para>
          The DUT shall give the Recording Control Service entry point by GetServices command.
        </para>
        <para>
          Please refer to <xref linkend="tc.recording.general"/> for General Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.authentication_method_selection">
        <title>Authentication Method Selection as a Testing Framework</title>
        <para>
          According to later version of [ONVIF Network Interface Specs], it requires ONVIF client to support both HTTP digest and WS-UsernameToken functionality as authentication functionality. Therefore, ONVIF Client (ONVIF Device Test Tool in this context) as a testing framework shall properly select authentication method between the two based on the response from DUT toward specific request. The following is the deterministic procedure on which authentication method is to be selected.
        </para>
        <para>
          <emphasis role="bold">Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                ONVIF Client invokes a specific command which is under testing without any user credentials (no WS-UsernameToken, no HTTP digest authentication header).
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT returns correct response, then ONVIF Client determines that DUT does not require any user authentication toward the command according to the configured security policy.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT returns HTTP 401 Unauthorized error along with WWW-Authentication: Digest header, then ONVIF Client determines that DUT supports HTTP digest authentication. ONVIF Client shall provide with the proper level of user credential to continue the test procedure.
              </para>
            </listitem>
            <listitem>
              <para>
                If the DUT returns SOAP fault (Sender/NotAuthorized) message, then ONVIF Client determines that WS-UsernameToken is supported by DUT. ONVIF Client shall provide with the proper level of user credential to continue the test procedure.
              </para>
            </listitem>
          </orderedlist>
        </para>
      </section>
    </section>
  </chapter>
  <!--Recording Control Test Cases-->
  <chapter xml:id="tc.recording">
    <title>Recording Control Test Cases</title>
    <!--Capabilities-->
    <section xml:id="tc.recording.capabilities"
             xreflabel="Section 5.1">
      <title>Capabilities</title>
      <!--RECORDING-1-1-1-->
      <section xml:id="tc.RECORDING-1-1-1">
        <title>
          RECORDING CONTROL SERVICE CAPABILITIES
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-1-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Capability exchange (ONVIF Core Specification), GetServiceCapabilities (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetServiceCapabilities (for Recording Control Service)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Recording Control Service Capabilities of the DUT.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the Recording Control Service entry point by GetServices/GetCapabilities command.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilitiesRequest</emphasis> message to retrieve recording control service capabilities of the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> from the DUT.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent Capabilities.MaxRate zero or less.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent Capabilities.MaxTotalRate zero or less.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent Capabilities.MaxRecordings less than 1.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an empty Capabilities.Encoding list.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--RECORDING-1-1-3-->
      <section xml:id="tc.RECORDING-1-1-3">
        <title>
          GET SERVICES AND GET RECORDING CONTROL SERVICE CAPABILITIES CONSISTENCY
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-1-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Capability exchange (ONVIF Core Specification), GetServiceCapabilities (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetServices, GetServiceCapabilities (for Recording Control Service)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> devicemgmt.wsdl, recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Services and Recording Control Service Capabilities consistency.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> None.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServicesRequest</emphasis> message (IncludeCapability = true) to retrieve all services of the DUT with service capabilities.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServicesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilitiesRequest</emphasis> message to retrieve Recording Control service capabilities of the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetServicesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent different Capabilities in <emphasis role="bold">GetServicesResponse</emphasis> message and in <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Service will be defined as Recording Control service if it has Namespace element that is equal to "http://www.onvif.org/ver10/recording/wsdl".
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Capabilities in <emphasis role="bold">GetServicesResponse</emphasis> message and in <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message will be assumed as different in the following cases:
          <itemizedlist>
            <listitem>
              <para>
                DynamicRecordings attribute is skipped only for <emphasis role="bold">GetServicesResponse</emphasis> message or only for <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DynamicRecordings attribute values are different.
              </para>
            </listitem>
            <listitem>
              <para>
                DynamicTracks attribute is skipped only for <emphasis role="bold">GetServicesResponse</emphasis> message or only for <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DynamicTracks attribute values are different.
              </para>
            </listitem>
            <listitem>
              <para>
                Encoding attribute is skipped only for <emphasis role="bold">GetServicesResponse</emphasis> message or only for <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Encoding attribute values are different.
              </para>
            </listitem>
            <listitem>
              <para>
                MaxRate attribute is skipped only for <emphasis role="bold">GetServicesResponse</emphasis> message or only for <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                MaxRate attribute values are different.
              </para>
            </listitem>
            <listitem>
              <para>
                MaxTotalRate attribute is skipped only for <emphasis role="bold">GetServicesResponse</emphasis> message or only for <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                MaxTotalRate attribute values are different.
              </para>
            </listitem>
            <listitem>
              <para>
                MaxRecordings attribute is skipped only for <emphasis role="bold">GetServicesResponse</emphasis> message or only for <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                MaxRecordings attribute values are different.
              </para>
            </listitem>
            <listitem>
              <para>
                MetadataRecording attribute is skipped only for <emphasis role="bold">GetServicesResponse</emphasis> message or only for <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                MetadataRecording attribute values are different.
              </para>
            </listitem>
            <listitem>
              <para>
                Options attribute is skipped only for <emphasis role="bold">GetServicesResponse</emphasis> message or only for <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Options attribute values are different.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Recording-->
    <section xml:id="tc.recording.recording"
             xreflabel="Section 5.2">
      <title>Recording</title>
      <!--RECORDING-2-1-20-->
      <section xml:id="tc.RECORDING-2-1-20">
        <title>
          START RECORDING ON RECEIVER
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-2-1-20
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Creation of Recording Job with Active mode on receiver. Event generation when the state field of the RecordingJobStateInformation structure is changing (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateRecordingJob
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, receiver.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Start Recording on Receiver.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry points for Recording Control Service and Receiver Service by GetServices command. All recording jobs were stopped. Options are supported by DUT. Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_CreationOfRecording"/> with RequiredSpareJobs = 0 to create or select Recording to make sure that 1 recording job can be created.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_AutoCreationOfReceiver"/> for auto creation of receiver by create recording job with Idle mode.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/JobState Topic as Filter and an InitialTerminationTime = TerminationTime1 to check Recording Job State changing.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">ConfigureReceiverRequest</emphasis> message (ReceiverToken = ReceiverToken1, Configuration.Mode = "AlwaysConnect", Configuration.MediaUri as stream_uri of RTSP Simulator, Configuration.StreamSetup.Stream = "RTP-Unicast", StreamSetup.Transport.Tunnel.Protocol = "UDP", no StreamSetup.Transport.Tunnel.Tunnel) to configure the receiver to receive media from RTSP Simulator.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">ConfigureReceiverResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetReceiverRequest</emphasis> message with ReceiverToken = ReceiverToken1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">GetReceiverResponse</emphasis> message from the DUT. Check that <emphasis role="bold">GetReceiverResponse</emphasis> message contains the same parameters values as the ones changed in <emphasis role="bold" service="skip">ConfigureReceiverRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetRecordingJobModeRequest</emphasis> message (JobToken = "JobToken1", Mode = "Active") to start recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message from the DUT. Mark time of <emphasis role="bold">CreateRecordingJobResponse</emphasis> as T1.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_ComparisonOfReceivers"/> for receiving event with "Active" or "PartiallyActive" Recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message with JobToken = "JobToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.State is equal to "Active" or "PartiallyActive".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.Sources.State is equal to "Active".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.State value in the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message equals to State.State value in the notification message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">ConfigureReceiverResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetReceiverResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetReceiverResponse</emphasis> message with parameters values differ from sent in <emphasis role="bold">ConfigureReceiverRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.State parameter value not equal to "Active" or "PartiallyActive".
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.Sources.State parameter value not equal to "Active".
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.RecordingToken parameter value not equal to "RecordingToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent different values for State.State in the notification message and in <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--RECORDING-2-1-22-->
      <section xml:id="tc.RECORDING-2-1-22">
        <title>
          STOP RECORDING ON RECEIVER - PUT JOB IN IDLE STATE
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-2-1-22
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SetRecordingJobMode, event generation when the state field of the RecordingJobStateInformation structure is changing (ONVIF Recording Control Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetRecordingJobMode
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, receiver.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Stop Recording on Receiver by Putting It in Idle State.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry points for Recording Control Service and Receiver Service by GetServices command. All recording jobs were stopped. Options are supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_CreationOfRecording"/> with RequiredSpareJobs = 0 to create or select Recording to make sure that 1 recording job can be created.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_AutoCreationOfReceiver"/> for Auto creation of receiver by create recording job with Idle mode.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/JobState Topic as Filter and an InitialTerminationTime = TerminationTime1 to check Recording Job State changing.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">ConfigureReceiverRequest</emphasis> message (ReceiverToken = ReceiverToken1, Configuration.Mode = "AlwaysConnect", Configuration.MediaUri as stream_uri of RTSP Simulator, Configuration.StreamSetup.Stream = "RTP-Unicast", StreamSetup.Transport.Tunnel.Protocol = "UDP", no StreamSetup.Transport.Tunnel.Tunnel) to configure the receiver to receive media from RTSP Simulator.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">ConfigureReceiverResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetReceiverRequest</emphasis> message with ReceiverToken = ReceiverToken1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">GetReceiverResponse</emphasis> message from the DUT. Check that <emphasis role="bold">GetReceiverResponse</emphasis> message contains the same parameters values as were changed in <emphasis role="bold" service="skip">ConfigureReceiverRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetRecordingJobModeRequest</emphasis> message (JobToken = "JobToken1", Mode = "Active") to start recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message from the DUT. Mark time of <emphasis role="bold">CreateRecordingJobResponse</emphasis> as T1.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_ComparisonOfReceivers"/> for receiving event with "Active" or "PartiallyActive" Recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message with JobToken = "JobToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT. Check that State.State = "Active" or "PartiallyActive".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/JobState Topic as Filter and an InitialTerminationTime = TerminationTime1 to check Recording Job State changing.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetRecordingJobModeRequest</emphasis> message (JobToken = "JobToken1", Mode = "Idle") to stop recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message from the DUT. Remark T1 as time of <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_ComparisonOfReceivers"/> for receiving event with Idle state.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message with JobToken = "JobToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT. Check that State.State and State.Sources.State parameter values are equal to "Idle".
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">ConfigureReceiverResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetReceiverResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">DeleteRecordingJobResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetReceiverResponse</emphasis> message with parameters values differerent from sent in <emphasis role="bold">ConfigureReceiverRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetRecordingJobStateResponse</emphasis> State.State different from "Active" or "PartailActive" at step 15.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.State parameter value not equal to "Idle" at step 22.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.Sources.State parameter value not equal to "Idle" at step 22.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.RecordingToken parameter value not equal to "RecordingToken1".
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--RECORDING-2-1-23-->
      <section xml:id="tc.RECORDING-2-1-23">
        <title>
          STOP RECORDING ON RECEIVER - NEVER CONNECTED MODE
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-2-1-23
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Event generation when the receiver state is changing (ONVIF Receiver Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, receiver.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Stop Recording on Receiver by Putting Receiver in NeverConnect Mode.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry points for Recording Control Service and Receiver Service by GetServices command. All recording jobs were stopped. Options are supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_CreationOfRecording"/> with RequiredSpareJobs = 0 to create or select Recording to make sure that 1 recording job can be created.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_AutoCreationOfReceiver"/> for Auto creation of receiver by create recording job with Idle mode.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:Receiver/ChangeState Topic as Filter and an InitialTerminationTime = Time1 to check Receiver state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">ConfigureReceiverRequest</emphasis> message with ReceiverToken = ReceiverToken1 (Configuration.Mode = "AlwaysConnect", Configuration.MediaUri as stream_uri of RTSP Simulator, Configuration.StreamSetup.Stream = "RTP-Unicast", StreamSetup.Transport.Tunnel.Protocol = "UDP", no StreamSetup.Transport.Tunnel.Tunnel) to configure the receiver to receive media from RTSP Simulator.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">ConfigureReceiverResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetReceiverRequest</emphasis> message with ReceiverToken = ReceiverToken1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">GetReceiverResponse</emphasis> message from the DUT. Check that <emphasis role="bold">GetReceiverResponse</emphasis> message contains the same parameters values as were changed in <emphasis role="bold" service="skip">ConfigureReceiverRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetRecordingJobModeRequest</emphasis> message (JobToken = "JobToken1", Mode = "Active") to start the recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message from the DUT. Mark the time of <emphasis role="bold" service="skip">SetRecordingJobModeRequest</emphasis> message as T1.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_PullMessagesReceiverState"/> for receiving event with Connected state of the receiver.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetReceiverStateRequest</emphasis> message to check Receiver State.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">GetReceiverStateResponse</emphasis> message from the DUT. Check that ReceiverState.State = "Connected".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message with JobToken = "JobToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.State is equal to "Active" or "PartiallyActive".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.Sources.State is equal to "Active".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.State value in the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message equals to State.State value in the notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:Receiver/ChangeState Topic as Filter and an InitialTerminationTime = Time1 to check Receiver state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetReceiverModeRequest</emphasis> message (ReceiverToken = "ReceiverToken1", Mode = "NeverConnect") to stop recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">SetReceiverModeResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_PullMessagesReceiverState"/> for receiving event with NotConnected state of the receiver.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetReceiverStateRequest</emphasis> message to check Receiver State.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">GetReceiverStateResponse</emphasis> message from the DUT. Check that ReceiverState.State = "NotConnected".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message with JobToken = "JobToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT. Check that State.State and State.Sources.State parameter values are equal to "Idle".
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">ConfigureReceiverResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetReceiverResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetReceiverStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">SetReceiverModeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetReceiverResponse</emphasis> message with parameters values differ from sent in <emphasis role="bold">ConfigureReceiverRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetReceiverStateResponse</emphasis> with ReceiverState.State not equal to "Connected" at step 15.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetRecordingJobStateResponse</emphasis> State.State different from "Active" or "PartailActive" at step 18.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.Sources.State parameter value not equal to "Active" at step 19.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetReceiverStateResponse</emphasis> with ReceiverState.State not equal to "NotConnected" at step 27.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.RecordingToken parameter value not equal to "RecordingToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.State and State.Sources.State parameters values not equal to "Idle" at step 29.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--RECORDING-2-1-25-->
      <section xml:id="tc.RECORDING-2-1-25">
        <title>
          STOP RECORDING ON RECEIVER - DELETE JOB
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-2-1-25
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DeleteRecordingJob (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteRecordingJob
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, receiver.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Stop Recording on Receiver by Job Deletion.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry points for Recording Control Service and Receiver Service by GetServices command. All recording jobs were stopped. Options are supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_CreationOfRecording"/> with RequiredSpareJobs = 0 to create or select Recording to make sure that 1 recording job can be created.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_AutoCreationOfReceiver"/> for auto creation of receiver by create recording job with Idle mode.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/JobState Topic as Filter and an InitialTerminationTime = TerminationTime1 to check Recording Job State changing.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">ConfigureReceiverRequest</emphasis> message (ReceiverToken = ReceiverToken1, Configuration.Mode = "AlwaysConnect", Configuration.MediaUri as stream_uri of RTSP Simulator, Configuration.StreamSetup.Stream = "RTP-Unicast", StreamSetup.Transport.Tunnel.Protocol = "UDP", no StreamSetup.Transport.Tunnel.Tunnel) to configure the receiver to receive media from RTSP Simulator.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">ConfigureReceiverResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetReceiverRequest</emphasis> message with ReceiverToken = ReceiverToken1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">GetReceiverResponse</emphasis> message from the DUT. Check that <emphasis role="bold">GetReceiverResponse</emphasis> message contains the same parameters values as were changed in <emphasis role="bold" service="skip">ConfigureReceiverRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetRecordingJobModeRequest</emphasis> message (JobToken = "JobToken1", Mode = "Active") to start recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message from the DUT. Mark time of <emphasis role="bold">CreateRecordingJobResponse</emphasis> as T1.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_ComparisonOfReceivers"/> for receiving event with "Active" or "PartiallyActive" Recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message with JobToken = "JobToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT. Check that State.State = "Active" or "PartiallyActive".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DeleteRecordingJobRequest</emphasis> with JobToken = JobToken1 to delete recording job.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">DeleteRecordingJobResponse</emphasis> from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobsRequest</emphasis> to get full list of the recording jobs.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobsResponse</emphasis> from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that there is no JobItem with JobToken1 in the <emphasis role="bold">GetRecordingJobsResponse</emphasis>.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">ConfigureReceiverResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetReceiverResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">DeleteRecordingJobResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetReceiverResponse</emphasis> message with parameters values different from the ones sent in <emphasis role="bold">ConfigureReceiverRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.State parameter value not equal to "Active" or "PartiallyActive" at step 15.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned the JobToken1 in <emphasis role="bold">GetRecordingJobsResponse</emphasis> message after deleting.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--RECORDING-2-1-27-->
      <section xml:id="tc.RECORDING-2-1-27">
        <title>
          MODIFY MEDIA ATTRIBUTE WHILE RECORDING - RECEIVER
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-2-1-27
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Event generation when the receiver state is changing (ONVIF Receiver Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, receiver.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Media Attributes Modification for Remote Recordings while Recording.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry points for Recording Control Service and Receiver Service by GetServices command. All recording jobs were stopped. Options are supported by the DUT.
           Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_CreationOfRecording"/> with RequiredSpareJobs = 0 to create or select Recording to make sure that 1 recording job can be created.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_AutoCreationOfReceiver"/> for auto creation of receiver by create recording job with Idle mode.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/JobState Topic as Filter and an InitialTerminationTime = TerminationTime1 to check Recording Job State changing.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">ConfigureReceiverRequest</emphasis> message (ReceiverToken = ReceiverToken1, Configuration.Mode = "AlwaysConnect", Configuration.MediaUri = stream_uri1, (stream_uri1 from RTSP Simulator), Configuration.StreamSetup.Stream = "RTP-Unicast", StreamSetup.Transport.Tunnel.Protocol = "UDP", no StreamSetup.Transport.Tunnel.Tunnel) to configure the receiver to receive media from RTSP Simulator.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">ConfigureReceiverResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetReceiverRequest</emphasis> message with ReceiverToken = ReceiverToken1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">GetReceiverResponse</emphasis> message from the DUT. Check that <emphasis role="bold">GetReceiverResponse</emphasis> message contains the same parameters values as were changed in <emphasis role="bold" service="skip">ConfigureReceiverRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetRecordingJobModeRequest</emphasis> message (JobToken = "JobToken1", Mode = "Active") to start recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message from the DUT. Mark time of <emphasis role="bold">CreateRecordingJobResponse</emphasis> as T1.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_ComparisonOfReceivers"/> for receiving event with "Active" or "PartiallyActive" Recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message with JobToken = "JobToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT. Check that State.State = "Active" or "PartiallyActive".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">ConfigureReceiverRequest</emphasis> message (ReceiverToken = ReceiverToken1, Configuration.Mode = "AlwaysConnect", Configuration.MediaUri = stream_uri2, (where stream_uri2 is streaming of RTSP Simulator with resolution, bitrate, framerate and quality are different from stream_uri1), Configuration.StreamSetup.Stream = "RTP-Unicast", StreamSetup.Transport.Tunnel.Protocol = "UDP", no StreamSetup.Transport.Tunnel.Tunnel) to modify stream settings of the RTSP simulator.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">ConfigureReceiverResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message with JobToken = "JobToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT. Check that State.State = "Active" or "PartiallyActive".
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">ConfigureReceiverResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetReceiverResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned Recording parameters in <emphasis role="bold">GetRecordingsResponse</emphasis> message that differ from specified during Recording changing.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.State parameter value not equal to "Active" or "PartiallyActive" at step 15 or 19.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.RecordingToken parameter value not equal to "RecordingToken1".
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--RECORDING-2-1-28-->
      <section xml:id="tc.RECORDING-2-1-28">
        <title>
          START RECORDING ON MEDIA PROFILE
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-2-1-28
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Creation of a Recording Job with Active mode on local storage. Event generation when the state field of the RecordingJobStateInformation structure is changing (ONVIF Recording Control Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateRecordingJob
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, media.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Start Recording using a Media Profile.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry points for Recording Control Service and Media Service by GetServices command. At least one media profile compatible with at least one existing or created recording exists on the DUT. All recording jobs were stopped. Options are supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_SelectionOfRecordingMediaProfile"/> with RequiredSpareJobs = 0 to create or select Recording (RecordingToken = RecordingToken1) to make sure that 1 recording job can be created and to get the compatible media profile tokens list.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/JobState Topic as Filter and an InitialTerminationTime = TerminationTime1 to check Recording Job State changing.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = RecordingToken1, JobConfiguration.Mode = Active, JobConfiguration.Priority = 1, JobConfiguration.Source.SourceToken.Token = "ProfileToken1", where ProfileToken1 is token of MediaProfile from Compatible Sources list, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Profile", JobConfiguration.Source.AutoCreateReceiver is not present) to create a recording job for configured recording with Active mode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingJobResponse</emphasis> message (JobToken = JobToken1).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that JobConfiguration in <emphasis role="bold">CreateRecordingJobResponse</emphasis> message contains the same parameters values as was sent in <emphasis role="bold" service="skip">CreateRecordingJobRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_PullMessagesJobState"/> for receiving Initialized event with "Active" or "PartiallyActive" Recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message with JobToken = "JobToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.State is equal to "Active" or "PartiallyActive".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.Sources.State is equal to "Active".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.State value in the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message equals to State.State value in the notification message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingJobResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">CreateRecordingJobResponse</emphasis> message with JobConfiguration parameters values differ from sent in <emphasis role="bold">CreateRecordingJobRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.State parameter value not equal to "Active" or "PartiallyActive".
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.Sources.State parameter value not equal to "Active".
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.RecordingToken parameter value not equal to "RecordingToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent different values for State.State in the notification message and in <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--RECORDING-2-1-29-->
      <section xml:id="tc.RECORDING-2-1-29">
        <title>
          STOP RECORDING ON MEDIA PROFILE - PUT JOB IN IDLE STATE
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-2-1-29
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SetRecordingJobMode, event generation when the state field of the RecordingJobStateInformation structure is changing (ONVIF Recording Control Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetRecordingJobMode
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, media.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Stop Recording using a Media Profile by Putting It in Idle State.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry points for Recording Control Service and Media Service by GetServices command. At least one media profileis compatible with at least one existing or created recording exists on the DUT. All recording jobs were stopped. Options are supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_SelectionOfRecordingMediaProfile"/> with RequiredSpareJobs = 0 to create or select Recording (RecordingToken = RecordingToken1) to make sure that 1 recording job can be created and to get the compatible media profile tokens list.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/JobState Topic as Filter and an InitialTerminationTime = TerminationTime1 to check Recording Job State changing.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = RecordingToken1, JobConfiguration.Mode = Active, JobConfiguration.Priority = 1, JobConfiguration.Source.SourceToken.Token = "ProfileToken1", where ProfileToken1 is token of MediaProfile from Compatible Sources list, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Profile", JobConfiguration.Source.AutoCreateReceiver is not present) to create a recording job for configured recording with Active mode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingJobResponse</emphasis> message (JobToken = JobToken1).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that JobConfiguration in <emphasis role="bold">CreateRecordingJobResponse</emphasis> message contains the same parameters values as was sent in <emphasis role="bold" service="skip">CreateRecordingJobRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_PullMessagesJobState"/> for receiving Initialized event with "Active" or "PartiallyActive" Recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message with JobToken = "JobToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT. Check that State.State parameter value is equal to "Active" or "PartiallyActive".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/JobState Topic as Filter and an InitialTerminationTime = TerminationTime1 to check Recording Job State changing.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetRecordingJobModeRequest</emphasis> message (JobToken = "JobToken1", Mode = "Idle") to stop recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message from the DUT. Remark Time1 as time of receiving of <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_ComparisonOfReceivers"/> for receiving changed event with "Idle" Recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message with JobToken = "JobToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT. Check that State.State and State.Sources.State parameter values are equal to "Idle".
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingJobResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned JobConfiguration parameters in <emphasis role="bold">CreateRecordingJobResponse</emphasis> message that differs from specified during RecordingJob creation.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetRecordingJobStateResponse</emphasis> State.State differs from "Active" or "PartiallyActive" at step 11.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.State parameter value not equal to "Idle" at step 18.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.Sources.State parameter value not equal to "Idle" at the step 18.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.RecordingToken parameter value not equal to "RecordingToken1".
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--RECORDING-2-1-30-->
      <section xml:id="tc.RECORDING-2-1-30">
        <title>
          STOP RECORDING ON MEDIA PROFILE - DELETE JOB
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-2-1-30
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DeleteRecordingJob (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteRecordingJob
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, media.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Stop Recording using a Media Profile by Job Deletion.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry points for Recording Control Service and Media Service by GetServices command. All recording jobs were stopped. At least one media profile compatible with at least one existing or created recording exists on the DUT. Options are supported by the DUT. Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_SelectionOfRecordingMediaProfile"/> with RequiredSpareJobs = 0 to create or select Recording (RecordingToken = RecordingToken1) to make sure that 1 recording job can be created and to get the compatible media profile tokens list.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/JobState Topic as Filter and an InitialTerminationTime = TerminationTime1 to check Recording Job State changing.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = RecordingToken1, JobConfiguration.Mode = Active, JobConfiguration.Priority = 1, JobConfiguration.Source.SourceToken.Token = "ProfileToken1", where ProfileToken1 is token of MediaProfile from Compatible Sources list, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Profile", JobConfiguration.Source.AutoCreateReceiver is not present) to create a recording job for configured recording with Active mode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingJobResponse</emphasis> message (JobToken = JobToken1).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that JobConfiguration in <emphasis role="bold">CreateRecordingJobResponse</emphasis> message contains the same parameters values as was sent in <emphasis role="bold" service="skip">CreateRecordingJobRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_PullMessagesJobState"/> for receiving Initialized event with "Active" or "PartiallyActive" Recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message with JobToken = "JobToken1".
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT. Check that State.State and State.Sources.State parameter values are equal to "Active" or "PartiallyActive".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DeleteRecordingJobRequest</emphasis> message (JobToken = JobToken1) to delete Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">DeleteRecordingJobResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobsRequest</emphasis> to get full list of the recording jobs.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobsResponse</emphasis> from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that there is no JobItem with JobToken1 in the <emphasis role="bold">GetRecordingJobsResponse</emphasis>.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingJobResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">CreateRecordingJobResponse</emphasis> message with JobConfiguration parameters values different from sent in <emphasis role="bold">CreateRecordingJobRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message with State.State parameter value not equal to "Active" or "PartiallyActive.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned the JobToken1 in <emphasis role="bold">GetRecordingJobsResponse</emphasis> message after deleting.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

    </section>
    <!--Configuration-->
    <section xml:id="tc.recording.configuration"
             xreflabel="Section 5.3">
      <title>Configuration</title>
      <!--RECORDING-3-1-7-->
      <section xml:id="tc.RECORDING-3-1-7">
        <title>
          DYNAMIC TRACKS CONFIGURATION
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-3-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreateTrack, DeleteTrack (ONVIF Recording Control Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateTrack, DeleteTrack
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation and deletion of tracks.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices command. Dynamic Tracks functionality is supported by the DUT. Options are supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_SelectionOfRecording"/> for selection of recording to make sure that track creation procedure will be possible.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve initial track list of the recordings.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateTrackRequest</emphasis> message (RecordingToken=RecordingToken1 where RecordingToken1 is RecordingToken from <xref linkend="Annex_SelectionOfRecording"/>, TrackConfiguration.TrackType as track type from <xref linkend="Annex_SelectionOfRecording"/>, TrackConfiguration.Description = 'New Track') to create a new track in the recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateTrackResponse</emphasis> message (TrackToken = TrackToken1) from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that TrackToken = TrackToken1 from <emphasis role="bold">CreateTrackResponse</emphasis> message was not presented in Recording with token RecordingToken1 in initial track list in <emphasis role="bold">GetRecordingsResponse</emphasis> message at step 5.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve updated track list of the recordings.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that new track (TrackToken = TrackToken1) is presented in updated track list for RecordingToken = RecordingToken1. Check that all parameter values are the same as were sent in <emphasis role="bold" service="skip">CreateTrackRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all other tracks for RecordingToken = RecordingToken1 in <emphasis role="bold">GetRecordingsResponse</emphasis> message at step 10 have the same parameters as were in <emphasis role="bold">GetRecordingsResponse</emphasis> message at step 5. Check that all other recordings have the same parameters value as were in <emphasis role="bold">GetRecordingsResponse</emphasis> message at step 5.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DeleteTrackRequest</emphasis> message (RecordingToken = RecordingToken1, TrackToken = TrackToken1) to delete the track.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">DeleteTrackResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve updated track list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT. Check that track (TrackToken = TrackToken1) for RecordingToken = RecordingToken1 is no longer present on track list.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all other tracks in <emphasis role="bold">GetRecordingsResponse</emphasis> message at step 16 have the same parameters as were in <emphasis role="bold">GetRecordingsResponse</emphasis> message at step 5. Check that all other recordings have the same parameters value as were in <emphasis role="bold">GetRecordingsResponse</emphasis> message at step 5.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateTrackResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">DeleteTrackResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned TrackToken value in the <emphasis role="bold">CreateTrackResponse</emphasis> not unique with Track Tokens for Recording with RecordingToken = RecordingToken1 in initial <emphasis role="bold">GetRecordingsResponse</emphasis> message at step 5.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return TrackToken = TrackToken1 for Recording with RecordingToken = RecordingToken1 in <emphasis role="bold">GetRecordingsResponse</emphasis> message after track creation.
              </para>
            </listitem>
            <listitem>
              <para>
                The parameter values of the TrackToken = TrackToken1 for recording (RecordingToken = RecordingToken1) in updated recordings list at step 10 differ from values in <emphasis role="bold">CreateTrackRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned TrackToken = TrackToken1 for Recording with RecordingToken = RecordingToken1 in <emphasis role="bold">GetRecordingsResponse</emphasis> message after recording deletion.
              </para>
            </listitem>
            <listitem>
              <para>
                Any changes were applied to tracks of other recordings from initial <emphasis role="bold">GetRecordingsResponse</emphasis> message list during the test process.
              </para>
            </listitem>
            <listitem>
              <para>
                Any changes were applied to other tracks of recordings with RecordingToken = RecordingToken1 from initial <emphasis role="bold">GetRecordingsResponse</emphasis> message list during the test process.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send Recording with RecordingToken = RecordingToken1 in updated RecordingList
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will not allow creating new Track for selected Recording
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_RecordingSourceInformationParametersMaximumLength"/> for Recording Source Information Parameters Length limitations.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> DUT shall provide Recording with Options.Track.SpareTotal > 0 to avoid track's data deletion.

        </para>
      </section>
      <!--RECORDING-3-1-10-->
      <section xml:id="tc.RECORDING-3-1-10">
        <title>
          DYNAMIC RECORDINGS CONFIGURATION
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-3-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreateRecording, DeleteRecording
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateRecording, DeleteRecording (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation and deletion of recordings.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices command. Dynamic Recording functionality is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_RecordingCreationPrerequisite"/> for possibility to create a new recording.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilitiesRequest</emphasis> message to retrieve Encoding list and MetadtaRecording capabilities of the Recording service of the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve initial complete recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingRequest</emphasis> message with RecordingConfiguration.Source.SourceId as any URI, RecordingConfiguration.Source.Name = "CameraName", RecordingConfiguration.Source.Location = "LocationDescription", RecordingConfiguration.Source.Description = "Source Description", RecordingConfiguration.Source.Address as address of the device, RecordingConfiguration.Content = "Create/Delete recordings test", RecordingConfiguration.MaximumRetentionTime = "PT0S" to create a new recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingResponse</emphasis> message from the DUT (RecordingToken = RecordingToken1).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that RecordingToken = RecordingToken1 from <emphasis role="bold">CreateRecordingResponse</emphasis> message was not presented in initial recordings list in the <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve updated recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that created recording (RecordingToken = RecordingToken1) is present on the updated recordings list. Check that all parameter values are the same as were sent in <emphasis role="bold" service="skip">CreateRecordingRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                If Capabilities.Encoding in <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message received from the DUT at step 5 contains at least one enumeration value of tt:VideoEncoding, then ONVIF Client checks that created recording contains at least one track with track type equals to Video.
              </para>
            </listitem>
            <listitem>
              <para>
                If Capabilities.Encoding in <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message received from the DUT at step 5 contains at least one enumeration value of tt:AudioEncoding, then ONVIF Client checks that created recording contains at least one track with track type equals to Audio.
              </para>
            </listitem>
            <listitem>
              <para>
                If MetadaRecording is supported by the DUT, check that created recording contains track with track type equals to Metadata.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all other recordings in <emphasis role="bold">GetRecordingsResponse</emphasis> message at step 12 have the same settings as were in <emphasis role="bold">GetRecordingsResponse</emphasis> message at step 7.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DeleteRecordingRequest</emphasis> message (RecordingToken = RecordingToken1) to delete recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">DeleteRecordingResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve updated recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT. Check that recording (RecordingToken = RecordingToken1) is no longer present on recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all other recordings in <emphasis role="bold">GetRecordingsResponse</emphasis> message at step 20 have the same settings as the ones in <emphasis role="bold">GetRecordingsResponse</emphasis> message at step 7.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">DeleteRecordingResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned RecordingToken value in the <emphasis role="bold">CreateRecordingResponse</emphasis> not unique with Recording Tokens in initial <emphasis role="bold">GetRecordingsResponse</emphasis> message at step 7.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return Recording with RecordingToken = RecordingToken1 in <emphasis role="bold">GetRecordingsResponse</emphasis> message after recording creation at step 12.
              </para>
            </listitem>
            <listitem>
              <para>
                The parameter values of recording (RecordingToken = RecordingToken1) on the updated recordings list at step 12 differ from values in <emphasis role="bold">CreateRecordingRequest</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Recording (RecordingToken = RecordingToken1) in updated recordings list at step 12 did not contain track with track type equal to 'Video' if encoding list contained at least one enumeration value of tt:VideoEncoding.
              </para>
            </listitem>
            <listitem>
              <para>
                Recording (RecordingToken = RecordingToken1) on the updated recordings list at step 12 did not contain track with track type equal to 'Audio' if encoding list contained at least one enumeration value of tt:AudioEncoding.
              </para>
            </listitem>
            <listitem>
              <para>
                Recording (RecordingToken = RecordingToken1) on the updated recordings list at step 12 did not contain track with track type equals to Metadata if MetadataRecording is supported.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned Recording with RecordingToken = RecordingToken1 in <emphasis role="bold">GetRecordingsResponse</emphasis> message after recording deletion at step 20
              </para>
            </listitem>
            <listitem>
              <para>
                Any changes were applied to other recordings from initial <emphasis role="bold">GetRecordingsResponse</emphasis> message list during the test process – at step 12 and 21.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_RecordingSourceInformationParametersMaximumLength"/> for Recording Source Information Parameters Length limitations.
        </para>
      </section>
      <!--RECORDING-3-1-11-->
      <section xml:id="tc.RECORDING-3-1-11">
        <title>
          RECORDING JOB CONFIGURATION - DIFFERENT PRIORITIES (ON MEDIA PROFILE)
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-3-1-11
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Priority scheme for recording jobs (ONVIF Recording Control Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of recording jobs with different priorities.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices command. No active recording jobs. At least one media profile compatible with at least one existing or created recording exists on the DUT. Options are supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_SelectionOfRecordingMediaProfile"/> with RequiredSpareJobs = 1 to create or select Recording (RecordingToken = RecordingToken1) to make sure that 2 recording jobs can be created and to get the compatible media profile tokens list.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = RecordingToken1, JobConfiguration.Mode = Active, JobConfiguration.Priority = 1, JobConfiguration.Source.SourceToken.Token = "ProfileToken1", where ProfileToken1 is token of MediaProfile from Compatible Sources list, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Profile", JobConfiguration.Source.AutoCreateReceiver is not present) to create a recording job for configured recording with Active mode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingJobResponse</emphasis> message (JobToken = JobToken1).
              </para>
            </listitem>
            <listitem>
              <para>
                Wait for JobState to get changed (use Operation Delay Time).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message (JobToken = JobToken1) to get actual recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.State parameter value is "Active" or "PartiallyActive".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = RecordingToken1, JobConfiguration.Mode = Active, JobConfiguration.Priority = 2, JobConfiguration.Source.SourceToken.Token = "ProfileToken1", where ProfileToken1 is token of MediaProfile configured for recording, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Profile", JobConfiguration.Source.AutoCreateReceiver is not present) to create a new recording job for configured recording with Active mode and higher priority.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingJobResponse</emphasis> message (JobToken = JobToken2).
              </para>
            </listitem>
            <listitem>
              <para>
                Wait for JobState to get changed (use Operation Delay Time).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message (JobToken = JobToken1) to get actual recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.State parameter value is "Idle".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message (JobToken = JobToken2) to get actual recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.State parameter value is "Active" or "PartiallyActive".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DeleteRecordingJobRequest</emphasis> message (JobToken = JobToken2) to delete Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">DeleteRecordingJobResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Wait for JobState to get changed (use Operation Delay Time).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message (JobToken = JobToken1) to get actual recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.State parameter value is "Active" or "PartiallyActive". Check that State.State value equals to State.State value at step 8.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DeleteRecordingJobRequest</emphasis> message (JobToken = JobToken1) to delete Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">DeleteRecordingJobResponse</emphasis> message from the DUT.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingJobResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingOptionsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">DeleteRecordingJobResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned RecordingJob parameters in <emphasis role="bold">CreateRecordingJobResponse</emphasis> message that differ from specified during RecordingJob creation.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned incorrect RecordingJobState in <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message at steps 8, 14, 17 or 23.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> at step 23 with State.State value different from State.State value at step 8.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--RECORDING-3-1-12-->
      <section xml:id="tc.RECORDING-3-1-12">
        <title>
          RECORDING JOB CONFIGURATION - DIFFERENT PRIORITIES (ON RECEIVER)
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-3-1-12
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Priority scheme for recording jobs (ONVIF Recording Control Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of recording jobs with different priorities.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices command. There are no active recording jobs. Options are supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_CreationOfRecording"/> with RequiredSpareJobs = 1 to create or select Recording to make sure that 2 recording jobs can be created.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_AutoCreationOfReceiver"/> for auto creation of receiver by create recording job with Idle mode.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetRecordingJobModeRequest</emphasis> message (JobToken = "JobToken1", Mode = "Active") to start recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Wait for JobState to get changed (use Operation Delay Time).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> (JobToken = "JobToken1") request message to retrieve recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.State parameter value is equal to "Active" or "PartiallyActive".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = "RecordingToken1", JobConfiguration.Mode = "Active", JobConfiguration.Priority = 2, JobConfiguration.Source.SourceToken.Token = "ReceiverToken1", JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Receiver", JobConfiguration.Source.AutoCreateReceiver = false) to create a recording job for the same receiver with higher priority.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingJobResponse</emphasis> message (JobToken = JobToken2).
              </para>
            </listitem>
            <listitem>
              <para>
                Wait for JobState to get changed (use Operation Delay Time).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> (JobToken = JobToken1) request message to retrieve recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.State parameter value is equal to "Idle".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> (JobToken = JobToken2) request message to retrieve recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.State parameter value is equal to "Active" or "PartiallyActive".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DeleteRecordingJobRequest</emphasis> message (JobToken = JobToken2) to delete Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">DeleteRecordingJobResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Wait for JobState to get changed (use Operation Delay Time).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> (JobToken = JobToken1) request message to retrieve recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that State.State parameter value is equal to "Active" or "PartiallyActive". Check that State.State value equals to State.State value at step 9.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DeleteRecordingJobRequest</emphasis> message (JobToken = JobToken1) to delete Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">DeleteRecordingJobResponse</emphasis> message from the DUT.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">ConfigureReceiverResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingOptionsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingJobResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">DeleteRecordingJobResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned incorrect RecordingJobState in <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message at steps 9, 15, 18, 24.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent <emphasis role="bold">GetRecordingJobStateResponse</emphasis> at step 23 with State.State value different from State.State value at step 9.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

    </section>
    <!--General-->
    <section xml:id="tc.recording.general"
             xreflabel="Section 5.4">
      <title>General</title>
      <!--RECORDING-4-1-1-->
      <section xml:id="tc.RECORDING-4-1-1">
        <title>
          GET RECORDINGS
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-4-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetRecordings (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRecordings
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Recordings.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command. At least one recording exists for the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent at least two Recordings with the same RecordingToken in the <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--RECORDING-4-1-2-->
      <section xml:id="tc.RECORDING-4-1-2">
        <title>
          GET RECORDING CONFIGURATION
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-4-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetRecordingConfiguration (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRecordingConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Recording Configuration.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingConfigurationRequest</emphasis> message (RecordingToken = "Token1", where Token1 is the first RecordingItem.RecordingToken from the <emphasis role="bold">GetRecordingsResponse</emphasis> message) to retrieve recording configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingConfigurationResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Repeat steps 5-6 for all other recordings from the <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned different parameter values for the same recording in <emphasis role="bold">GetRecordingsResponse</emphasis> message and in <emphasis role="bold">GetRecordingConfigurationResponse</emphasis> message (see <xref linkend="Annex_ComparisonOfRecordings"/>).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any recordings in <emphasis role="bold">GetRecordingsResponse</emphasis> message, skip steps 5-7 and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Two recordings are supposed to be the same, if they have equal tokens.

        </para>
      </section>
      <!--RECORDING-4-1-3-->
      <section xml:id="tc.RECORDING-4-1-3">
        <title>
          GET RECORDING CONFIGURATION WITH INVALID TOKEN
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-4-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetRecordingConfiguration (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRecordingConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Recording Configuration with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the <emphasis role="bold">GetRecordingsResponse</emphasis> message contains at least one Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                If there is at least one Recording, then skip steps 6-7 and go to the step 8.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingRequest</emphasis> message to create new Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingConfigurationRequest</emphasis> message (invalid RecordingToken).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (InvalidArgVal/NoRecording).
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, though the specified are preferable.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_RecordingSourceInformationParametersMaximumLength"/> for Recording Source Information Parameters Length limitations.
        </para>
      </section>
      <!--RECORDING-4-1-4-->
      <section xml:id="tc.RECORDING-4-1-4">
        <title>
          GET RECORDING JOBS
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-4-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetRecordingJobs (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRecordingJobs
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Recording Jobs.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobsRequest</emphasis> message to retrieve a complete recording jobs list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobsResponse</emphasis> message from the DUT.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent at least two Recording Jobs with the same token in the <emphasis role="bold">GetRecordingJobsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--RECORDING-4-1-5-->
      <section xml:id="tc.RECORDING-4-1-5">
        <title>
          GET RECORDING JOB CONFIGURATION
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-4-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetRecordingJobConfiguration (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRecordingJobConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Recording Job Configuration.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobsRequest</emphasis> message to retrieve a complete recording jobs list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobsResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobConfigurationRequest</emphasis> message (JobToken = "Token1", where Token1 is the first JobItem.JobToken from the <emphasis role="bold">GetRecordingJobsResponse</emphasis> message) to retrieve recording job configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobConfigurationResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Repeat steps 7-8 for all other recording jobs from the <emphasis role="bold">GetRecordingJobsResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned different parameter values for the same recording job in <emphasis role="bold">GetRecordingJobsResponse</emphasis> message and in <emphasis role="bold">GetRecordingJobConfigurationResponse</emphasis> message (see <xref linkend="Annex_ComparisonOfRecordingJobs"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned JobItem.JobConfiguration.RecordingToken that does not exist in <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any recording in <emphasis role="bold">GetRecordingsResponse</emphasis> message, skip steps 5-9 and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any recording job in <emphasis role="bold">GetRecordingJobsResponse</emphasis> message, skip steps 7-9 and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Two recording jobs supposed to be the same, if they have equal tokens.

        </para>
      </section>
      <!--RECORDING-4-1-7-->
      <section xml:id="tc.RECORDING-4-1-7">
        <title>
          GET RECORDING JOB STATE
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-4-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetRecordingJobState (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRecordingJobState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Recording Job State.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobsRequest</emphasis> message to retrieve a complete recording jobs list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobsResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message (JobToken = "Token1", where Token1 is the first JobItem.JobToken from the <emphasis role="bold">GetRecordingJobsResponse</emphasis> message) to retrieve recording job state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Repeat steps 7-8 for all other recording jobs from the <emphasis role="bold">GetRecordingJobsResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned different parameter values for the same recording job in <emphasis role="bold">GetRecordingJobsResponse</emphasis> message and in <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message (see <xref linkend="Annex_ComparisonOfRecordingJobs2"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned JobItem.JobConfiguration.RecordingToken that does not exist in <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any recording in <emphasis role="bold">GetRecordingsResponse</emphasis> message, skip steps 5-9 and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any recording job in <emphasis role="bold">GetRecordingJobsResponse</emphasis> message, skip steps 7-9 and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Two recording jobs supposed to be the same, if they have equal tokens.

        </para>
      </section>
      <!--RECORDING-4-1-9-->
      <section xml:id="tc.RECORDING-4-1-9">
        <title>
          GET TRACK CONFIGURATION
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-4-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetTrackConfiguration (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetTrackConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Track Configuration.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetTrackConfigurationRequest</emphasis> message (RecordingToken = "RecordingToken1", where RecordingToken1 is the first RecordingItem.RecordingToken from the <emphasis role="bold">GetRecordingsResponse</emphasis> message; TrackToken = "TrackToken1", where TrackToken1 is the first RecordingItem.Tracks.Track.TrackToken for this RecordingItem from the <emphasis role="bold">GetRecordingsResponse</emphasis> message) to retrieve the configuration for a specific track.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetTrackConfigurationResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Repeat steps 5-6 for all other recording tracks from the <emphasis role="bold">GetRecordingsResponse</emphasis> message for RecordingToken1
              </para>
            </listitem>
            <listitem>
              <para>
                Repeat steps 5-7 for all other recording tokens from the <emphasis role="bold">GetRecordingsResponse</emphasis> message
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetTrackConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned different parameter values for the same track in <emphasis role="bold">GetTrackConfigurationResponse</emphasis> message and in <emphasis role="bold">GetRecordingsResponse</emphasis> message (see <xref linkend="Annex_ComparisonOfTracks"/>).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any tracks in <emphasis role="bold">GetRecordingsResponse</emphasis> message, skip steps 5-8 and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any recording in <emphasis role="bold">GetRecordingsResponse</emphasis> message, skip steps 5-8 and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Two tracks supposed to be the same, if they have equal tokens and placed in one recording.

        </para>
      </section>
      <!--RECORDING-4-1-10-->
      <section xml:id="tc.RECORDING-4-1-10">
        <title>
          GET TRACK CONFIGURATION WITH INVALID TOKEN
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-4-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetTrackConfiguration (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetTrackConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Track Configuration with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the <emphasis role="bold">GetRecordingsResponse</emphasis> message contains at least one Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                If there is at least one Recording, then skip steps 6-9 and go to the step 10.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingRequest</emphasis> message to create new Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve TrackToken of created recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT (TrackToken = TrackToken1).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetTrackConfigurationRequest</emphasis> message (invalid TrackToken).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (InvalidArgVal/ NoTrack).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetTrackConfigurationRequest</emphasis> message (invalid RecordingToken).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (InvalidArgVal/ NoRecording).
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an incorrect SOAP 1.2 fault message (fault code, namespace, etc.).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, though the specified are preferable.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Skip the test in case of fault in <emphasis role="bold">CreateRecordingResponse</emphasis> message.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_RecordingSourceInformationParametersMaximumLength"/> for Recording Source Information Parameters Length limitations.

        </para>
      </section>
      <!--RECORDING-4-1-11-->
      <section xml:id="tc.RECORDING-4-1-11">
        <title>
          SET RECORDINGS CONFIGURATION (MAXIMUM LENGTH OF RECORDING SOURCE INFORMATION)
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-4-1-11
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Recording Source Information &amp; wsdl (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRecordingConfiguration, SetRecordingConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify applying of recording source information (Name, Address, SourceId) with maximum length by the DUT.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command. At least one recording exists for a DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT. Select one of the recordings to use it in the further steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetRecordingConfigurationRequest</emphasis> message (RecordingToken = [selected recording], RecordingConfiguration.Source.Name = [string with length 20 characters, which contains only readable characters and begins with letter], RecordingConfiguration.Source.SourceId = [valid URI with length 128 characters], RecordingConfiguration.Source.Address = [valid URI with length 128 characters], other Recording Configuration parameters without change) to configure Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">SetRecordingConfigurationResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingConfigurationRequest</emphasis> message for selected Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingConfigurationResponse</emphasis> messages from the DUT. Verify that RecordingConfiguration.Source.Name, RecordingConfiguration.Source.SourceId, RecordingConfiguration.Source.Address settings were applied.
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">SetRecordingConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not apply RecordingConfiguration.Source.Name, RecordingConfiguration.Source.SourceId, RecordingConfiguration.Source.Address settings.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_RecordingSourceInformationParametersMaximumLength"/> for Recording Source Information Parameters Length limitations.
        </para>
      </section>
      <!--RECORDING-4-1-12-->
      <section xml:id="tc.RECORDING-4-1-12">
        <title>
          DYNAMIC RECORDINGS CONFIGURATION (MAXIMUM LENGTH OF RECORDING SOURCE INFORMATION)
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-4-1-12
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Recording Source Information &amp; wsdl (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateRecordingConfiguration, GetRecordingConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify applying of recording source information (Name, Address, SourceId) with maximum length by the DUT during Recording creation.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command. Dynamic Recording functionality is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_RecordingCreationPrerequisite"/> for possibility to create a new recording.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingRequest</emphasis> message with RecordingConfiguration.Source.Address = [valid URI with length 128 characters], RecordingConfiguration.Source.Name = [string with length 20 characters, which contains only readable characters and begins with letter], RecordingConfiguration.Source.Location = "LocationDescription", RecordingConfiguration.Source.Description = "Source Description", RecordingConfiguration.Source.SourceId = [valid URI with length 128 characters], RecordingConfiguration.Content = "Create recording event test", RecordingConfiguration.MaximumRetentionTime = [acceptable MaximumRetentionTime] to create a new recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingResponse</emphasis> message from the DUT (RecordingToken = RecordingToken1).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingConfigurationRequest</emphasis> message (RecordingToken = RecordingToken1) to get Recording configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingConfigurationResponse</emphasis> messages from the DUT. Verify that RecordingConfiguration.Source.Name, RecordingConfiguration.Source.SourceId, RecordingConfiguration.Source.Address settings were applied.
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not apply RecordingConfiguration.Source.Name, RecordingConfiguration.Source.SourceId, RecordingConfiguration.Source.Address settings.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_RecordingSourceInformationParametersMaximumLength"/> for Recording Source Information Parameters Length limitations.
        </para>
      </section>
      <!--RECORDING-4-1-13-->
      <section xml:id="tc.RECORDING-4-1-13">
        <title>
          GET RECORDING JOB CONFIGURATION WITH INVALID TOKEN
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-4-1-13
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetRecordingJobConfiguration (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRecordingJobConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Recording Job Configuration with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices command. Media Service or Receiver Service was received from the DUT. At least one media profile compatible with at least one existing or created recording exists on the DUT. Options are supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobsRequest</emphasis> message to retrieve a complete recording jobs list.
              </para>
            </listitem>
            <listitem>
              <para>
                If there is at least one RecordingJob, then skip steps 5-16 and go to the step 11.
              </para>
            </listitem>
            <listitem>
              <para>
                If Receiver service is supported, then ONVIF Client execute <xref linkend="Annex_CreationOfRecording"/> with RequiredSpareJobs = 0 to create or select Recording to make sure that 1 recording job can be created.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = "RecordingToken1", JobConfiguration.Mode = "Idle", JobConfiguration.Priority = 1, no JobConfiguration.Source.SourceToken.Token, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Receiver", JobConfiguration.Source.AutoCreateReceiver = true) to create a recording job and auto create receiver.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">CreateRecordingJobResponse</emphasis> from the DUT and go to step 10.
              </para>
            </listitem>
            <listitem>
              <para>
                If Receiver service is not supported ONVIF Client execute <xref linkend="Annex_SelectionOfRecordingMediaProfile"/> with RequiredSpareJobs = 0 to create or select Recording (RecordingToken = RecordingToken1) to make sure that 1 recording job can be created and to get the compatible media profile tokens list.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = RecordingToken1, JobConfiguration.Mode = Idle, JobConfiguration.Priority = 1, JobConfiguration.Source.SourceToken.Token = "ProfileToken1", where ProfileToken1 is token of MediaProfile from Compatible Sources list, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Profile", JobConfiguration.Source.AutoCreateReceiver is not present) to create a recording job with Idle mode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingJobResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobConfigurationRequest</emphasis> message (invalid JobToken).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (InvalidArgVal/NoRecordingJob).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores recording jobs if they were changed in step 9.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingJobResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message at step 11.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an incorrect SOAP 1.2 fault message (fault code, namespace, etc.) at step 11.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, though the specified are preferable.
        </para>
      </section>
      <!--RECORDING-4-1-14-->
      <section xml:id="tc.RECORDING-4-1-14">
        <title>
          GET RECORDING JOB STATE WITH INVALID TOKEN
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-4-1-14
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetRecordingJobState (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRecordingJobState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Recording Job Sate with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command. At least one media profile compatible with at least one existing or created recording exists on the DUT. Options are supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobsRequest</emphasis> message to retrieve a complete recording jobs list.
              </para>
            </listitem>
            <listitem>
              <para>
                If there is at least one RecordingJob, then skip steps 5-10 and go to the step 11.
              </para>
            </listitem>
            <listitem>
              <para>
                If Receiver service is supported, then ONVIF Client execute <xref linkend="Annex_CreationOfRecording"/> with RequiredSpareJobs = 0 to create or select Recording to make sure that 1 recording job can be created.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = "RecordingToken1", JobConfiguration.Mode = "Idle", JobConfiguration.Priority = 1, no JobConfiguration.Source.SourceToken.Token, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Receiver", JobConfiguration.Source.AutoCreateReceiver = true) to create a recording job and auto create receiver.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">CreateRecordingJobResponse</emphasis> from the DUT and go to step 11.
              </para>
            </listitem>
            <listitem>
              <para>
                If Receiver service is not supported ONVIF Client execute <xref linkend="Annex_SelectionOfRecordingMediaProfile"/> with RequiredSpareJobs = 0 to create or select Recording (RecordingToken = RecordingToken1) to make sure that 1 recording job can be created and to get the compatible media profile tokens list.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = RecordingToken1, JobConfiguration.Mode = Idle, JobConfiguration.Priority = 1, JobConfiguration.Source.SourceToken.Token = "ProfileToken1", where ProfileToken1 is token of MediaProfile from Compatible Sources list, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Profile", JobConfiguration.Source.AutoCreateReceiver is not present) to create a recording job with Idle mode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingJobResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message (invalid JobToken).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (InvalidArgVal/NoRecordingJob).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores recording jobs if they were changed in step 9.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingJobResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an incorrect SOAP 1.2 fault message (fault code, namespace, etc.).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, though the specified are preferable.
        </para>
      </section>

    </section>
    <!--Events-->
    <section xml:id="tc.recording.events"
             xreflabel="Section 5.5">
      <title>Events</title>
      <!--RECORDING-5-1-3-->
      <section xml:id="tc.RECORDING-5-1-3">
        <title>
          RECORDING CONTROL – RECORDING CONFIGURATION EVENT
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-5-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Configuration changes (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRecordingConfiguration, SetRecordingConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:RecordingConfig/RecordingConfiguration event generation after recording configuration change, to verify tns1:RecordingConfig/RecordingConfiguration event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command. At least one recording exists for a DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT. Select one of the recordings to use it in the further steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventPropertiesRequest</emphasis> message to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:RecordingConfig/RecordingConfiguration. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = false).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "RecordingToken" and Type = "tt:RecordingReference".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.ElementItemDescription item with Name = "Configuration" and Type = "tt:RecordingConfiguration".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/RecordingConfiguration Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetRecordingConfigurationRequest</emphasis> message (RecordingToken = [selected recording], RecordingConfiguration.Source.Name = [other than current], other Recording Configuration parameters without change) to configure Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">SetRecordingConfigurationResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step 15 until Notification for selected Recording is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:RecordingConfig/RecordingConfiguration for received Notify message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "RecordingToken" and Value is equal to selected Recording Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Data.ElementItem item with Name = "Configuration" and Value with type is equal to tt:RecordingConfiguration (validation with XML Schema complex type).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingConfigurationRequest</emphasis> message for selected Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingConfigurationResponse</emphasis> messages from the DUT. Verify that Data.ElementItem item with Name = "Configuration" from Notification message has the same value with RecordingConfiguration element from <emphasis role="bold">GetRecordingConfigurationResponse</emphasis> messages for selected Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">SetRecordingConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message with at least one recording.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:RecordingConfig/RecordingConfiguration for selected Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem, Data.SimpleItem, or Data.ElementItem wrong type of Value fields, invalid RecordingToken or Configuration values).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT does not return valid tns1:RecordingConfig/RecordingConfiguration Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step 16 will wait for Notification message until notification for selected Recording is received or Operation Delay after last notification expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires. If DUT returns UnacceptableTerminationTimeFault, resend Renew request with acceptable InitialTerminationTime from UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_RecordingSourceInformationParametersMaximumLength"/> for Recording Source Information Parameters Length limitations.
        </para>
      </section>
      <!--RECORDING-5-1-4-->
      <section xml:id="tc.RECORDING-5-1-4">
        <title>
          RECORDING CONTROL – TRACK CONFIGURATION EVENT
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-5-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Configuration changes (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetTrackConfiguration, SetTrackConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:RecordingConfig/TrackConfiguration event generation after track configuration change, to verify tns1:RecordingConfig/TrackConfiguration event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command. At least one recording with track exists for the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT. Select one of the recording tracks to use it in the further steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventPropertiesRequest</emphasis> message to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:RecordingConfig/TrackConfiguration. If there is no event with such Topic, skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = false).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "RecordingToken" and Type = "tt:RecordingReference".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "TrackToken" and Type = "tt:TrackReference".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.ElementItemDescription item with Name = "Configuration" and Type = "tt:TrackConfiguration".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/TrackConfiguration Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetTrackConfigurationRequest</emphasis> message (RecordingToken = [selected recording], TrackToken = [selected track], TrackConfiguration.Description = [other than current], other Recording Configuration parameters without change) to configure Track.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">SetTrackConfigurationResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step 16 until Notification for selected Track is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:RecordingConfig/TrackConfiguration for received Notify message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "RecordingToken" and Value is equal to selected Recording Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "TrackToken" and Value is equal to selected Track Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Data.ElementItem item with Name = "Configuration" and Value with type is equal to tt:TrackConfiguration (validation with XML Schema complex type).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetTrackConfigurationRequest</emphasis> message for selected Track and corresponding Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetTrackConfigurationResponse</emphasis> messages from the DUT. Verify that Data.ElementItem item with Name = "Configuration" from Notification message has the same value with TrackConfiguration element from <emphasis role="bold">GetTrackConfigurationResponse</emphasis> messages for selected Track.
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">SetTrackConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetTrackConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message with at least one recording with track.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:RecordingConfig/TrackConfiguration for selected Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem, Data.SimpleItem, or Data.ElementItem wrong type of Value fields, invalid RecordingToken, TrackToken, or Configuration values).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT does not return valid tns1:RecordingConfig/TrackConfiguration Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step 17 will wait for Notification message until notification for selected Track is received or Operation Delay after last notification expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires. If DUT returns UnacceptableTerminationTimeFault, re-send Renew request with acceptable InitialTerminationTime from UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--RECORDING-5-1-6-->
      <section xml:id="tc.RECORDING-5-1-6">
        <title>
          RECORDING CONTROL – CREATE RECORDING EVENT
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-5-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Recording and track creation and deletion (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateRecordingConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:RecordingConfig/CreateRecording event generation after recording creation, to verify tns1:RecordingConfig/CreateRecording event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command. Dynamic Recording functionality is supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_RecordingCreationPrerequisite"/> for possibility to create a new recording.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventPropertiesRequest</emphasis> message to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:RecordingConfig/CreateRecording. If there is no event with such Topic, skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = false).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "RecordingToken" and Type = "tt:RecordingReference".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/CreateRecording Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingRequest</emphasis> message with RecordingConfiguration.Source.SourceId as any URI, RecordingConfiguration.Source.Name = "CameraName", RecordingConfiguration.Source.Location = "LocationDescription", RecordingConfiguration.Source.Description = "Source Description", RecordingConfiguration.Source.Address as address of the device, RecordingConfiguration.Content = "Create recording event test", RecordingConfiguration.MaximumRetentionTime = [acceptable MaximumRetentionTime] to create a new recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingResponse</emphasis> message from the DUT (RecordingToken = RecordingToken1).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step 13 until Notification for created Recording is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:RecordingConfig/CreateRecording for received Notify message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "RecordingToken" and Value is equal to created Recording Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:RecordingConfig/CreateRecording for created Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem, Data.SimpleItem, wrong type of Value fields, invalid RecordingToken).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT does not return a valid tns1:RecordingConfig/CreateRecording Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step 14 will wait for Notification message until notification for created Recording is received or Operation Delay after last notification expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires. If DUT returns UnacceptableTerminationTimeFault, resend Renew request with acceptable InitialTerminationTime from UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_RecordingSourceInformationParametersMaximumLength"/> for Recording Source Information Parameters Length limitations.

        </para>
      </section>
      <!--RECORDING-5-1-8-->
      <section xml:id="tc.RECORDING-5-1-8">
        <title>
          RECORDING CONTROL – CREATE TRACK EVENT
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-5-1-8
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Recording and track creation and deletion (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:RecordingConfig/CreateTrack event format in TopicSet.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Dynamic Recording or dynamic track functionality is supported by the DUT. 
         
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventPropertiesRequest</emphasis> message to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:RecordingConfig/CreateTrack. If there is no event with such Topic, skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = false).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "RecordingToken" and Type = "tt:RecordingReference".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "TrackToken" and Type = "tt:TrackReference".
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT does not return valid tns1:RecordingConfig/CreateTrack Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--RECORDING-5-1-9-->
      <section xml:id="tc.RECORDING-5-1-9">
        <title>
          RECORDING CONTROL – DELETE TRACK EVENT
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-5-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Recording and track creation and deletion (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:RecordingConfig/DeleteTrack event format in TopicSet.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Dynamic Recording or dynamic track functionality is supported by the DUT.   
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventPropertiesRequest</emphasis> message to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:RecordingConfig/DeleteTrack. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = false).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "RecordingToken" and Type = "tt:RecordingReference".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "TrackToken" and Type = "tt:TrackReference".
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT does not return a valid tns1:RecordingConfig/DeleteTrack Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--RECORDING-5-1-10-->
      <section xml:id="tc.RECORDING-5-1-10">
        <title>
          RECORDING CONTROL – CREATE TRACK EVENT (CREATE RECORDING)
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-5-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Recording and track creation and deletion (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateRecording
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:RecordingConfig/CreateTrack event generation after recording creation, to verify tns1:RecordingConfig/CreateTrack event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command. Dynamic Recording functionality is supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_RecordingCreationPrerequisite"/> for possibility to create a new recording.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/CreateTrack Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingRequest</emphasis> message with RecordingConfiguration.Source.SourceId as any URI, RecordingConfiguration.Source.Name = "CameraName", RecordingConfiguration.Source.Location = "LocationDescription", RecordingConfiguration.Source.Description = "Source Description", RecordingConfiguration.Source.Address as address of the device, RecordingConfiguration.Content = "Create recording event test", RecordingConfiguration.MaximumRetentionTime = [acceptable MaximumRetentionTime] to create a new recording with default tracks.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingResponse</emphasis> message from the DUT (RecordingToken = RecordingToken1).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 2.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step 8 until Notifications for all default tracks for created Recording are received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:RecordingConfig/CreateTrack for all received Notify messages.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Source.SimpleItem item with Name = "RecordingToken" and Value is equal to created Recording Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that there is one notification for each default tracks of created recording (notification contains Source.SimpleItem item with Name = "TrackToken" with Value is equal to each Track Token).
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:RecordingConfig/CreateTrack for at least one Track from created Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem, Data.SimpleItem, wrong type of Value fields, invalid TrackToken or RecordingToken).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step 9 will wait for Notification message until all notifications for each track for created Recording is received or Operation Delay after last notification expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires. If DUT returns UnacceptableTerminationTimeFault, resend Renew request with acceptable InitialTerminationTime from UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_RecordingSourceInformationParametersMaximumLength"/> for Recording Source Information Parameters Length limitations.
        </para>
      </section>
      <!--RECORDING-5-1-11-->
      <section xml:id="tc.RECORDING-5-1-11">
        <title>
          RECORDING CONTROL – DELETE TRACK EVENT (DELETE RECORDING)
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-5-1-11
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Recording and track creation and deletion (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteRecording
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:RecordingConfig/DeleteTrack event generation after recording deletion, to verify tns1:RecordingConfig/DeleteTrack event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command. Dynamic Recording functionality is supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_RecordingCreationPrerequisite"/> for possibility to create a new recording.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingRequest</emphasis> message with RecordingConfiguration.Source.SourceId as any URI, RecordingConfiguration.Source.Name = "CameraName", RecordingConfiguration.Source.Location = "LocationDescription", RecordingConfiguration.Source.Description = "Source Description", RecordingConfiguration.Source.Address as address of the device, RecordingConfiguration.Content = "Create recording event test", RecordingConfiguration.MaximumRetentionTime = [acceptable MaximumRetentionTime] to create a new recording with default tracks.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingResponse</emphasis> message from the DUT (RecordingToken = RecordingToken1).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/DeleteTrack Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DeleteRecordingRequest</emphasis> message (RecordingToken = RecordingToken1) to delete the created recording with default tracks.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">DeleteRecordingResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 2.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step 10 until Notifications for all default tracks for created Recording are received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:RecordingConfig/DeleteTrack for all received Notify messages.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Source.SimpleItem item with Name = "RecordingToken" and Value is equal to created Recording Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that there is one notification for each default tracks of deleted recording (notification contains Source.SimpleItem item with Name = "TrackToken" with Value is equal to each Track Token).
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:RecordingConfig/CreateTrack for at least one Track from created Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem, Data.SimpleItem, and wrong type of Value fields, invalid TrackToken or RecordingToken).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step 11 will wait for Notification message until all notifications for each track for deleted Recording is received or Operation Delay after last notification expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires. If DUT returns UnacceptableTerminationTimeFault, resend Renew request with acceptable InitialTerminationTime from UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_RecordingSourceInformationParametersMaximumLength"/> for Recording Source Information Parameters Length limitations.
        </para>
      </section>
      <!--RECORDING-5-1-14-->
      <section xml:id="tc.RECORDING-5-1-14">
        <title>
          RECORDING CONTROL – DELETE TRACK DATA EVENT
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-5-1-14
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Data deletion (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:RecordingConfig/DeleteTrackData event format in TopicSet.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Dynamic Recording or dynamic track functionality is supported by the DUT. tns1:RecordingConfig/DeleteTrackData event is supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventPropertiesRequest</emphasis> message to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:RecordingConfig/DeleteTrackData. If there is no event with such Topic, skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = false).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "RecordingToken" and Type = "tt:RecordingReference".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "TrackToken" and Type = "tt:TrackReference".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "StartTime" and Type = "xs:dateTime".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "EndTime" and Type = "xs:dateTime".
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT does not return a valid tns1:RecordingConfig/DeleteTrackData Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--RECORDING-5-1-15-->
      <section xml:id="tc.RECORDING-5-1-15">
        <title>
          RECORDING CONTROL – CREATE TRACK EVENT (CREATE TRACK)
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-5-1-15
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Recording and track creation and deletion (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateTrack
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:RecordingConfig/CreateTrack event generation after track creation, to verify tns1:RecordingConfig/CreateTrack event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices command. Dynamic Track functionality is supported by the DUT. Options are supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_SelectionOfRecording"/> to create or select Recording to make sure that track creation procedure will be possible.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/CreateTrack Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateTrackRequest</emphasis> message (RecordingToken=RecordingToken1 where RecordingToken1 is RecordingToken from <xref linkend="Annex_SelectionOfRecording"/>, TrackConfiguration.TrackType as track type from <xref linkend="Annex_SelectionOfRecording"/>, TrackConfiguration.Description = 'New Track') to create a new track in the recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateTrackResponse</emphasis> message (TrackToken = TrackToken1) from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 2.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step 8 until Notification for created Track is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:RecordingConfig/CreateTrack for received Notify message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "RecordingToken" and Value is equal to selected Recording Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "TrackToken" and Value is equal to created Track Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateTrackResponse</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will not allow creating new Track for selected Recording
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:RecordingConfig/CreateTrack for created Track.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem, Data.SimpleItem, wrong type of Value fields, invalid TrackToken or RecordingToken).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step 9 will wait for Notification message until Notification for created Track is received or Operation Delay after last notification expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime. expires. If DUT returns UnacceptableTerminationTimeFault, resend Renew request with acceptable InitialTerminationTime from UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> DUT shall provide Recording with Options.Track.SpareTotal>0 to avoid track's data deletion.

        </para>
      </section>
      <!--RECORDING-5-1-16-->
      <section xml:id="tc.RECORDING-5-1-16">
        <title>
          RECORDING CONTROL – DELETE TRACK EVENT (DELETE TRACK)
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-5-1-16
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Recording and track creation and deletion (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteTrack
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:RecordingConfig/DeleteTrack event generation after track creation, to verify tns1:RecordingConfig/DeleteTrack event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices command. Dynamic Track functionality is supported by the DUT. Options are supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <xref linkend="Annex_SelectionOfRecording"/> to create or select Recording to make sure that track creation procedure will be possible.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateTrackRequest</emphasis> message (RecordingToken=RecordingToken1 where RecordingToken1 is RecordingToken from <xref linkend="Annex_SelectionOfRecording"/>, TrackConfiguration.TrackType as track type from <xref linkend="Annex_SelectionOfRecording"/>, TrackConfiguration.Description = 'New Track') to create a new track in the recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateTrackResponse</emphasis> message (TrackToken = TrackToken1) from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/DeleteTrack Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DeleteTrackRequest</emphasis> message (RecordingToken = RecordingToken1, TrackToken = TrackToken1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">DeleteTrackResponse</emphasis> message from the DUT. In case SOAP 1.2 fault message repeat steps 7-8 for the next track. If there is no other tracks to be deleted fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 2.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step 10 until Notification for created Track is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:RecordingConfig/DeleteTrack for received Notify message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "RecordingToken" and Value is equal to selected Recording Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "TrackToken" and Value is equal to deleted Track Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">CreateTrackResponse</emphasis> message or corresponding SOAP 1.2 fault if it is not possible.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will not allow deleting the Track for selected Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">DeleteTrackResponse</emphasis> message or corresponding SOAP 1.2 fault if it is not possible.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:RecordingConfig/DeleteTrack for created Track.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem, Data.SimpleItem, wrong type of Value fields, invalid TrackToken or RecordingToken).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step 11 will wait for Notification message until notification for deleted track is received or Operation Delay after last notification expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires. If DUT returns UnacceptableTerminationTimeFault, resend Renew request with acceptable InitialTerminationTime from UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> DUT shall provide Recording with Options.Track.SpareTotal > 0 to avoid track's data deletion.
        </para>
      </section>
      <!--RECORDING-5-1-17-->
      <section xml:id="tc.RECORDING-5-1-17">
        <title>
          RECORDING CONTROL – DELETE RECORDING EVENT
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-5-1-17
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Recording and track creation and deletion (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteRecordingConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:RecordingConfig/DeleteRecording event generation after recording deletion, to verify tns1:RecordingConfig/DeleteRecording event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices/GetCapabilities command. Dynamic Recording functionality is supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingRequest</emphasis> message with RecordingConfiguration.Source.SourceId as any URI, RecordingConfiguration.Source.Name = "CameraName", RecordingConfiguration.Source.Location = "LocationDescription", RecordingConfiguration.Source.Description = "Source Description", RecordingConfiguration.Source.Address as address of the device, RecordingConfiguration.Content = "Recording from device", RecordingConfiguration.MaximumRetentionTime = "PT0S" to create a new recording.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingResponse</emphasis> message or SOAP 1.2 fault message from the DUT. If DUT returns <emphasis role="bold">CreateRecordingResponse</emphasis> message go to 7 step and use created recording.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT. ONVIF Client selects the first recording from the <emphasis role="bold">GetRecordingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventPropertiesRequest</emphasis> message to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:RecordingConfig/DeleteRecording. If there is no event with such Topic, skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = false).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "RecordingToken" and Type = "tt:RecordingReference".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/DeleteRecording Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DeleteRecordingRequest</emphasis> for selected Recoding.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">DeleteRecordingResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step 16 until Notification for created Recording is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:RecordingConfig/DeleteRecording for received Notify message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "RecordingToken" and Value is equal to deleted Recording Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">DeleteRecordingResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:RecordingConfig/DeleteRecording for deleted Recording.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem, Data.SimpleItem, wrong type of Value fields, invalid RecordingToken).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT does not return valid tns1:RecordingConfig/DeleteRecording Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sends empty recording list at the step 6.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step 17 will wait for Notification message until notification for created Recording is received or Operation Delay after last notification expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires. If DUT returns UnacceptableTerminationTimeFault, resend Renew request with acceptable InitialTerminationTime from UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--RECORDING-5-1-18-->
      <section xml:id="tc.RECORDING-5-1-18">
        <title>
          RECORDING CONTROL – JOB STATE EVENT
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-5-1-18
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Recording job state changes (ONVIF Recording Control Service Specification), Properties (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRecordingJobState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:RecordingConfig/JobState event generation after subscription and to verify tns1:RecordingConfig/JobState event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. ONVIF Client gets the entry point for Recording Control Service by GetServices. Media Service or Receiver Service was received from the DUT. At least one recording exists. All recording jobs were stopped. At least one media profile compatible with at least one existing or created recording exists on the DUT. Options are supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobsRequest</emphasis> message to retrieve a complete recording jobs list.
              </para>
            </listitem>
            <listitem>
              <para>
                If there is at least one RecordingJob, then skip steps 5-10 and go to the step 11.
              </para>
            </listitem>
            <listitem>
              <para>
                If Receiver service is supported, then ONVIF Client execute <xref linkend="Annex_CreationOfRecording"/> with RequiredSpareJobs = 0 to create or select Recording to make sure that 1 recording job can be created.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = "RecordingToken1", JobConfiguration.Mode = "Idle", JobConfiguration.Priority = 1, no JobConfiguration.Source.SourceToken.Token, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Receiver", JobConfiguration.Source.AutoCreateReceiver = true) to create a recording job and auto create receiver.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">CreateRecordingJobResponse</emphasis> from the DUT and go to step 11.
              </para>
            </listitem>
            <listitem>
              <para>
                If Receiver service is not supported, ONVIF Client execute <xref linkend="Annex_SelectionOfRecordingMediaProfile"/> with RequiredSpareJobs = 0 to create or select Recording (RecordingToken = RecordingToken1) to make sure that 1 recording job can be created and to get the compatible media profile tokens list.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = RecordingToken1, JobConfiguration.Mode = Idle, JobConfiguration.Priority = 1, JobConfiguration.Source.SourceToken.Token = "ProfileToken1", where ProfileToken1 is token of MediaProfile from Compatible Sources list, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Profile", JobConfiguration.Source.AutoCreateReceiver is not present) to create a recording job with Idle mode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingJobResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventPropertiesRequest</emphasis> message to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:RecordingConfig/JobState. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is a Property event (MessageDescription.IsProperty = true).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "RecordingJobToken" and Type = "tt:RecordingJobReference".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "State" and Type = "xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                If event contains Data.ElementItemDescription item with Name = "Information", check that its Type = "tt:RecordingJobStateInformation".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/JobState Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 2.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step 20 until Notifications for all Jobs are received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:RecordingConfig/JobState for all received Notify messages.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Source.SimpleItem item with Name = "RecordingJobToken" and Value is equal to one of existing Recording Job Tokens (e.g. complete list of Recording Jobs contains Recording Job with the same token). Verify that there are Notification messages for each Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to xs:string.
              </para>
            </listitem>
            <listitem>
              <para>
                If notification contains Data.ElementItem item with Name = "Information", verify that its Value type is equal to tt:RecordingJobStateInformation (validation with XML Schema complex type).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that Notify PropertyOperation = "Initialized".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message for each Recording Job with corresponding tokens.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> messages from the DUT. Verify that Data.ElementItem item with Name = "Information" from Notification message has the same value with State element from corresponding <emphasis role="bold">GetRecordingJobStateResponse</emphasis> messages for each Recording Job. Verify that Data.SimpleItem item with Name = "State" from Notification message has the same value with State.State element from corresponding <emphasis role="bold">GetRecordingJobStateResponse</emphasis> messages for each Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingJobResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:RecordingConfig/JobState at least for one Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem, Data.SimpleItem, or Data.ElementItem wrong type of Value fields, invalid RecordingJobToken, State, or Information values, PropertyOperation is not equal to "Initialized").
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT does not return valid tns1:RecordingConfig/JobState Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step 20 will wait for Notification messages until notification for all Recording Job is received or Operation Delay after last notification expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during the test, if InitialTerminationTime expires. If DUT returns UnacceptableTerminationTimeFault, resend Renew request with acceptable InitialTerminationTime from UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--RECORDING-5-1-19-->
      <section xml:id="tc.RECORDING-5-1-19">
        <title>
          RECORDING CONTROL – JOB STATE CHANGE EVENT
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-5-1-19
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Recording job state changes (ONVIF Recording Control Service Specification), Properties (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRecordingJobState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, recording.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:RecordingConfig/JobState event generation after property was changed and to verify tns1:RecordingConfig/JobState event format. Options are supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. ONVIF Client gets the entry point for Recording Control Service by GetServices command. Media Service or Receiver Service was received from the DUT. At least one recording exists. All recording jobs were stopped. At least one media profile compatible with at least one existing or created recording exists on the DUT. Options are supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT.
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobsRequest</emphasis> message to retrieve a complete recording jobs list.
              </para>
            </listitem>
            <listitem>
              <para>
                If there is at least one RecordingJob, then skip steps 5-10 and go to the step 11.
              </para>
            </listitem>
            <listitem>
              <para>
                If Receiver service is supported, then ONVIF Client execute <xref linkend="Annex_CreationOfRecording"/> with RequiredSpareJobs = 0 to create or select Recording to make sure that 1 recording job can be created.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = "RecordingToken1", JobConfiguration.Mode = "Idle", JobConfiguration.Priority = 1, no JobConfiguration.Source.SourceToken.Token, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Receiver", JobConfiguration.Source.AutoCreateReceiver = true) to create a recording job and auto create receiver.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">CreateRecordingJobResponse</emphasis> from the DUT and go to step 11.
              </para>
            </listitem>
            <listitem>
              <para>
                If Receiver service is not supported ONVIF Client execute <xref linkend="Annex_SelectionOfRecordingMediaProfile"/> with RequiredSpareJobs = 0 to create or select Recording (RecordingToken = RecordingToken1) to make sure that 1 recording job can be created and to get the compatible media profile tokens list.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = RecordingToken1, JobConfiguration.Mode = Idle, JobConfiguration.Priority = 1, JobConfiguration.Source.SourceToken.Token = "ProfileToken1", where ProfileToken1 is token of MediaProfile from Compatible Sources list, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Profile", JobConfiguration.Source.AutoCreateReceiver is not present) to create a recording job with Idle mode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingJobResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/JobState Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 2.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step 14 until Notification for selected Recording Job is received.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetRecordingJobModeRequest</emphasis> message (JobToken = [selected job token], Mode = [other than current]) to change Recording Job state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 2.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step 17 until Notification for selected Recording Job is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:RecordingConfig/JobState for received Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "RecordingJobToken" and Value is equal to one of existing Recording Job Tokens (e.g. complete list of Recording Jobs contains Recording Job with the same token). Verify that there are Notification messages for selected Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to xs:string.
              </para>
            </listitem>
            <listitem>
              <para>
                If notification contains Data.ElementItem item with Name = "Information", verify that its Value type is equal to tt:RecordingJobStateInformation (validation with XML Schema complex type).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that Notify PropertyOperation = "Changed".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobStateRequest</emphasis> message for selected Recording Job with corresponding tokens.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobStateResponse</emphasis> messages from the DUT. 
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that Data.ElementItem item with Name = "State" from Notification message has the same value with State.State element from corresponding <emphasis role="bold">GetRecordingJobStateResponse</emphasis> messages for selected Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                If Information element present in notification
                <orderedlist numeration="arabic" inheritnum="inherit">
			<?dbfo label-width=2.5em"?>
			<listitem>
				<para>
Verify that Data.ElementItem item with Name = "Information" from Notification message has the same value with State element from corresponding <emphasis role="bold">GetRecordingJobStateResponse</emphasis> messages for selected Recording Job.
				</para>
			</listitem>
		</orderedlist>
                
            
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetRecordingJobModeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingJobResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:RecordingConfig/JobState for selected Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem, Data.SimpleItem, or Data.ElementItem wrong type of Value fields, invalid RecordingJobToken, State or Information values, PropertyOperation is not equal to "Changed").
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at steps 15 and 18 will wait for Notification messages until notification for selected Recording Job is received or Operation Delay after last notification expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires. If DUT returns UnacceptableTerminationTimeFault, resend Renew request with acceptable InitialTerminationTime from UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> All Notification messages for Recording Job other than selected will be ignored during this test.

        </para>
      </section>
      <!--RECORDING-5-1-20-->
      <section xml:id="tc.RECORDING-5-1-20">
        <title>
          RECORDING CONTROL – RECORDING JOB CONFIGURATION EVENT
        </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> RECORDING-5-1-20
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Configuration changes (ONVIF Recording Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRecordingJobConfiguration, SetGetRecordingJobConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> recording.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:RecordingConfig/RecordingJobConfiguration event generation after recording job configuration change, to verify tns1:RecordingConfig/RecordingJobConfiguration event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> ONVIF Client gets the entry point for Recording Control Service by GetServices command. Media Service or Receiver Service was received from the DUT. At least one media profile compatible with at least one existing or created recording exists on the DUT. Options are supported by the DUT. 
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobsRequest</emphasis> message to retrieve a complete recording jobs list.
              </para>
            </listitem>
            <listitem>
              <para>
                If there is at least one RecordingJob, then skip steps 5-10 and go to the step 11.
              </para>
            </listitem>
            <listitem>
              <para>
                If Receiver service is supported, then ONVIF Client execute <xref linkend="Annex_CreationOfRecording"/> with RequiredSpareJobs = 0 to create or select Recording to make sure that 1 recording job can be created.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = "RecordingToken1", JobConfiguration.Mode = "Idle", JobConfiguration.Priority = 1, no JobConfiguration.Source.SourceToken.Token, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Receiver", JobConfiguration.Source.AutoCreateReceiver = true) to create a recording job and auto create receiver.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">CreateRecordingJobResponse</emphasis> from the DUT and go to step 11.
              </para>
            </listitem>
            <listitem>
              <para>
                If Receiver service is not supported ONVIF Client execute <xref linkend="Annex_SelectionOfRecordingMediaProfile"/> with RequiredSpareJobs = 0 to create or select Recording (RecordingToken = RecordingToken1) to make sure that 1 recording job can be created and to get the compatible media profile tokens list.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = RecordingToken1, JobConfiguration.Mode = Idle, JobConfiguration.Priority = 1, JobConfiguration.Source.SourceToken.Token = "ProfileToken1", where ProfileToken1 is token of MediaProfile from Compatible Sources list, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Profile", JobConfiguration.Source.AutoCreateReceiver is not present) to create a recording job with Idle mode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">CreateRecordingJobResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventPropertiesRequest</emphasis> message to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:RecordingConfig/RecordingJobConfiguration. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = false).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "RecordingJobToken" and Type = "tt:RecordingJobReference".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.ElementItemDescription item with Name = "Configuration" and Type = "tt:RecordingJobConfiguration".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscriptionRequest</emphasis> message with tns1:RecordingConfig/RecordingJobConfiguration Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke SetRecordingJobConfigurationRequest message (JobToken = "JobToken1", JobConfiguration.Mode = [other than current], other Recording Job Configuration parameters without change) to configure Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">SetRecordingJobConfigurationResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step 21 until Notification for selected RecordingJob is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:RecordingConfig/RecordingJobConfiguration for received Notify message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "RecordingJobToken" and Value is equal to selected Recording Job Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Data.ElementItem item with Name = "Configuration" and Value with type is equal to tt:RecordingJobConfiguration (validation with XML Schema complex type).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetRecordingJobConfigurationRequest</emphasis> message for selected Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRecordingJobConfigurationResponse</emphasis> messages from the DUT. Verify that Data.ElementItem item with Name = "Configuration" from Notification message has the same value with JobConfiguration element from <emphasis role="bold">GetRecordingJobConfigurationResponse</emphasis> messages for selected Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                Restore DUT settings.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">
            PASS –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">
            FAIL –
          </emphasis>
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">SetRecordingJobConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetRecordingJobsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">CreateRecordingJobResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:RecordingConfig/RecordingJobConfiguration for selected Recording Job.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem, Data.SimpleItem, or Data.ElementItem wrong type of Value fields, invalid RecordingJobToken or Configuration values).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT does not return a valid tns1:RecordingConfig/RecordingJobConfiguration Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step 21 will wait for Notification message until notification for selected Recording Job is received or Operation Delay after last notification expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires. If DUT returns UnacceptableTerminationTimeFault, resend Renew request with acceptable InitialTerminationTime from UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>

    </section>
  </chapter>
  <appendix>
    <title>Helper Procedures and Additional Notes</title>
    <!--A.1-->
    <section xml:id="Annex_ComparisonOfRecordings"
             xreflabel="Annex A.1">
      <title>Comparison of parameter values for the same recording in GetRecordingsResponse message and in GetRecordingConfigurationResponse message</title>
      <para>
        Compare RecordingItem.Configuration item from GetRecordings response and RecordingConfiguration item from GetRecordingConfiguration response. Parameter values will be assumed as the same, if they have the same values for:
      </para>
      <para>
        <itemizedlist>
          <listitem>
            <para>
              Source.SourceId
            </para>
          </listitem>
          <listitem>
            <para>
              Source.Name
            </para>
          </listitem>
          <listitem>
            <para>
              Source.Location
            </para>
          </listitem>
          <listitem>
            <para>
              Source.Description
            </para>
          </listitem>
          <listitem>
            <para>
              Source.Address
            </para>
          </listitem>
          <listitem>
            <para>
              Content
            </para>
          </listitem>
          <listitem>
            <para>
              MaximumRetentionTime
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.2-->
    <section xml:id="Annex_ComparisonOfRecordingJobs"
             xreflabel="Annex A.2">
      <title>Comparison of parameter values for the same recording job in GetRecordingJobsResponse message and in GetRecordingJobConfigurationResponse message</title>
      <para>
        Compare JobConfiguration items from GetRecordingJobs response and from GetRecordingJobConfiguration response. Parameter values will be assumed as the same, if they have the same values for:
      </para>
      <para>
        <itemizedlist>
          <listitem>
            <para>
              JobConfiguration.RecordingToken
            </para>
          </listitem>
          <listitem>
            <para>
              JobConfiguration.Mode
            </para>
          </listitem>
          <listitem>
            <para>
              JobConfiguration.Priority
            </para>
          </listitem>
          <listitem>
            <para>
              JobConfiguration.Source.SourceToken.Token
            </para>
          </listitem>
          <listitem>
            <para>
              JobConfiguration.Source.SourceToken.Type
            </para>
          </listitem>
          <listitem>
            <para>
              JobConfiguration.Source.Tracks.SourceTag
            </para>
          </listitem>
          <listitem>
            <para>
              JobConfiguration.Source.Tracks.Destination
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.3-->
    <section xml:id="Annex_ComparisonOfRecordingJobs2"
             xreflabel="Annex A.3">
      <title>Comparison of parameter values for the same recording job in GetRecordingJobsResponse message and in GetRecordingJobStateResponse message</title>
      <para>
        For comparing parameter values for the same recording job item from <emphasis role="bold">GetRecordingJobsResponse</emphasis> message and <emphasis role="bold">GetRecordingJobStateResponse</emphasis> message the following steps will be done:
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Verify that for each RecordingJobSource from <emphasis role="bold">GetRecordingJobsResponse</emphasis> there is a corresponding item with the same SourceToken in RecordingJobStateInformation from <emphasis role="bold">GetRecordingJobStateResponse</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify that for each RecordingJobStateSource from <emphasis role="bold">GetRecordingJobStateResponse</emphasis> there is a corresponding item with the same SourceToken in RecordingJobConfiguration from <emphasis role="bold">GetRecordingJobsResponse</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              For each pair of corresponding RecordingJobSource and RecordingJobStateSource check that for any RecordingJobTrack with some SourceTag and Destination there is a corresponding RecordingJobStateTrack with the same SourceTag and Destination in RecordingJobStateSource.
            </para>
          </listitem>
        </orderedlist>
      </para>
    </section>
    <!--A.4-->
    <section xml:id="Annex_ComparisonOfTracks"
             xreflabel="Annex A.4">
      <title>Comparison of parameter values for the same track in GetTrackConfigurationResponse message and in GetRecordingsResponse message</title>
      <para>
        Compare RecordingItem.Tracks.Track.TrackToken.Configuration item from GetRecordings response and TrackConfiguration item from GetRecordingConfiguration response. Parameter values will be assumed as the same, if they have the same values for TrackType and Description.
      </para>
    </section>
    <!--A.5-->
    <section xml:id="Annex_ComparisonOfReceivers"
             xreflabel="Annex A.5">
      <title>PullMessages algorithm for check Recording Job State changing</title>
      <para>
        If the state field of the RecordingJobStateInformation structure changes, the device sends the correspond event. Algorithm of <emphasis role="bold">PullMessages</emphasis> sending for receiving event with the expected state:
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> at the T1 moment the DUT received answer to request which should cause Recording Job State changing (i.e. at the T1 moment Recording Job State at the device has definitely been changed)
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1 to find NotificationMessage containing event with required JobState for used Recording.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              If no events are returned and CurrentTime of sending <emphasis role="bold" service="skip">PullMessages</emphasis> is more than T1+delta, where delta is Operation delay time, skip other steps. If no events returned and CurrentTime of sending <emphasis role="bold" service="skip">PullMessages</emphasis> is less or equal than T1+delta go to the step 1.
            </para>
          </listitem>
          <listitem>
            <para>
              If event is returned, check UTC Time of the received event. If UTC Time is more than T1+delta, skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If PropertyOperation is equal to "Changed" check event. Otherwise, go to the step 1.
            </para>
          </listitem>
          <listitem>
            <para>
              Find event with Source.SimpleItem item with Name = "RecordingJobToken" and Value is equal to "JobToken1", Data.SimpleItem item with Name = "State" and Value is equal to required state ("Active", PartiallyActive" or "Idle").
            </para>
          </listitem>
          <listitem>
            <para>
              If event is not found, go to the step 1, otherwise, go to the next step.
            </para>
          </listitem>
          <listitem>
            <para>
              In the found Message check Values of State.State and State.Sources.State of Data.ElementItemDescription item. Check that values are equal to the required state ("Active", "PartiallyActive" or "Idle").
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        Test will be assumed as failed in case:
      </para>
      <para>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send a valid <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT did not send NotificationMessage with event PropertyOperation = "Changed".
            </para>
          </listitem>
          <listitem>
            <para>
              There was no event which has Source.SimpleItemDescription item with Name = "RecordingJobToken" and Value is equal to "JobToken1", Data.SimpleItemDescription item with Name = "State" and Value is equal to required state.
            </para>
          </listitem>
          <listitem>
            <para>
              State.State parameter value of Data.ElementItemDescription item in NotificationMessage is not equal to required state.
            </para>
          </listitem>
          <listitem>
            <para>
              State.Sources.State parameter value of Data.ElementItemDescription item in NotificationMessage is not equal to required state.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.6-->
    <section xml:id="Annex_PullMessagesReceiverState"
             xreflabel="Annex A.6">
      <title>PullMessages algorithm for check Receiver State changing</title>
      <para>
        If the receiver changes state, the device sends a corresponding event. Algorithm of <emphasis role="bold">PullMessages</emphasis> sending for receiving event with expected state.
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1 to find NotificationMessage containing event with required ReceiverState for used Recording.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              If no events returned and CurrentTime of sending <emphasis role="bold" service="skip">PullMessages</emphasis> is more than T1+delta, where delta is Operation delay time, skip other steps. If no events are returned and CurrentTime of sending <emphasis role="bold" service="skip">PullMessages</emphasis> is less or equal to T1+delta, go to the step 1.
            </para>
          </listitem>
          <listitem>
            <para>
              If event is returned, check UTC Time of the received event. If UTC Time is more than T1+delta, skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              Find event with Source.SimpleItemDescription Description item with Name = "ReceiverToken" and Value is equal to "ReceiverToken1", Data.SimpleItemDescription Description item with Name = "NewState" and Value is equal to required receiver state.
            </para>
          </listitem>
          <listitem>
            <para>
              If event is not found, go to the step 1, otherwise, go to the next step.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        Test will be assumed as failed in case:
      </para>
      <para>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send a valid <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT did not send NotificationMessage with event which has Source.SimpleItemDescription Description item with Name = "ReceiverToken" and Value is equal to "ReceiverToken1", Data.SimpleItemDescription Description item with Name = "NewState" and Value is equal to required receiver state.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.7-->
    <section xml:id="Annex_RecordingCreationPrerequisite"
             xreflabel="Annex A.7">
      <title>Creation of Recording prerequisite</title>
      <para>
        Sometimes it is impossible to create a new Recording for the reason that maximum number of recordings supported by the device has been reached. ONVIF Client follows the following procedure of recording deleting:
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilitiesRequest</emphasis> message to retrieve Capabilities for the recording service.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              If total number of recordings is less than MaxRecordings Capabilities element, skip other steps and run test. If MaxRecordings Capabilities is skipped, return to test procedure steps and try performing CreateRecording step. In error case perform 6-8 steps from this Annex.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">DeleteRecordingRequest</emphasis> message (RecordingToken = Token1, where Token1 is the first recording token from the <emphasis role="bold">GetRecordingsResponse</emphasis>) to delete recording.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify the <emphasis role="bold">DeleteRecordingResponse</emphasis> message or SOAP 1.2 fault message (Action/CannotDelete or others) from the DUT. If <emphasis role="bold">DeleteRecordingResponse</emphasis> message received skip other steps and run test.
            </para>
          </listitem>
          <listitem>
            <para>
              Repeat steps 6-7 for the next recording token. If there is no next Recording Token then skip the test.
            </para>
          </listitem>
        </orderedlist>
      </para>
    </section>
    <!--A.8-->
    <section xml:id="Annex_RecordingSourceInformationParametersMaximumLength"
             xreflabel="Annex A.8">
      <title>Recording Source Information Parameters Maximum Length</title>
      <para>
        There are the following limitations on maximum length of recording source parameters that shall be used during tests by ONVIF Device Test Tool to prevent faults from the DUT:
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              SourceId shall be less than or equal to 128 characters.
            </para>
          </listitem>
          <listitem>
            <para>
              Name shall be less than or equal to 20 characters.
            </para>
          </listitem>
          <listitem>
            <para>
              Address shall be less than or equal to 128 characters.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> these limitations will not be used, if ONVIF Device Test Tool reuses values receiving from the DUT.
      </para>
    </section>
    <!--A.9-->
    <section xml:id="Annex_CreationOfRecording"
             xreflabel="Annex A.9">
      <title>Selection or Creation of Recording for recording job creation</title>
      <para>
        ONVIF Client retrieves DynamicRecording capabilities from the DUT and follows the following procedure of Recoding creation or selection for using recording for recording job creation:
      </para>
      <para>
        If DynamicRecording is True, ONVIF Client follows the following procedure of Recording creation:
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">CreateRecordingRequest</emphasis> message with RecordingConfiguration.Source.SourceId as any URI, RecordingConfiguration.Source.Name = "CameraName", RecordingConfiguration.Source.Location = "LocationDescription", RecordingConfiguration.Source.Description = "Source Description", RecordingConfiguration.Source.Address as address of the device, RecordingConfiguration.Content = "Recording from device", RecordingConfiguration.MaximumRetentionTime = "PT0S" to create a new recording.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify the <emphasis role="bold">CreateRecordingResponse</emphasis> message from the DUT (RecordingToken = "RecordingToken1"). If SOAP 1.2 fault message was returned, than skip other steps and follow the procedure for DynamicRecording=false case.
            </para>
          </listitem>
          <listitem>
            <para>
              Onvif Client will invoke <emphasis role="bold">GetRecordingOptionsRequest</emphasis> message (RecordinToken="RecordingToken1") to get number of spare jobs that can be created for the recording.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">GetRecordingOptionsResponse</emphasis> message from the DUT. If Options.Job.Spare > RequiredSpareJobs, then return to test and use created Recording.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client will try deleting the RecordingJob via DeleteRecordingJob command (JobToken as Token of the first job received from the <emphasis role="bold">GetRecordingJobsResponse</emphasis> message) and repeat steps 3-5.
            </para>
          </listitem>
          <listitem>
            <para>
              Repeare step 5 with the next Recording Job.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        If DynamicRecording is False or recording creation procedure has been failed, ONVIF Client follows the following procedure of Recording selection:
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetRecordingOptionsRequest</emphasis> message (RecordingToken as Token of the first recording in the <emphasis role="bold">GetRecordingsResponse</emphasis> message which have track type compliant with Capabilities.Encoding value in <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message) to get number of spare jobs that can be created for the recording.
            </para>
          </listitem>
          <listitem>
            <para>
              If Options.Job.Spare >RequiredSpareJobs, then return to the test and use this Recording.
            </para>
          </listitem>
          <listitem>
            <para>
              Repeat steps 3-4 for the next RecordingToken from the <emphasis role="bold">GetRecordingsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              If there is no other Recording, then ONVIF Client will try deleting the RecordingJob via DeleteRecordingJob command (JobToken as Token of the first job received from the <emphasis role="bold">GetRecordingJobsResponse</emphasis> message) and repeat steps3-5.
            </para>
          </listitem>
          <listitem>
            <para>
              Repeat step 6 with the next Recording Job.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> Test will be assumed as failed in case:
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT did not send a valid <emphasis role="bold">GetRecordingOptionsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_RecordingSourceInformationParametersMaximumLength"/> for Recording Source Information Parameters Length limitations.
      </para>
    </section>
    <!--A.10-->
    <section xml:id="Annex_AutoCreationOfReceiver"
             xreflabel="Annex A.10">
      <title>Auto Creation of Receiver</title>
      <para>
        For recording data from receiver ONVIF Client follows the following procedure of Auto Receiver creation by Create Recording Job with Idle Mode and Auto Create Receiver parameter:
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">CreateRecordingJobRequest</emphasis> message (JobConfiguration.RecordingToken = "RecordingToken1", JobConfiguration.Mode = "Idle", JobConfiguration.Priority = 1, no JobConfiguration.Source.SourceToken.Token, JobConfiguration.Source.SourceToken.Type = "http://www.onvif.org/ver10/schema/Receiver", JobConfiguration.Source.AutoCreateReceiver = true) to create a recording job and auto create receiver.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify the <emphasis role="bold">CreateRecordingJobResponse</emphasis> message (JobToken = "JobToken1").
            </para>
          </listitem>
          <listitem>
            <para>
              Verify that the JobConfiguration returned from CreateRecordingJob is identical to the JobConfiguration passed into CreateRecordingJob, except for the ReceiverToken and the AutoCreateReceiver.
            </para>
          </listitem>
          <listitem>
            <para>
              Check that <emphasis role="bold">CreateRecordingJobResponse</emphasis> message contains JobConfiguration.Source.SourceToken.Token = ReceiverToken1 with assigned receiver Token. Check that AutoCreateReceiver field is omitted.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetReceiversRequest</emphasis> message to retrieve full list of receivers.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">GetReceiversResponse</emphasis> message from the DUT. Check that list of all receivers contains receiver with token equal to ReceiverToken1.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If Receiver was not created for the reason Maximum Number of receivers has been reached, then delete receiver manually and run Annex's steps again.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> Test will be assumed as failed in case:
      </para>
      <para>
        <itemizedlist>
          <listitem>
            <para>
              The DUT sent <emphasis role="bold">CreateRecordingJobResponse</emphasis> message with at least one of the following JobConfiguration parameters values of which differ from the ones sent in <emphasis role="bold">CreateRecordingJobRequest</emphasis> message: JobConfiguration.RecordingToken, JobConfiguration.Mode, and JobConfiguration.Priority.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT sent <emphasis role="bold">CreateRecordingJobResponse</emphasis> message which didn't contain JobConfiguration.Source.SourceToken.Token element with assigned receiver Token
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT sent JobConfiguration.Source.SourceToken.Type in <emphasis role="bold">CreateRecordingJobRequest</emphasis> message differs from http://www.onvif.org/ver10/schema/Receiver.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT sent <emphasis role="bold">CreateRecordingJobResponse</emphasis> message which contained AutoCreateReceiver field.
            </para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">GetReceiversResponse</emphasis> message did not contain Recording with Token = JobConfiguration.Source.SourceToken.Token from <emphasis role="bold">CreateRecordingJobResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.11-->
    <section xml:id="Annex_SelectionOfRecording"
             xreflabel="Annex A.11">
      <title>Selection of Recording for track creation</title>
      <para>
        If during a test, creation of any track is required, ONVIF Client will follow the following procedure for selection of recording:
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetRecordingOptionsRequest</emphasis> message (RecordingToken as Token of the first recording in the <emphasis role="bold">GetRecordingsResponse</emphasis> message) to get total spare number of tracks that can be added to this recording.
            </para>
          </listitem>
          <listitem>
            <para>
              If Options.Track.SpareTotal>0, then return to the test and use this Recording for creation of track. Type of creation track shall correspond to value of SpareVideo, SpareAudio or SpareMetadata greater than 0.
            </para>
          </listitem>
          <listitem>
            <para>
              Repeat steps 3-4 for the next RecordingToken from the <emphasis role="bold">GetRecordingsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              If there are no the next Recording then try do delete Track from recording with track and repeat 4-5 steps.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If list of recording items is empty, Onvif Client will retrieve DynamicRecording capability from the DUT. In case Dynamic capability is true Onvif Client will create recording via CreateRecording command. Otherwise Onvif Client fails the test.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If DUT returns SOAP fault (Action/CannotDelete) message to DeleteTrack request, then ONVIF will try deleting other tracks.
      </para>
    </section>
    <!--A.12-->
    <section xml:id="Annex_SelectionOfRecordingMediaProfile"
             xreflabel="Annex A.12">
      <title>Selection or Creation of Recording for recording job creation on a Media profile</title>
      <para>
        ONVIF Client retrieves DynamicRecording capabilities from the DUT and follows the following procedure of Recoding creation or selection for using recording for recording job creation on a Media profile:
      </para>
      <para>
        If DynamicRecording is True, ONVIF Client follows the following procedure of Recording creation:
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">CreateRecordingRequest</emphasis> message with RecordingConfiguration.Source.SourceId as any URI, RecordingConfiguration.Source.Name = "CameraName", RecordingConfiguration.Source.Location = "LocationDescription", RecordingConfiguration.Source.Description = "Source Description", RecordingConfiguration.Source.Address as address of the device, RecordingConfiguration.Content = "Recording from device", RecordingConfiguration.MaximumRetentionTime = "PT0S" to create a new recording.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify the <emphasis role="bold">CreateRecordingResponse</emphasis> message from the DUT (RecordingToken = "RecordingToken1"). If SOAP 1.2 fault message was returned, then skip other steps and follow the procedure for DynamicRecording=false case.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetRecordingOptionsRequest</emphasis> message (RecordinToken="RecordingToken1") to get Compatible Sources list and number of spare jobs that can be created for the recording.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">GetRecordingOptionsResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              If Options.Job.CompatibleSources list is empty, then ONVIF Client skips other steps and marks the test as failed.
            </para>
          </listitem>
          <listitem>
            <para>
              If Options.Job.Spare > RequiredSpareJobs return to the test and use created Recording.
            </para>
          </listitem>
          <listitem>
            <para>
              Client will try deleting the RecordingJob via DeleteRecordingJob command (JobToken as Token of the first job received from the <emphasis role="bold">GetRecordingJobsResponse</emphasis> message).
            </para>
          </listitem>
          <listitem>
            <para>
              Repeat 3-7 steps.
            </para>
          </listitem>
          <listitem>
            <para>
              Delete the next recording job via DeleteRecordingJob command and repeat step 8.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        If DynamicRecording is False or recording creation procedure has been failed, ONVIF Client follows the following procedure of Recording selection:
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetRecordingsRequest</emphasis> message to retrieve a complete recordings list.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify the <emphasis role="bold">GetRecordingsResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetRecordingOptionsRequest</emphasis> message (RecordingToken as Token of the first recording in the <emphasis role="bold">GetRecordingsResponse</emphasis> message) to get Compatible Sources list.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">GetRecordingOptionsResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              If Options.Job.CompatibleSources list is empty, then repeat 3-4 steps for the next recording. If there is no other recording, then ONVIF Client skips other steps and marks the test as failed.
            </para>
          </listitem>
          <listitem>
            <para>
              If Options.Job.Spare > RequiredSpareJobs returt to the test and use this Recording.
            </para>
          </listitem>
          <listitem>
            <para>
              Repeat steps 3-6 for the next RecordingToken from the <emphasis role="bold">GetRecordingsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              If there is no other Recording then ONVIF Client will try to delete the RecordingJob via DeleteRecordingJob command (JobToken as Token of the first job received from the <emphasis role="bold">GetRecordingJobsResponse</emphasis> message).
            </para>
          </listitem>
          <listitem>
            <para>
              Repeat 3-7 steps.
            </para>
          </listitem>
          <listitem>
            <para>
              Delete the next recording job via DeleteRecordingJob command and repeat step 9.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> Test will be assumed as failed in case:
      </para>
      <itemizedlist>
        <listitem>
          <para>
            The DUT did not send a valid <emphasis role="bold">GetRecordingsResponse</emphasis> message.
          </para>
        </listitem>
        <listitem>
          <para>
            The DUT did not send a valid <emphasis role="bold">GetRecordingOptionsResponse</emphasis> message.
          </para>
        </listitem>
      </itemizedlist>
      <para>
        <emphasis role="bold">Note:</emphasis> If new Recording was not created and there was no Recording with not empty Compatible Sources list then configure media profile or recording for test manually.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_RecordingSourceInformationParametersMaximumLength"/> for Recording Source Information Parameters Length limitations.
      </para>
    </section>
    <!--A.13-->
    <section xml:id="Annex_PullMessagesJobState"
             xreflabel="Annex A.13">
      <title>PullMessages algorithm for check Recording Job State initializing
      </title>
      <para>
        If Recording Job is created on the device, the device sends the corresponding event with "Initialized" PropertyOperation. Algorithm of <emphasis role="bold">PullMessages</emphasis> sending for receiving event with the expected state is the following:
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1 to find NotificationMessage containing event with required JobState for used Recording.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">PullMessagesResponse</emphasis> from the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              Repeat steps 1-2 until Notification for JobToken = JobToken1 with Data.SimpleItem item with Name = "State" and Value is equal to "Active" or "PartiallyActive" is received or operation delay time has expired.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> All Notification messages except messages with the expected recording job state will be ignored.
      </para>
    </section>
  </appendix>
</book>